{"id":"bec120720c70ecc5cdc0dca4f5903ac5","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/MockPYUSD.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MockPYUSD is ERC20 {\n    uint8 private _decimals;\n    bool public transferFailing;\n    mapping(address => bool) public forceFailOnTransfer;\n\n    constructor() ERC20(\"PayPal USD\", \"PYUSD\") {\n        _decimals = 6;\n        _mint(msg.sender, 1000000 * 10**_decimals); // 1m pyusd for testing\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return _decimals;\n    }\n\n    function mint(address to, uint256 amount) external {\n        _mint(to, amount);\n    }\n\n    function burn(address from, uint256 amount) external {\n        _burn(from, amount);\n    }\n\n    function setBalance(address account, uint256 amount) external {\n        uint256 currentBalance = balanceOf(account);\n        if (amount > currentBalance) {\n            _mint(account, amount - currentBalance);\n        } else if (amount < currentBalance) {\n            _burn(account, currentBalance - amount);\n        }\n    }\n\n    function setTransferFailing(bool failing) external {\n        transferFailing = failing;\n    }\n\n    function setForceFailOnTransfer(address account, bool fail) external {\n        forceFailOnTransfer[account] = fail;\n    }\n\n    function transfer(address to, uint256 amount) public override returns (bool) {\n        if (transferFailing || forceFailOnTransfer[msg.sender]) {\n            return false; // simulate transfer failures for testing\n        }\n        return super.transfer(to, amount);\n    }\n\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\n        if (transferFailing || forceFailOnTransfer[from]) {\n            return false;\n        }\n        return super.transferFrom(from, to, amount);\n    }\n}"},"contracts/RelayerRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract RelayerRegistry is ReentrancyGuard, Ownable {\n    using SafeERC20 for IERC20;\n    struct Relayer {\n        uint256 stakedAmount;\n        uint256 successfulExecutions;\n        uint256 failedExecutions;\n        uint256 totalFeesEarned;\n        uint256 withdrawalRequestTime;\n        bool isActive;\n        bool withdrawalRequested;\n    }\n\n    mapping(address => Relayer) public relayers;\n    uint256 public constant MINIMUM_STAKE = 1000e6; // 1000 pyusd\n    uint256 public constant SLASH_AMOUNT = 100e6;\n    uint256 public constant CONSECUTIVE_FAILURES_THRESHOLD = 3;\n    uint256 public constant SLASHING_COOLDOWN = 1 days;\n\n    uint256 public slashAmountConfig = SLASH_AMOUNT;\n    uint256 public failureThresholdConfig = CONSECUTIVE_FAILURES_THRESHOLD;\n\n    mapping(address => uint256) public lastSlashTime;\n    mapping(address => uint256) public consecutiveFailures;\n    mapping(address => bool) public isSlashed;\n\n    uint256 public constant WITHDRAWAL_DELAY = 7 days;\n    address public immutable PYUSD_ADDRESS;\n    address public subscriptionManager;\n\n    event RelayerRegistered(\n        address indexed relayer,\n        uint256 stakedAmount\n    );\n\n    event RelayerUnregistered(\n        address indexed relayer,\n        uint256 returnedStake\n    );\n\n    event WithdrawalRequested(\n        address indexed relayer,\n        uint256 requestTime\n    );\n\n    event ExecutionRecorded(\n        address indexed relayer,\n        bool success,\n        uint256 feeAmount\n    );\n\n    event RelayerSlashed(\n        address indexed relayer,\n        uint256 slashAmount,\n        uint256 remainingStake\n    );\n\n    event RelayerRestaked(\n        address indexed relayer,\n        uint256 amount,\n        uint256 newStake\n    );\n\n    event SlashingParametersUpdated(\n        uint256 slashAmount,\n        uint256 failureThreshold\n    );\n\n    event EmergencySlash(\n        address indexed relayer,\n        uint256 amount,\n        string reason\n    );\n\n    modifier onlySubscriptionManager() {\n        require(msg.sender == subscriptionManager, \"Only SubscriptionManager\");\n        _;\n    }\n\n    constructor(address _pyusdAddress) Ownable(msg.sender) {\n        require(_pyusdAddress != address(0), \"Invalid PYUSD address\");\n        PYUSD_ADDRESS = _pyusdAddress;\n    }\n\n    function setSubscriptionManager(address _subscriptionManager) external onlyOwner {\n        require(_subscriptionManager != address(0), \"Invalid address\");\n        require(subscriptionManager == address(0), \"Already set\");\n        subscriptionManager = _subscriptionManager;\n    }\n\n    function registerRelayer(uint256 stakeAmount) external nonReentrant {\n        require(relayers[msg.sender].stakedAmount == 0, \"Relayer already registered\");\n        require(stakeAmount >= MINIMUM_STAKE, \"Insufficient stake amount\");\n\n        // staking remains pyusd-specific while subscriptions may settle in other supported tokens\n        IERC20 token = IERC20(PYUSD_ADDRESS);\n        token.safeTransferFrom(msg.sender, address(this), stakeAmount);\n\n        relayers[msg.sender] = Relayer({\n            stakedAmount: stakeAmount,\n            successfulExecutions: 0,\n            failedExecutions: 0,\n            totalFeesEarned: 0,\n            isActive: true,\n            withdrawalRequestTime: 0,\n            withdrawalRequested: false\n        });\n        consecutiveFailures[msg.sender] = 0;\n        isSlashed[msg.sender] = false;\n        lastSlashTime[msg.sender] = 0;\n\n        emit RelayerRegistered(msg.sender, stakeAmount);\n    }\n\n    function requestWithdrawal() external {\n        Relayer storage relayer = relayers[msg.sender];\n        require(relayer.isActive, \"Relayer not active\");\n        require(relayer.stakedAmount > 0, \"Relayer not registered\");\n        require(!relayer.withdrawalRequested, \"Withdrawal already requested\");\n\n        relayer.withdrawalRequested = true;\n        relayer.withdrawalRequestTime = block.timestamp;\n\n        emit WithdrawalRequested(msg.sender, block.timestamp);\n    }\n\n    function unregisterRelayer() external nonReentrant {\n        Relayer storage relayer = relayers[msg.sender];\n        require(relayer.isActive, \"Relayer not active\");\n        require(relayer.stakedAmount > 0, \"Relayer not registered\");\n        require(relayer.withdrawalRequested, \"Must request withdrawal first\");\n        require(\n            block.timestamp >= relayer.withdrawalRequestTime + WITHDRAWAL_DELAY,\n            \"Withdrawal delay not met\"\n        );\n        require(!isSlashed[msg.sender], \"Relayer slashed\");\n\n\n        uint256 stakeToReturn = relayer.stakedAmount;\n        \n        // clear relayer state before transfer\n        relayer.isActive = false;\n        relayer.stakedAmount = 0;\n        relayer.withdrawalRequested = false;\n        relayer.withdrawalRequestTime = 0;\n\n        IERC20(PYUSD_ADDRESS).safeTransfer(msg.sender, stakeToReturn);\n\n        emit RelayerUnregistered(msg.sender, stakeToReturn);\n\n        delete relayers[msg.sender];\n        delete consecutiveFailures[msg.sender];\n        delete lastSlashTime[msg.sender];\n        delete isSlashed[msg.sender];\n    }\n\n    function recordExecution(\n        address relayerAddress,\n        bool success,\n        uint256 feeAmount\n    ) external onlySubscriptionManager {\n        Relayer storage relayer = relayers[relayerAddress];\n        require(relayer.stakedAmount > 0, \"Relayer not registered\");\n        require(relayer.isActive, \"Relayer not active\");\n        require(!isSlashed[relayerAddress], \"Relayer slashed\");\n\n        // track relayer performance and earnings\n        if (success) {\n            relayer.successfulExecutions++;\n            relayer.totalFeesEarned += feeAmount;\n            consecutiveFailures[relayerAddress] = 0;\n        } else {\n            relayer.failedExecutions++;\n            consecutiveFailures[relayerAddress]++;\n            if (consecutiveFailures[relayerAddress] >= failureThresholdConfig) {\n                _slashRelayer(relayerAddress, slashAmountConfig);\n            }\n        }\n\n        emit ExecutionRecorded(relayerAddress, success, feeAmount);\n    }\n\n    function isRelayerActive(address relayerAddress) external view returns (bool) {\n        return relayers[relayerAddress].isActive;\n    }\n\n    function getRelayerStats(address relayerAddress) external view returns (\n        uint256 stakedAmount,\n        uint256 successfulExecutions,\n        uint256 failedExecutions,\n        uint256 totalFeesEarned,\n        bool isActive\n    ) {\n        Relayer storage relayer = relayers[relayerAddress];\n        return (\n            relayer.stakedAmount,\n            relayer.successfulExecutions,\n            relayer.failedExecutions,\n            relayer.totalFeesEarned,\n            relayer.isActive\n        );\n    }\n\n    function getRelayerInfo(address relayerAddress) external view returns (Relayer memory) {\n        return relayers[relayerAddress];\n    }\n\n    function canExecute(address relayerAddress) external view returns (bool) {\n        Relayer storage relayer = relayers[relayerAddress];\n        return relayer.isActive && !isSlashed[relayerAddress] && relayer.stakedAmount >= MINIMUM_STAKE;\n    }\n\n    function getConsecutiveFailures(address relayerAddress) external view returns (uint256) {\n        return consecutiveFailures[relayerAddress];\n    }\n\n    function getTimeUntilSlashCooldown(address relayerAddress) external view returns (uint256) {\n        if (block.timestamp >= lastSlashTime[relayerAddress] + SLASHING_COOLDOWN) {\n            return 0;\n        }\n        return (lastSlashTime[relayerAddress] + SLASHING_COOLDOWN) - block.timestamp;\n    }\n\n    function restakeAfterSlash(uint256 amount) external nonReentrant {\n        require(isSlashed[msg.sender], \"Relayer not slashed\");\n        require(amount > 0, \"Invalid amount\");\n        require(relayers[msg.sender].stakedAmount > 0, \"Relayer not registered\");\n\n        IERC20(PYUSD_ADDRESS).safeTransferFrom(msg.sender, address(this), amount);\n\n        Relayer storage relayer = relayers[msg.sender];\n        relayer.stakedAmount += amount;\n\n        if (relayer.stakedAmount >= MINIMUM_STAKE) {\n            relayer.isActive = true;\n            isSlashed[msg.sender] = false;\n        }\n\n        emit RelayerRestaked(msg.sender, amount, relayer.stakedAmount);\n    }\n\n    function emergencySlash(address relayerAddress, uint256 amount, string calldata reason) external onlyOwner {\n        require(amount > 0, \"Invalid slash amount\");\n        Relayer storage relayer = relayers[relayerAddress];\n        require(relayer.stakedAmount >= amount, \"Insufficient stake\");\n\n        require(relayer.stakedAmount > 0, \"Relayer not registered\");\n\n        _applySlash(relayerAddress, amount);\n\n        emit EmergencySlash(relayerAddress, amount, reason);\n    }\n\n    function emergencyUnslash(address relayerAddress) external onlyOwner {\n        require(isSlashed[relayerAddress], \"Relayer not slashed\");\n\n        isSlashed[relayerAddress] = false;\n        consecutiveFailures[relayerAddress] = 0;\n\n        Relayer storage relayer = relayers[relayerAddress];\n        if (relayer.stakedAmount >= MINIMUM_STAKE) {\n            relayer.isActive = true;\n        }\n    }\n\n    function updateSlashingParameters(uint256 slashAmount, uint256 failureThreshold) external onlyOwner {\n        require(slashAmount > 0, \"Invalid slash amount\");\n        require(failureThreshold > 0, \"Invalid threshold\");\n\n        slashAmountConfig = slashAmount;\n        failureThresholdConfig = failureThreshold;\n\n        emit SlashingParametersUpdated(slashAmount, failureThreshold);\n    }\n\n    function _slashRelayer(address relayerAddress, uint256 amount) internal {\n        Relayer storage relayer = relayers[relayerAddress];\n        require(relayer.stakedAmount >= amount, \"Insufficient stake to slash\");\n        require(block.timestamp >= lastSlashTime[relayerAddress] + SLASHING_COOLDOWN, \"Slash cooldown active\");\n\n        _applySlash(relayerAddress, amount);\n    }\n\n    function _applySlash(address relayerAddress, uint256 amount) internal {\n        Relayer storage relayer = relayers[relayerAddress];\n        require(relayer.stakedAmount >= amount, \"Insufficient stake\");\n\n        lastSlashTime[relayerAddress] = block.timestamp;\n\n        relayer.stakedAmount -= amount;\n        isSlashed[relayerAddress] = true;\n        consecutiveFailures[relayerAddress] = 0;\n\n        if (relayer.stakedAmount < MINIMUM_STAKE) {\n            relayer.isActive = false;\n        }\n\n        emit RelayerSlashed(relayerAddress, amount, relayer.stakedAmount);\n    }\n}\n"},"contracts/SubscriptionManager.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.28;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"./RelayerRegistry.sol\";\n\ncontract SubscriptionManager is ReentrancyGuard, Ownable {\n    enum SubscriptionStatus {\n        ACTIVE,\n        PAUSED,\n        CANCELLED,\n        EXPIRED,\n        COMPLETED\n    }\n\n    struct Subscription {\n        address subscriber;\n        address merchant;\n        uint256 amount;\n        uint256 interval;\n        uint256 startTime;\n        uint256 maxPayments;\n        uint256 maxTotalAmount;\n        uint256 expiry;\n        uint256 nonce;\n        address token;\n        SubscriptionStatus status;\n    }\n\n    struct SubscriptionIntent {\n        address subscriber;\n        address merchant;\n        uint256 amount;\n        uint256 interval;\n        uint256 startTime;\n        uint256 maxPayments;\n        uint256 maxTotalAmount;\n        uint256 expiry;\n        uint256 nonce;\n        address token;\n    }\n\n    mapping(bytes32 => Subscription) public subscriptions;\n    mapping(bytes32 => uint256) public executedPayments;\n    mapping(address => uint256) public currentNonce;\n    mapping(address => bool) public supportedTokens;\n    mapping(bytes32 => address) public subscriptionToken;\n    mapping(bytes32 => uint256) public ethDeposits;\n    mapping(address => uint256) public activeSubscriptionCounts;\n    address[] private supportedTokenList;\n    mapping(address => uint256) private supportedTokenIndex;\n\n    RelayerRegistry public immutable RELAYER_REGISTRY;\n    uint256 public constant PROTOCOL_FEE_BPS = 50; // 0.5% protocol fee\n\n    bytes32 private immutable DOMAIN_SEPARATOR;\n    bytes32 public constant SUBSCRIPTION_INTENT_TYPEHASH = keccak256(\n        \"SubscriptionIntent(address subscriber,address merchant,uint256 amount,uint256 interval,uint256 startTime,uint256 maxPayments,uint256 maxTotalAmount,uint256 expiry,uint256 nonce,address token)\"\n    );\n    bytes32 public constant PAUSE_REQUEST_TYPEHASH = keccak256(\n        \"PauseRequest(bytes32 subscriptionId,uint256 nonce)\"\n    );\n    bytes32 public constant RESUME_REQUEST_TYPEHASH = keccak256(\n        \"ResumeRequest(bytes32 subscriptionId,uint256 nonce)\"\n    );\n\n    event SubscriptionCreated(\n        bytes32 indexed subscriptionId,\n        address indexed subscriber,\n        address indexed merchant,\n        address token,\n        uint256 amount,\n        uint256 interval,\n        uint256 maxPayments,\n        uint256 maxTotalAmount,\n        uint256 expiry\n    );\n\n    event SubscriptionPaused(bytes32 indexed subscriptionId, address indexed subscriber);\n\n    event SubscriptionResumed(bytes32 indexed subscriptionId, address indexed subscriber);\n\n    event SubscriptionCancelled(\n        bytes32 indexed subscriptionId,\n        address indexed subscriber,\n        address indexed merchant\n    );\n\n    event PaymentExecuted(\n        bytes32 indexed subscriptionId,\n        address indexed subscriber,\n        address indexed merchant,\n        address token,\n        uint256 paymentNumber,\n        uint256 amount,\n        uint256 fee,\n        address relayer\n    );\n\n    event PaymentFailed(\n        bytes32 indexed subscriptionId,\n        address indexed subscriber,\n        address indexed merchant,\n        uint256 amount,\n        string reason\n    );\n\n    event TokenAdded(address indexed token);\n    event TokenRemoved(address indexed token);\n\n    constructor(address[] memory supportedTokenAddresses, address _relayerRegistry)\n        Ownable(msg.sender)\n    {\n        require(_relayerRegistry != address(0), \"Invalid relayer registry address\");\n\n        RELAYER_REGISTRY = RelayerRegistry(_relayerRegistry);\n\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"),\n                keccak256(bytes(\"Aurum\")),\n                keccak256(bytes(\"1\")),\n                block.chainid,\n                address(this)\n            )\n        );\n\n        _addSupportedTokenInternal(address(0), false);\n        for (uint256 i = 0; i < supportedTokenAddresses.length; i++) {\n            address token = supportedTokenAddresses[i];\n            if (token == address(0)) {\n                continue;\n            }\n            _addSupportedTokenInternal(token, true);\n        }\n    }\n\n    receive() external payable {}\n\n    function verifyIntent(\n        SubscriptionIntent calldata intent,\n        bytes calldata signature\n    ) public view returns (bool valid, address signer) {\n        bytes32 structHash = _hashIntent(intent);\n        bytes32 digest = keccak256(\n            abi.encodePacked(\"\\x19\\x01\", _domainSeparatorV4(), structHash)\n        );\n\n        address recovered = ECDSA.recover(digest, signature);\n        return (recovered == intent.subscriber, recovered);\n    }\n\n    function addSupportedToken(address token) external onlyOwner {\n        require(token != address(0), \"eth already enabled\");\n        _addSupportedTokenInternal(token, true);\n    }\n\n    function removeSupportedToken(address token) external onlyOwner {\n        require(token != address(0), \"cannot remove eth support\");\n        require(supportedTokens[token], \"token not supported\");\n        require(activeSubscriptionCounts[token] == 0, \"Active subscriptions present\");\n\n        supportedTokens[token] = false;\n\n        uint256 index = supportedTokenIndex[token];\n        require(index != 0, \"token index missing\");\n        uint256 lastIndex = supportedTokenList.length;\n        if (index != lastIndex) {\n            address lastToken = supportedTokenList[lastIndex - 1];\n            supportedTokenList[index - 1] = lastToken;\n            supportedTokenIndex[lastToken] = index;\n        }\n        supportedTokenList.pop();\n        supportedTokenIndex[token] = 0;\n\n        emit TokenRemoved(token);\n    }\n\n    function getSupportedTokens() external view returns (address[] memory) {\n        return supportedTokenList;\n    }\n\n    function getSubscriptionToken(bytes32 subscriptionId) external view returns (address) {\n        return subscriptionToken[subscriptionId];\n    }\n\n    function getNextNonce(address _subscriber) external view returns (uint256) {\n        return currentNonce[_subscriber];\n    }\n\n    function getSubscription(bytes32 subscriptionId) external view returns (Subscription memory) {\n        return subscriptions[subscriptionId];\n    }\n\n    function getPaymentCount(bytes32 subscriptionId) external view returns (uint256) {\n        return executedPayments[subscriptionId];\n    }\n\n    function getNextPaymentTime(bytes32 subscriptionId) external view returns (uint256) {\n        Subscription storage subscription = subscriptions[subscriptionId];\n        require(subscription.subscriber != address(0), \"Subscription does not exist\");\n\n        uint256 paymentsExecuted = executedPayments[subscriptionId];\n        return subscription.startTime + (paymentsExecuted * subscription.interval);\n    }\n\n    function isSubscriptionActive(bytes32 subscriptionId) external view returns (bool) {\n        Subscription storage subscription = subscriptions[subscriptionId];\n        return subscription.subscriber != address(0) && subscription.status == SubscriptionStatus.ACTIVE;\n    }\n\n    function createSubscription(\n        SubscriptionIntent calldata intent,\n        bytes calldata signature\n    ) external returns (bytes32 subscriptionId) {\n        require(intent.nonce == currentNonce[intent.subscriber], \"Invalid nonce\");\n        require(supportedTokens[intent.token], \"Token not supported\");\n\n        (bool valid, address signer) = verifyIntent(intent, signature);\n        require(valid && signer == intent.subscriber, \"Invalid signature\");\n\n        _validateSubscriptionParams(intent);\n\n        subscriptionId = keccak256(abi.encodePacked(_hashIntent(intent), signature));\n\n        require(subscriptions[subscriptionId].subscriber == address(0), \"Subscription already exists\");\n\n        if (intent.token != address(0)) {\n            uint256 requiredAllowance = intent.amount * intent.maxPayments;\n            require(\n                IERC20(intent.token).allowance(intent.subscriber, address(this)) >= requiredAllowance,\n                \"Insufficient token allowance\"\n            );\n        }\n\n        subscriptions[subscriptionId] = Subscription({\n            subscriber: intent.subscriber,\n            merchant: intent.merchant,\n            amount: intent.amount,\n            interval: intent.interval,\n            startTime: intent.startTime,\n            maxPayments: intent.maxPayments,\n            maxTotalAmount: intent.maxTotalAmount,\n            expiry: intent.expiry,\n            nonce: intent.nonce,\n            token: intent.token,\n            status: SubscriptionStatus.ACTIVE\n        });\n\n        subscriptionToken[subscriptionId] = intent.token;\n        activeSubscriptionCounts[intent.token] += 1;\n\n        currentNonce[intent.subscriber]++;\n\n        emit SubscriptionCreated(\n            subscriptionId,\n            intent.subscriber,\n            intent.merchant,\n            intent.token,\n            intent.amount,\n            intent.interval,\n            intent.maxPayments,\n            intent.maxTotalAmount,\n            intent.expiry\n        );\n\n        return subscriptionId;\n    }\n\n    function executeSubscription(bytes32 subscriptionId, address relayer) external nonReentrant {\n        require(relayer == msg.sender, \"Relayer mismatch\");\n        require(RELAYER_REGISTRY.canExecute(msg.sender), \"Relayer not authorized\");\n\n        Subscription storage subscription = subscriptions[subscriptionId];\n\n        require(subscription.subscriber != address(0), \"Subscription does not exist\");\n        require(subscription.status == SubscriptionStatus.ACTIVE, \"Subscription not active\");\n\n        address token = subscriptionToken[subscriptionId];\n        require(supportedTokens[token], \"Token no longer supported\");\n\n        if (block.timestamp > subscription.expiry) {\n            _decrementActiveCount(subscriptionId);\n            subscription.status = SubscriptionStatus.EXPIRED;\n            emit PaymentFailed(\n                subscriptionId,\n                subscription.subscriber,\n                subscription.merchant,\n                subscription.amount,\n                \"Subscription expired\"\n            );\n            RELAYER_REGISTRY.recordExecution(msg.sender, false, 0);\n            return;\n        }\n\n        require(_isPaymentDue(subscriptionId), \"Payment not due yet\");\n\n        uint256 currentPaymentNumber = executedPayments[subscriptionId] + 1;\n        uint256 fee = (subscription.amount * PROTOCOL_FEE_BPS) / 10000;\n\n        if (!_canExecutePayment(subscriptionId, token)) {\n            emit PaymentFailed(\n                subscriptionId,\n                subscription.subscriber,\n                subscription.merchant,\n                subscription.amount,\n                \"Execution constraints not met\"\n            );\n            RELAYER_REGISTRY.recordExecution(msg.sender, false, 0);\n            return;\n        }\n\n        uint256 merchantAmount = subscription.amount - fee;\n        bool paymentSuccess;\n        string memory failureReason;\n\n        if (token == address(0)) {\n            if (ethDeposits[subscriptionId] < subscription.amount) {\n                failureReason = \"Insufficient ETH deposit\";\n            } else {\n                (bool sentMerchant, ) = subscription.merchant.call{value: merchantAmount}(\"\");\n                if (!sentMerchant) {\n                    failureReason = \"Merchant transfer failed\";\n                } else {\n                    (bool sentFee, ) = msg.sender.call{value: fee}(\"\");\n                    require(sentFee, \"Fee transfer failed\");\n                    ethDeposits[subscriptionId] -= subscription.amount;\n                    paymentSuccess = true;\n                }\n            }\n        } else {\n            (paymentSuccess, failureReason) = _attemptPayment(subscription, token, merchantAmount, fee);\n        }\n\n        if (!paymentSuccess) {\n            if (bytes(failureReason).length == 0) {\n                failureReason = \"Payment execution failed\";\n            }\n            emit PaymentFailed(\n                subscriptionId,\n                subscription.subscriber,\n                subscription.merchant,\n                subscription.amount,\n                failureReason\n            );\n            RELAYER_REGISTRY.recordExecution(msg.sender, false, 0);\n            return;\n        }\n\n        executedPayments[subscriptionId]++;\n\n        emit PaymentExecuted(\n            subscriptionId,\n            subscription.subscriber,\n            subscription.merchant,\n            token,\n            currentPaymentNumber,\n            subscription.amount,\n            fee,\n            msg.sender\n        );\n\n        RELAYER_REGISTRY.recordExecution(msg.sender, true, fee);\n\n        if (executedPayments[subscriptionId] >= subscription.maxPayments) {\n            _decrementActiveCount(subscriptionId);\n            subscription.status = SubscriptionStatus.COMPLETED;\n        }\n    }\n\n    function depositForSubscription(bytes32 subscriptionId) external payable nonReentrant {\n        Subscription storage subscription = subscriptions[subscriptionId];\n        require(subscription.subscriber != address(0), \"Subscription does not exist\");\n        require(subscriptionToken[subscriptionId] == address(0), \"Not ETH subscription\");\n        require(subscription.subscriber == msg.sender, \"Only subscriber\");\n        require(\n            subscription.status == SubscriptionStatus.ACTIVE || subscription.status == SubscriptionStatus.PAUSED,\n            \"Subscription not active\"\n        );\n        require(msg.value > 0, \"No ETH sent\");\n\n        ethDeposits[subscriptionId] += msg.value;\n    }\n\n    function withdrawUnusedETH(bytes32 subscriptionId) external nonReentrant {\n        Subscription storage subscription = subscriptions[subscriptionId];\n        require(subscription.subscriber != address(0), \"Subscription does not exist\");\n        require(subscriptionToken[subscriptionId] == address(0), \"Not ETH subscription\");\n        require(subscription.subscriber == msg.sender, \"Only subscriber\");\n        require(\n            subscription.status == SubscriptionStatus.CANCELLED ||\n                subscription.status == SubscriptionStatus.EXPIRED ||\n                subscription.status == SubscriptionStatus.COMPLETED,\n            \"Subscription still active\"\n        );\n\n        uint256 balance = ethDeposits[subscriptionId];\n        require(balance > 0, \"No ETH to withdraw\");\n        ethDeposits[subscriptionId] = 0;\n\n        (bool sent, ) = msg.sender.call{value: balance}(\"\");\n        require(sent, \"Withdraw failed\");\n    }\n\n    function pauseSubscription(bytes32 subscriptionId, bytes calldata signature) external {\n        Subscription storage subscription = subscriptions[subscriptionId];\n\n        require(subscription.subscriber != address(0), \"Subscription does not exist\");\n        require(subscription.status == SubscriptionStatus.ACTIVE, \"Subscription not active\");\n\n        bytes32 structHash = keccak256(\n            abi.encode(PAUSE_REQUEST_TYPEHASH, subscriptionId, currentNonce[subscription.subscriber])\n        );\n        bytes32 digest = keccak256(\n            abi.encodePacked(\"\\x19\\x01\", _domainSeparatorV4(), structHash)\n        );\n        address signer = ECDSA.recover(digest, signature);\n        require(signer == subscription.subscriber, \"Invalid signature\");\n\n        currentNonce[subscription.subscriber]++;\n\n        subscription.status = SubscriptionStatus.PAUSED;\n\n        emit SubscriptionPaused(subscriptionId, subscription.subscriber);\n    }\n\n    function resumeSubscription(bytes32 subscriptionId, bytes calldata signature) external {\n        Subscription storage subscription = subscriptions[subscriptionId];\n\n        require(subscription.subscriber != address(0), \"Subscription does not exist\");\n        require(subscription.status == SubscriptionStatus.PAUSED, \"Subscription not paused\");\n\n        bytes32 structHash = keccak256(\n            abi.encode(RESUME_REQUEST_TYPEHASH, subscriptionId, currentNonce[subscription.subscriber])\n        );\n        bytes32 digest = keccak256(\n            abi.encodePacked(\"\\x19\\x01\", _domainSeparatorV4(), structHash)\n        );\n        address signer = ECDSA.recover(digest, signature);\n        require(signer == subscription.subscriber, \"Invalid signature\");\n\n        currentNonce[subscription.subscriber]++;\n\n        subscription.status = SubscriptionStatus.ACTIVE;\n\n        emit SubscriptionResumed(subscriptionId, subscription.subscriber);\n    }\n\n    function cancelSubscription(bytes32 subscriptionId) external {\n        Subscription storage subscription = subscriptions[subscriptionId];\n\n        require(subscription.subscriber != address(0), \"Subscription does not exist\");\n        require(msg.sender == subscription.subscriber, \"Only subscriber can cancel\");\n        require(\n            subscription.status == SubscriptionStatus.ACTIVE || subscription.status == SubscriptionStatus.PAUSED,\n            \"Subscription cannot be cancelled\"\n        );\n\n        _decrementActiveCount(subscriptionId);\n        subscription.status = SubscriptionStatus.CANCELLED;\n\n        emit SubscriptionCancelled(subscriptionId, subscription.subscriber, subscription.merchant);\n    }\n\n    function _hashIntent(SubscriptionIntent memory intent) internal pure returns (bytes32) {\n        return keccak256(\n            abi.encode(\n                SUBSCRIPTION_INTENT_TYPEHASH,\n                intent.subscriber,\n                intent.merchant,\n                intent.amount,\n                intent.interval,\n                intent.startTime,\n                intent.maxPayments,\n                intent.maxTotalAmount,\n                intent.expiry,\n                intent.nonce,\n                intent.token\n            )\n        );\n    }\n\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return DOMAIN_SEPARATOR;\n    }\n\n    function _isPaymentDue(bytes32 subscriptionId) internal view returns (bool) {\n        Subscription storage subscription = subscriptions[subscriptionId];\n        uint256 paymentsExecuted = executedPayments[subscriptionId];\n        uint256 nextPaymentTime = subscription.startTime + (paymentsExecuted * subscription.interval);\n        return block.timestamp >= nextPaymentTime;\n    }\n\n    function _canExecutePayment(bytes32 subscriptionId, address token) internal view returns (bool) {\n        Subscription storage subscription = subscriptions[subscriptionId];\n        uint256 paymentsExecuted = executedPayments[subscriptionId];\n\n        if (paymentsExecuted >= subscription.maxPayments) {\n            return false;\n        }\n\n        uint256 totalPaidSoFar = paymentsExecuted * subscription.amount;\n        if (totalPaidSoFar + subscription.amount > subscription.maxTotalAmount) {\n            return false;\n        }\n\n        if (token == address(0)) {\n            return true;\n        }\n\n        IERC20 paymentToken = IERC20(token);\n        uint256 totalRequired = subscription.amount;\n\n        if (paymentToken.balanceOf(subscription.subscriber) < totalRequired) {\n            return false;\n        }\n\n        if (paymentToken.allowance(subscription.subscriber, address(this)) < totalRequired) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function _validateSubscriptionParams(SubscriptionIntent calldata intent) internal view {\n        require(intent.expiry > block.timestamp, \"Subscription intent expired\");\n        require(intent.startTime <= intent.expiry, \"Start time must be before expiry\");\n        require(intent.amount > 0, \"Amount must be greater than zero\");\n        require(intent.interval > 0, \"Interval must be greater than zero\");\n        require(intent.maxPayments > 0, \"Max payments must be greater than zero\");\n        require(intent.maxTotalAmount >= intent.amount * intent.maxPayments, \"Max total amount insufficient\");\n    }\n\n    function _attemptPayment(\n        Subscription storage subscription,\n        address token,\n        uint256 merchantAmount,\n        uint256 fee\n    ) internal returns (bool success, string memory failureReason) {\n        IERC20 paymentToken = IERC20(token);\n\n        uint256 totalRequired = subscription.amount;\n        if (paymentToken.balanceOf(subscription.subscriber) < totalRequired) {\n            return (false, \"Insufficient balance for payment\");\n        }\n\n        if (paymentToken.allowance(subscription.subscriber, address(this)) < totalRequired) {\n            return (false, \"Insufficient allowance for payment\");\n        }\n\n        bytes memory transferData = abi.encodeWithSelector(\n            IERC20.transferFrom.selector,\n            subscription.subscriber,\n            subscription.merchant,\n            merchantAmount\n        );\n\n        bool merchantTransferSuccess = _callToken(address(paymentToken), transferData);\n        if (!merchantTransferSuccess) {\n            return (false, \"Merchant transfer failed\");\n        }\n\n        bytes memory feeTransferData = abi.encodeWithSelector(\n            IERC20.transferFrom.selector,\n            subscription.subscriber,\n            msg.sender,\n            fee\n        );\n\n        bool feeTransferSuccess = _callToken(address(paymentToken), feeTransferData);\n        if (!feeTransferSuccess) {\n            return (false, \"Fee transfer failed\");\n        }\n\n        return (true, \"\");\n    }\n\n    function _callToken(address token, bytes memory data) internal returns (bool) {\n        (bool success, bytes memory returndata) = token.call(data);\n        if (!success) {\n            return false;\n        }\n        if (returndata.length == 0) {\n            return true;\n        }\n        return abi.decode(returndata, (bool));\n    }\n\n    function _addSupportedTokenInternal(address token, bool emitEvent) internal {\n        require(!supportedTokens[token], \"Token already supported\");\n        supportedTokens[token] = true;\n        supportedTokenList.push(token);\n        supportedTokenIndex[token] = supportedTokenList.length;\n        if (emitEvent) {\n            emit TokenAdded(token);\n        }\n    }\n\n    function _decrementActiveCount(bytes32 subscriptionId) internal {\n        address token = subscriptionToken[subscriptionId];\n        if (activeSubscriptionCounts[token] > 0) {\n            activeSubscriptionCounts[token] -= 1;\n        }\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1487],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":1488,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1487,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,1487],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[1916],"IERC20":[967]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1916,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,1916,967],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[901,910]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[1916]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":1917,"src":"133:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"141:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:87:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[967]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"105:25:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":968,"src":"132:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"140:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:77:3"},"id":3},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[374],"IERC20Errors":[279],"IERC721Errors":[327]},"id":375,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"138:141:4","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":279,"linearizedBaseContracts":[279],"name":"IERC20Errors","nameLocation":"290:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"309:309:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":249,"name":"ERC20InsufficientBalance","nameLocation":"629:24:4","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"sender","nameLocation":"662:6:4","nodeType":"VariableDeclaration","scope":249,"src":"654:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"balance","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":249,"src":"670:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"needed","nameLocation":"695:6:4","nodeType":"VariableDeclaration","scope":249,"src":"687:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:4"},"src":"623:80:4"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"709:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":254,"name":"ERC20InvalidSender","nameLocation":"872:18:4","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"899:6:4","nodeType":"VariableDeclaration","scope":254,"src":"891:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:4"},"src":"866:41:4"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"913:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":259,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:4","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:4","nodeType":"VariableDeclaration","scope":259,"src":"1104:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:4"},"src":"1077:45:4"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"1128:345:4","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":268,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:4","nodeType":"ErrorDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"spender","nameLocation":"1519:7:4","nodeType":"VariableDeclaration","scope":268,"src":"1511:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:4","nodeType":"VariableDeclaration","scope":268,"src":"1528:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":266,"mutability":"mutable","name":"needed","nameLocation":"1555:6:4","nodeType":"VariableDeclaration","scope":268,"src":"1547:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:4"},"src":"1478:85:4"},{"documentation":{"id":269,"nodeType":"StructuredDocumentation","src":"1569:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":273,"name":"ERC20InvalidApprover","nameLocation":"1754:20:4","nodeType":"ErrorDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":271,"mutability":"mutable","name":"approver","nameLocation":"1783:8:4","nodeType":"VariableDeclaration","scope":273,"src":"1775:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":270,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:4"},"src":"1748:45:4"},{"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"1799:195:4","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":278,"name":"ERC20InvalidSpender","nameLocation":"2005:19:4","nodeType":"ErrorDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"spender","nameLocation":"2033:7:4","nodeType":"VariableDeclaration","scope":278,"src":"2025:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:4"},"src":"1999:43:4"}],"scope":375,"src":"280:1764:4","usedErrors":[249,254,259,268,273,278],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":280,"nodeType":"StructuredDocumentation","src":"2046:143:4","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":327,"linearizedBaseContracts":[327],"name":"IERC721Errors","nameLocation":"2200:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"2220:219:4","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":285,"name":"ERC721InvalidOwner","nameLocation":"2450:18:4","nodeType":"ErrorDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"owner","nameLocation":"2477:5:4","nodeType":"VariableDeclaration","scope":285,"src":"2469:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:4"},"src":"2444:40:4"},{"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"2490:132:4","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":290,"name":"ERC721NonexistentToken","nameLocation":"2633:22:4","nodeType":"ErrorDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:4","nodeType":"VariableDeclaration","scope":290,"src":"2656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:4"},"src":"2627:46:4"},{"documentation":{"id":291,"nodeType":"StructuredDocumentation","src":"2679:289:4","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":299,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:4","nodeType":"ErrorDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"sender","nameLocation":"3008:6:4","nodeType":"VariableDeclaration","scope":299,"src":"3000:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:4","nodeType":"VariableDeclaration","scope":299,"src":"3016:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":294,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"owner","nameLocation":"3041:5:4","nodeType":"VariableDeclaration","scope":299,"src":"3033:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:4"},"src":"2973:75:4"},{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"3054:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":304,"name":"ERC721InvalidSender","nameLocation":"3217:19:4","nodeType":"ErrorDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"sender","nameLocation":"3245:6:4","nodeType":"VariableDeclaration","scope":304,"src":"3237:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:4"},"src":"3211:42:4"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"3259:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":309,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:4","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:4","nodeType":"VariableDeclaration","scope":309,"src":"3451:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:4"},"src":"3423:46:4"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"3475:247:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":316,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:4","nodeType":"ErrorDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"operator","nameLocation":"3768:8:4","nodeType":"VariableDeclaration","scope":316,"src":"3760:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:4","nodeType":"VariableDeclaration","scope":316,"src":"3778:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:4"},"src":"3727:68:4"},{"documentation":{"id":317,"nodeType":"StructuredDocumentation","src":"3801:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":321,"name":"ERC721InvalidApprover","nameLocation":"3986:21:4","nodeType":"ErrorDefinition","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":319,"mutability":"mutable","name":"approver","nameLocation":"4016:8:4","nodeType":"VariableDeclaration","scope":321,"src":"4008:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:4"},"src":"3980:46:4"},{"documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"4032:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":326,"name":"ERC721InvalidOperator","nameLocation":"4240:21:4","nodeType":"ErrorDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"mutability":"mutable","name":"operator","nameLocation":"4270:8:4","nodeType":"VariableDeclaration","scope":326,"src":"4262:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:4"},"src":"4234:46:4"}],"scope":375,"src":"2190:2092:4","usedErrors":[285,290,299,304,309,316,321,326],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"4284:145:4","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":374,"linearizedBaseContracts":[374],"name":"IERC1155Errors","nameLocation":"4440:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":329,"nodeType":"StructuredDocumentation","src":"4461:361:4","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":339,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:4","nodeType":"ErrorDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":331,"mutability":"mutable","name":"sender","nameLocation":"4868:6:4","nodeType":"VariableDeclaration","scope":339,"src":"4860:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"balance","nameLocation":"4884:7:4","nodeType":"VariableDeclaration","scope":339,"src":"4876:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"needed","nameLocation":"4901:6:4","nodeType":"VariableDeclaration","scope":339,"src":"4893:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":334,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:4","nodeType":"VariableDeclaration","scope":339,"src":"4909:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":336,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:4"},"src":"4827:99:4"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"4932:152:4","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":344,"name":"ERC1155InvalidSender","nameLocation":"5095:20:4","nodeType":"ErrorDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"sender","nameLocation":"5124:6:4","nodeType":"VariableDeclaration","scope":344,"src":"5116:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:4"},"src":"5089:43:4"},{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"5138:159:4","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":349,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:4","nodeType":"ErrorDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:4","nodeType":"VariableDeclaration","scope":349,"src":"5331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:4"},"src":"5302:47:4"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"5355:256:4","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":356,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:4","nodeType":"ErrorDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"operator","nameLocation":"5659:8:4","nodeType":"VariableDeclaration","scope":356,"src":"5651:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":351,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"owner","nameLocation":"5677:5:4","nodeType":"VariableDeclaration","scope":356,"src":"5669:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:4"},"src":"5616:68:4"},{"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"5690:174:4","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":361,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:4","nodeType":"ErrorDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":359,"mutability":"mutable","name":"approver","nameLocation":"5906:8:4","nodeType":"VariableDeclaration","scope":361,"src":"5898:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:4"},"src":"5869:47:4"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"5922:197:4","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":366,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:4","nodeType":"ErrorDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"operator","nameLocation":"6161:8:4","nodeType":"VariableDeclaration","scope":366,"src":"6153:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":363,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:4"},"src":"6124:47:4"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"6177:280:4","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":373,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:4","nodeType":"ErrorDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:4","nodeType":"VariableDeclaration","scope":373,"src":"6494:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":368,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:4","nodeType":"VariableDeclaration","scope":373,"src":"6513:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:4"},"src":"6462:73:4"}],"scope":375,"src":"4430:2107:4","usedErrors":[339,344,349,356,361,366,373],"usedEvents":[]}],"src":"112:6426:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1487],"ERC20":[889],"IERC20":[967],"IERC20Errors":[279],"IERC20Metadata":[993]},"id":890,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":376,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":378,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":968,"src":"131:36:5","symbolAliases":[{"foreign":{"id":377,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"139:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":380,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":994,"src":"168:63:5","symbolAliases":[{"foreign":{"id":379,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"176:14:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":1488,"src":"232:48:5","symbolAliases":[{"foreign":{"id":381,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"240:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":890,"sourceUnit":375,"src":"281:65:5","symbolAliases":[{"foreign":{"id":383,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"289:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":386,"name":"Context","nameLocations":["1133:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":1487,"src":"1133:7:5"},"id":387,"nodeType":"InheritanceSpecifier","src":"1133:7:5"},{"baseName":{"id":388,"name":"IERC20","nameLocations":["1142:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1142:6:5"},"id":389,"nodeType":"InheritanceSpecifier","src":"1142:6:5"},{"baseName":{"id":390,"name":"IERC20Metadata","nameLocations":["1150:14:5"],"nodeType":"IdentifierPath","referencedDeclaration":993,"src":"1150:14:5"},"id":391,"nodeType":"InheritanceSpecifier","src":"1150:14:5"},{"baseName":{"id":392,"name":"IERC20Errors","nameLocations":["1166:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":279,"src":"1166:12:5"},"id":393,"nodeType":"InheritanceSpecifier","src":"1166:12:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"348:757:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":889,"linearizedBaseContracts":[889,279,993,967,1487],"name":"ERC20","nameLocation":"1124:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":397,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:5","nodeType":"VariableDeclaration","scope":889,"src":"1185:53:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":396,"keyName":"account","keyNameLocation":"1201:7:5","keyType":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":403,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:5","nodeType":"VariableDeclaration","scope":889,"src":"1245:83:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":402,"keyName":"account","keyNameLocation":"1261:7:5","keyType":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":401,"keyName":"spender","keyNameLocation":"1288:7:5","keyType":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":405,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:5","nodeType":"VariableDeclaration","scope":889,"src":"1335:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":407,"mutability":"mutable","name":"_name","nameLocation":"1385:5:5","nodeType":"VariableDeclaration","scope":889,"src":"1370:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":406,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":409,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:5","nodeType":"VariableDeclaration","scope":889,"src":"1396:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":408,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":425,"nodeType":"Block","src":"1638:57:5","statements":[{"expression":{"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":417,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1648:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":418,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"1656:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":420,"nodeType":"ExpressionStatement","src":"1648:13:5"},{"expression":{"id":423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":421,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"1671:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":422,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"1681:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":424,"nodeType":"ExpressionStatement","src":"1671:17:5"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"1425:152:5","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":426,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"name_","nameLocation":"1608:5:5","nodeType":"VariableDeclaration","scope":426,"src":"1594:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":411,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:5","nodeType":"VariableDeclaration","scope":426,"src":"1615:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":413,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:5"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"1638:0:5"},"scope":889,"src":"1582:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[980],"body":{"id":434,"nodeType":"Block","src":"1820:29:5","statements":[{"expression":{"id":432,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"1837:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":431,"id":433,"nodeType":"Return","src":"1830:12:5"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"1701:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":435,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:5","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"1773:2:5"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":435,"src":"1805:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":429,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:5"},"scope":889,"src":"1760:89:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[986],"body":{"id":443,"nodeType":"Block","src":"2024:31:5","statements":[{"expression":{"id":441,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"2041:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":440,"id":442,"nodeType":"Return","src":"2034:14:5"}]},"documentation":{"id":436,"nodeType":"StructuredDocumentation","src":"1855:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:5","nodeType":"FunctionDefinition","parameters":{"id":437,"nodeType":"ParameterList","parameters":[],"src":"1977:2:5"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"2009:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:5"},"scope":889,"src":"1962:93:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[992],"body":{"id":452,"nodeType":"Block","src":"2744:26:5","statements":[{"expression":{"hexValue":"3138","id":450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":449,"id":451,"nodeType":"Return","src":"2754:9:5"}]},"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"2061:622:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":453,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:5","nodeType":"FunctionDefinition","parameters":{"id":446,"nodeType":"ParameterList","parameters":[],"src":"2705:2:5"},"returnParameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":453,"src":"2737:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":447,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:5"},"scope":889,"src":"2688:82:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[916],"body":{"id":461,"nodeType":"Block","src":"2864:36:5","statements":[{"expression":{"id":459,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"2881:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":458,"id":460,"nodeType":"Return","src":"2874:19:5"}]},"documentation":{"id":454,"nodeType":"StructuredDocumentation","src":"2776:22:5","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":462,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:5","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"2823:2:5"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":462,"src":"2855:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:5"},"scope":889,"src":"2803:97:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[924],"body":{"id":474,"nodeType":"Block","src":"3007:42:5","statements":[{"expression":{"baseExpression":{"id":470,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"3024:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":472,"indexExpression":{"id":471,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"3034:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":469,"id":473,"nodeType":"Return","src":"3017:25:5"}]},"documentation":{"id":463,"nodeType":"StructuredDocumentation","src":"2906:22:5","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":475,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:5","nodeType":"FunctionDefinition","parameters":{"id":466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":465,"mutability":"mutable","name":"account","nameLocation":"2960:7:5","nodeType":"VariableDeclaration","scope":475,"src":"2952:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:5"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":475,"src":"2998:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:5"},"scope":889,"src":"2933:116:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[934],"body":{"id":498,"nodeType":"Block","src":"3319:103:5","statements":[{"assignments":[486],"declarations":[{"constant":false,"id":486,"mutability":"mutable","name":"owner","nameLocation":"3337:5:5","nodeType":"VariableDeclaration","scope":498,"src":"3329:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":489,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":487,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"3345:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:5"},{"expression":{"arguments":[{"id":491,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3377:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"3384:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"3388:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":490,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"3367:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"3367:27:5"},{"expression":{"hexValue":"74727565","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":484,"id":497,"nodeType":"Return","src":"3404:11:5"}]},"documentation":{"id":476,"nodeType":"StructuredDocumentation","src":"3055:184:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":499,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:5","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"to","nameLocation":"3270:2:5","nodeType":"VariableDeclaration","scope":499,"src":"3262:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":477,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":480,"mutability":"mutable","name":"value","nameLocation":"3282:5:5","nodeType":"VariableDeclaration","scope":499,"src":"3274:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:5"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":499,"src":"3313:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":482,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:5"},"scope":889,"src":"3244:178:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[944],"body":{"id":515,"nodeType":"Block","src":"3544:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":509,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3561:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":511,"indexExpression":{"id":510,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"3573:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":513,"indexExpression":{"id":512,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":504,"src":"3580:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":508,"id":514,"nodeType":"Return","src":"3554:34:5"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"3428:22:5","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":516,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:5","nodeType":"FunctionDefinition","parameters":{"id":505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"owner","nameLocation":"3482:5:5","nodeType":"VariableDeclaration","scope":516,"src":"3474:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":501,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"spender","nameLocation":"3497:7:5","nodeType":"VariableDeclaration","scope":516,"src":"3489:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":503,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:5"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":516,"src":"3535:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":506,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:5"},"scope":889,"src":"3455:140:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[954],"body":{"id":539,"nodeType":"Block","src":"3981:107:5","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"owner","nameLocation":"3999:5:5","nodeType":"VariableDeclaration","scope":539,"src":"3991:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":528,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"4007:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:5"},{"expression":{"arguments":[{"id":532,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"4038:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":533,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"4045:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"4054:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":531,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":780,"src":"4029:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":536,"nodeType":"ExpressionStatement","src":"4029:31:5"},{"expression":{"hexValue":"74727565","id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":525,"id":538,"nodeType":"Return","src":"4070:11:5"}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"3601:296:5","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":540,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:5","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"spender","nameLocation":"3927:7:5","nodeType":"VariableDeclaration","scope":540,"src":"3919:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"value","nameLocation":"3944:5:5","nodeType":"VariableDeclaration","scope":540,"src":"3936:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:5"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":540,"src":"3975:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":523,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:5"},"scope":889,"src":"3902:186:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[966],"body":{"id":571,"nodeType":"Block","src":"4773:151:5","statements":[{"assignments":[553],"declarations":[{"constant":false,"id":553,"mutability":"mutable","name":"spender","nameLocation":"4791:7:5","nodeType":"VariableDeclaration","scope":571,"src":"4783:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":552,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":556,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":554,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"4801:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:5"},{"expression":{"arguments":[{"id":558,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4839:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":559,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"4845:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4854:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":557,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"4823:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"ExpressionStatement","src":"4823:37:5"},{"expression":{"arguments":[{"id":564,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4880:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":565,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4886:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":547,"src":"4890:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4870:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":568,"nodeType":"ExpressionStatement","src":"4870:26:5"},{"expression":{"hexValue":"74727565","id":569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":551,"id":570,"nodeType":"Return","src":"4906:11:5"}]},"documentation":{"id":541,"nodeType":"StructuredDocumentation","src":"4094:581:5","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":572,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:5","nodeType":"FunctionDefinition","parameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":543,"mutability":"mutable","name":"from","nameLocation":"4710:4:5","nodeType":"VariableDeclaration","scope":572,"src":"4702:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":542,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":545,"mutability":"mutable","name":"to","nameLocation":"4724:2:5","nodeType":"VariableDeclaration","scope":572,"src":"4716:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":544,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":547,"mutability":"mutable","name":"value","nameLocation":"4736:5:5","nodeType":"VariableDeclaration","scope":572,"src":"4728:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:5"},"returnParameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"4767:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":549,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:5"},"scope":889,"src":"4680:244:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":618,"nodeType":"Block","src":"5366:231:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":582,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"5380:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":583,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:5","typeDescriptions":{}}},"id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":596,"nodeType":"IfStatement","src":"5376:86:5","trueBody":{"id":595,"nodeType":"Block","src":"5400:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:5","typeDescriptions":{}}},"id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":588,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"5421:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":594,"nodeType":"RevertStatement","src":"5414:37:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"5475:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":598,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:5","typeDescriptions":{}}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":611,"nodeType":"IfStatement","src":"5471:86:5","trueBody":{"id":610,"nodeType":"Block","src":"5493:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:5","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":603,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"5514:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":609,"nodeType":"RevertStatement","src":"5507:39:5"}]}},{"expression":{"arguments":[{"id":613,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"5574:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":614,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"5580:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"5584:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":612,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"5566:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":617,"nodeType":"ExpressionStatement","src":"5566:24:5"}]},"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"4930:362:5","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":619,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:5","nodeType":"FunctionDefinition","parameters":{"id":580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"from","nameLocation":"5324:4:5","nodeType":"VariableDeclaration","scope":619,"src":"5316:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"to","nameLocation":"5338:2:5","nodeType":"VariableDeclaration","scope":619,"src":"5330:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":576,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"value","nameLocation":"5350:5:5","nodeType":"VariableDeclaration","scope":619,"src":"5342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":578,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:5"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"5366:0:5"},"scope":889,"src":"5297:300:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"5987:1032:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6001:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:5","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":666,"nodeType":"Block","src":"6175:362:5","statements":[{"assignments":[641],"declarations":[{"constant":false,"id":641,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:5","nodeType":"VariableDeclaration","scope":666,"src":"6189:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":640,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":645,"initialValue":{"baseExpression":{"id":642,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6211:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":644,"indexExpression":{"id":643,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6221:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":646,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6244:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6258:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":656,"nodeType":"IfStatement","src":"6240:115:5","trueBody":{"id":655,"nodeType":"Block","src":"6265:90:5","statements":[{"errorCall":{"arguments":[{"id":650,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6315:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6321:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6334:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":649,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6290:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":654,"nodeType":"RevertStatement","src":"6283:57:5"}]}},{"id":665,"nodeType":"UncheckedBlock","src":"6368:159:5","statements":[{"expression":{"id":663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":657,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6475:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":659,"indexExpression":{"id":658,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6485:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":660,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"6493:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6507:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":664,"nodeType":"ExpressionStatement","src":"6475:37:5"}]}]},"id":667,"nodeType":"IfStatement","src":"5997:540:5","trueBody":{"id":639,"nodeType":"Block","src":"6021:148:5","statements":[{"expression":{"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":635,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"6137:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6153:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":638,"nodeType":"ExpressionStatement","src":"6137:21:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":668,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6551:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:5","typeDescriptions":{}}},"id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":687,"nodeType":"Block","src":"6766:206:5","statements":[{"id":686,"nodeType":"UncheckedBlock","src":"6780:182:5","statements":[{"expression":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":680,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6925:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":682,"indexExpression":{"id":681,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"6935:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6942:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":685,"nodeType":"ExpressionStatement","src":"6925:22:5"}]}]},"id":688,"nodeType":"IfStatement","src":"6547:425:5","trueBody":{"id":679,"nodeType":"Block","src":"6569:191:5","statements":[{"id":678,"nodeType":"UncheckedBlock","src":"6583:167:5","statements":[{"expression":{"id":676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":674,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"6714:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6730:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":677,"nodeType":"ExpressionStatement","src":"6714:21:5"}]}]}},{"eventCall":{"arguments":[{"id":690,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"6996:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"7002:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"7006:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":689,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"6987:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"EmitStatement","src":"6982:30:5"}]},"documentation":{"id":620,"nodeType":"StructuredDocumentation","src":"5603:304:5","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:5","nodeType":"FunctionDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":622,"mutability":"mutable","name":"from","nameLocation":"5937:4:5","nodeType":"VariableDeclaration","scope":696,"src":"5929:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"to","nameLocation":"5951:2:5","nodeType":"VariableDeclaration","scope":696,"src":"5943:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":626,"mutability":"mutable","name":"value","nameLocation":"5963:5:5","nodeType":"VariableDeclaration","scope":696,"src":"5955:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:5"},"returnParameters":{"id":628,"nodeType":"ParameterList","parameters":[],"src":"5987:0:5"},"scope":889,"src":"5912:1107:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"7418:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7432:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:5","typeDescriptions":{}}},"id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":718,"nodeType":"IfStatement","src":"7428:91:5","trueBody":{"id":717,"nodeType":"Block","src":"7455:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:5","typeDescriptions":{}}},"id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":710,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"7476:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":716,"nodeType":"RevertStatement","src":"7469:39:5"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":720,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:5","typeDescriptions":{}}},"id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"7548:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":725,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"7557:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":719,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"7528:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"7528:35:5"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"7025:332:5","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":729,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:5","nodeType":"FunctionDefinition","parameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"account","nameLocation":"7385:7:5","nodeType":"VariableDeclaration","scope":729,"src":"7377:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"value","nameLocation":"7402:5:5","nodeType":"VariableDeclaration","scope":729,"src":"7394:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":700,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:5"},"returnParameters":{"id":703,"nodeType":"ParameterList","parameters":[],"src":"7418:0:5"},"scope":889,"src":"7362:208:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":761,"nodeType":"Block","src":"7944:150:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":737,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"7958:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":738,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:5","typeDescriptions":{}}},"id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":751,"nodeType":"IfStatement","src":"7954:89:5","trueBody":{"id":750,"nodeType":"Block","src":"7981:62:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:5","typeDescriptions":{}}},"id":747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":743,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8002:18:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":749,"nodeType":"RevertStatement","src":"7995:37:5"}]}},{"expression":{"arguments":[{"id":753,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"8060:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:5","typeDescriptions":{}}},"id":757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"8081:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":752,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"8052:7:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":760,"nodeType":"ExpressionStatement","src":"8052:35:5"}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"7576:307:5","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":762,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:5","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"account","nameLocation":"7911:7:5","nodeType":"VariableDeclaration","scope":762,"src":"7903:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":731,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"value","nameLocation":"7928:5:5","nodeType":"VariableDeclaration","scope":762,"src":"7920:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:5"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"7944:0:5"},"scope":889,"src":"7888:206:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":779,"nodeType":"Block","src":"8704:54:5","statements":[{"expression":{"arguments":[{"id":773,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"8723:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"8730:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":769,"src":"8739:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":772,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":840,"src":"8714:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":778,"nodeType":"ExpressionStatement","src":"8714:37:5"}]},"documentation":{"id":763,"nodeType":"StructuredDocumentation","src":"8100:525:5","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":780,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:5","nodeType":"FunctionDefinition","parameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"owner","nameLocation":"8656:5:5","nodeType":"VariableDeclaration","scope":780,"src":"8648:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"spender","nameLocation":"8671:7:5","nodeType":"VariableDeclaration","scope":780,"src":"8663:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":766,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":769,"mutability":"mutable","name":"value","nameLocation":"8688:5:5","nodeType":"VariableDeclaration","scope":780,"src":"8680:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:5"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[],"src":"8704:0:5"},"scope":889,"src":"8630:128:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":839,"nodeType":"Block","src":"9703:334:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9717:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:5","typeDescriptions":{}}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":806,"nodeType":"IfStatement","src":"9713:89:5","trueBody":{"id":805,"nodeType":"Block","src":"9738:64:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:5","typeDescriptions":{}}},"id":802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":798,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"9759:20:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":804,"nodeType":"RevertStatement","src":"9752:39:5"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":807,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"9815:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:5","typeDescriptions":{}}},"id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":821,"nodeType":"IfStatement","src":"9811:90:5","trueBody":{"id":820,"nodeType":"Block","src":"9838:63:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:5","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":813,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"9859:19:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":819,"nodeType":"RevertStatement","src":"9852:38:5"}]}},{"expression":{"id":828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":822,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"9910:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":825,"indexExpression":{"id":823,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9922:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":826,"indexExpression":{"id":824,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"9929:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"9940:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":829,"nodeType":"ExpressionStatement","src":"9910:35:5"},{"condition":{"id":830,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"9959:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":838,"nodeType":"IfStatement","src":"9955:76:5","trueBody":{"id":837,"nodeType":"Block","src":"9970:61:5","statements":[{"eventCall":{"arguments":[{"id":832,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":783,"src":"9998:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"10005:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"10014:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":831,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9989:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"EmitStatement","src":"9984:36:5"}]}}]},"documentation":{"id":781,"nodeType":"StructuredDocumentation","src":"8764:836:5","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":840,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:5","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":783,"mutability":"mutable","name":"owner","nameLocation":"9631:5:5","nodeType":"VariableDeclaration","scope":840,"src":"9623:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":785,"mutability":"mutable","name":"spender","nameLocation":"9646:7:5","nodeType":"VariableDeclaration","scope":840,"src":"9638:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"mutability":"mutable","name":"value","nameLocation":"9663:5:5","nodeType":"VariableDeclaration","scope":840,"src":"9655:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:5","nodeType":"VariableDeclaration","scope":840,"src":"9670:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":788,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:5"},"returnParameters":{"id":791,"nodeType":"ParameterList","parameters":[],"src":"9703:0:5"},"scope":889,"src":"9605:432:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":887,"nodeType":"Block","src":"10408:387:5","statements":[{"assignments":[851],"declarations":[{"constant":false,"id":851,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:5","nodeType":"VariableDeclaration","scope":887,"src":"10418:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":856,"initialValue":{"arguments":[{"id":853,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10455:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":854,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10462:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":852,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"10445:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10484:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":858,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:5","memberName":"max","nodeType":"MemberAccess","src":"10503:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":886,"nodeType":"IfStatement","src":"10480:309:5","trueBody":{"id":885,"nodeType":"Block","src":"10522:267:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":864,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10540:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10559:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":874,"nodeType":"IfStatement","src":"10536:130:5","trueBody":{"id":873,"nodeType":"Block","src":"10566:100:5","statements":[{"errorCall":{"arguments":[{"id":868,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10618:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":869,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10627:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10645:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":867,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"10591:26:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":872,"nodeType":"RevertStatement","src":"10584:67:5"}]}},{"id":884,"nodeType":"UncheckedBlock","src":"10679:100:5","statements":[{"expression":{"arguments":[{"id":876,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"10716:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":877,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"10723:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":878,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"10732:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"10751:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":875,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[780,840],"referencedDeclaration":840,"src":"10707:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"10707:57:5"}]}]}}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"10043:271:5","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":888,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:5","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"owner","nameLocation":"10352:5:5","nodeType":"VariableDeclaration","scope":888,"src":"10344:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"spender","nameLocation":"10367:7:5","nodeType":"VariableDeclaration","scope":888,"src":"10359:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"value","nameLocation":"10384:5:5","nodeType":"VariableDeclaration","scope":888,"src":"10376:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:5"},"returnParameters":{"id":849,"nodeType":"ParameterList","parameters":[],"src":"10408:0:5"},"scope":889,"src":"10319:476:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":890,"src":"1106:9691:5","usedErrors":[249,254,259,268,273,278],"usedEvents":[901,910]}],"src":"105:10693:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[967]},"id":968,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":891,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":892,"nodeType":"StructuredDocumentation","src":"133:71:6","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":967,"linearizedBaseContracts":[967],"name":"IERC20","nameLocation":"215:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":893,"nodeType":"StructuredDocumentation","src":"228:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":901,"name":"Transfer","nameLocation":"397:8:6","nodeType":"EventDefinition","parameters":{"id":900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:6","nodeType":"VariableDeclaration","scope":901,"src":"406:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:6","nodeType":"VariableDeclaration","scope":901,"src":"428:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":899,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:6","nodeType":"VariableDeclaration","scope":901,"src":"448:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:6"},"src":"391:72:6"},{"anonymous":false,"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"469:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":910,"name":"Approval","nameLocation":"628:8:6","nodeType":"EventDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:6","nodeType":"VariableDeclaration","scope":910,"src":"637:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":903,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":906,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:6","nodeType":"VariableDeclaration","scope":910,"src":"660:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":908,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:6","nodeType":"VariableDeclaration","scope":910,"src":"685:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:6"},"src":"622:78:6"},{"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"706:65:6","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":916,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:6","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"796:2:6"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":916,"src":"822:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:6"},"scope":967,"src":"776:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":917,"nodeType":"StructuredDocumentation","src":"837:71:6","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":924,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:6","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":919,"mutability":"mutable","name":"account","nameLocation":"940:7:6","nodeType":"VariableDeclaration","scope":924,"src":"932:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":918,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:6"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"972:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:6"},"scope":967,"src":"913:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":925,"nodeType":"StructuredDocumentation","src":"987:213:6","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":934,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:6","nodeType":"FunctionDefinition","parameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"to","nameLocation":"1231:2:6","nodeType":"VariableDeclaration","scope":934,"src":"1223:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":926,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":929,"mutability":"mutable","name":"value","nameLocation":"1243:5:6","nodeType":"VariableDeclaration","scope":934,"src":"1235:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":928,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:6"},"returnParameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"1268:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":931,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:6"},"scope":967,"src":"1205:69:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"1280:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":944,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:6","nodeType":"FunctionDefinition","parameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":937,"mutability":"mutable","name":"owner","nameLocation":"1576:5:6","nodeType":"VariableDeclaration","scope":944,"src":"1568:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":936,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"spender","nameLocation":"1591:7:6","nodeType":"VariableDeclaration","scope":944,"src":"1583:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":938,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:6"},"returnParameters":{"id":943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":942,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":944,"src":"1623:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:6"},"scope":967,"src":"1549:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"1638:667:6","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":954,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:6","nodeType":"FunctionDefinition","parameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"spender","nameLocation":"2335:7:6","nodeType":"VariableDeclaration","scope":954,"src":"2327:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"value","nameLocation":"2352:5:6","nodeType":"VariableDeclaration","scope":954,"src":"2344:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":948,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:6"},"returnParameters":{"id":953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":952,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":954,"src":"2377:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":951,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:6"},"scope":967,"src":"2310:73:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"2389:297:6","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":966,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:6","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"from","nameLocation":"2721:4:6","nodeType":"VariableDeclaration","scope":966,"src":"2713:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":956,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"to","nameLocation":"2735:2:6","nodeType":"VariableDeclaration","scope":966,"src":"2727:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":958,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"value","nameLocation":"2747:5:6","nodeType":"VariableDeclaration","scope":966,"src":"2739:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":960,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:6"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"2772:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":963,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:6"},"scope":967,"src":"2691:87:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":968,"src":"205:2575:6","usedErrors":[],"usedEvents":[901,910]}],"src":"106:2675:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[967],"IERC20Metadata":[993]},"id":994,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":969,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":971,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":994,"sourceUnit":968,"src":"151:37:7","symbolAliases":[{"foreign":{"id":970,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"159:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":973,"name":"IERC20","nameLocations":["306:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"306:6:7"},"id":974,"nodeType":"InheritanceSpecifier","src":"306:6:7"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":972,"nodeType":"StructuredDocumentation","src":"190:87:7","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":993,"linearizedBaseContracts":[993,967],"name":"IERC20Metadata","nameLocation":"288:14:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"319:54:7","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":980,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:7","nodeType":"FunctionDefinition","parameters":{"id":976,"nodeType":"ParameterList","parameters":[],"src":"391:2:7"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":978,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":980,"src":"417:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":977,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:7"},"scope":993,"src":"378:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"438:56:7","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":986,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:7","nodeType":"FunctionDefinition","parameters":{"id":982,"nodeType":"ParameterList","parameters":[],"src":"514:2:7"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":986,"src":"540:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":983,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:7"},"scope":993,"src":"499:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":987,"nodeType":"StructuredDocumentation","src":"561:65:7","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":992,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:7","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"648:2:7"},"returnParameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":992,"src":"674:5:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":989,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:7"},"scope":993,"src":"631:50:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":994,"src":"278:405:7","usedErrors":[],"usedEvents":[901,910]}],"src":"125:559:7"},"id":7},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[967],"SafeERC20":[1457]},"id":1458,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":995,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":997,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":968,"src":"141:37:8","symbolAliases":[{"foreign":{"id":996,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"149:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":999,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1458,"sourceUnit":230,"src":"179:58:8","symbolAliases":[{"foreign":{"id":998,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"239:458:8","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1457,"linearizedBaseContracts":[1457],"name":"SafeERC20","nameLocation":"706:9:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1001,"nodeType":"StructuredDocumentation","src":"722:65:8","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1005,"name":"SafeERC20FailedOperation","nameLocation":"798:24:8","nodeType":"ErrorDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"token","nameLocation":"831:5:8","nodeType":"VariableDeclaration","scope":1005,"src":"823:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:8"},"src":"792:46:8"},{"documentation":{"id":1006,"nodeType":"StructuredDocumentation","src":"844:71:8","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1014,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:8","nodeType":"ErrorDefinition","parameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1008,"mutability":"mutable","name":"spender","nameLocation":"967:7:8","nodeType":"VariableDeclaration","scope":1014,"src":"959:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1007,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1010,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:8","nodeType":"VariableDeclaration","scope":1014,"src":"976:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1012,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:8","nodeType":"VariableDeclaration","scope":1014,"src":"1002:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:8"},"src":"920:109:8"},{"body":{"id":1037,"nodeType":"Block","src":"1291:88:8","statements":[{"expression":{"arguments":[{"id":1026,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1321:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"1343:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":934,"src":"1343:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"1360:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"1364:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1033,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1027,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1025,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1301:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1036,"nodeType":"ExpressionStatement","src":"1301:71:8"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"1035:179:8","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1038,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:8","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"token","nameLocation":"1248:5:8","nodeType":"VariableDeclaration","scope":1038,"src":"1241:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1017,"nodeType":"UserDefinedTypeName","pathNode":{"id":1016,"name":"IERC20","nameLocations":["1241:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1241:6:8"},"referencedDeclaration":967,"src":"1241:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"to","nameLocation":"1263:2:8","nodeType":"VariableDeclaration","scope":1038,"src":"1255:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1019,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"value","nameLocation":"1275:5:8","nodeType":"VariableDeclaration","scope":1038,"src":"1267:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:8"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[],"src":"1291:0:8"},"scope":1457,"src":"1219:160:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"1708:98:8","statements":[{"expression":{"arguments":[{"id":1052,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1738:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1055,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1760:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":966,"src":"1760:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1057,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1781:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1058,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"1787:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"1791:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1053,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1051,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1718:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1063,"nodeType":"ExpressionStatement","src":"1718:81:8"}]},"documentation":{"id":1039,"nodeType":"StructuredDocumentation","src":"1385:228:8","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:8","nodeType":"FunctionDefinition","parameters":{"id":1049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"token","nameLocation":"1651:5:8","nodeType":"VariableDeclaration","scope":1065,"src":"1644:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1041,"nodeType":"UserDefinedTypeName","pathNode":{"id":1040,"name":"IERC20","nameLocations":["1644:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1644:6:8"},"referencedDeclaration":967,"src":"1644:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"from","nameLocation":"1666:4:8","nodeType":"VariableDeclaration","scope":1065,"src":"1658:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"to","nameLocation":"1680:2:8","nodeType":"VariableDeclaration","scope":1065,"src":"1672:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"value","nameLocation":"1692:5:8","nodeType":"VariableDeclaration","scope":1065,"src":"1684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:8"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[],"src":"1708:0:8"},"scope":1457,"src":"1618:188:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1090,"nodeType":"Block","src":"2033:99:8","statements":[{"expression":{"arguments":[{"id":1079,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2074:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1082,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1069,"src":"2096:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:8","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":934,"src":"2096:14:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1084,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1071,"src":"2113:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"2117:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1080,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1078,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2050:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1077,"id":1089,"nodeType":"Return","src":"2043:82:8"}]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"1812:126:8","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":1091,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:8","nodeType":"FunctionDefinition","parameters":{"id":1074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1069,"mutability":"mutable","name":"token","nameLocation":"1975:5:8","nodeType":"VariableDeclaration","scope":1091,"src":"1968:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1068,"nodeType":"UserDefinedTypeName","pathNode":{"id":1067,"name":"IERC20","nameLocations":["1968:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"1968:6:8"},"referencedDeclaration":967,"src":"1968:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"to","nameLocation":"1990:2:8","nodeType":"VariableDeclaration","scope":1091,"src":"1982:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"value","nameLocation":"2002:5:8","nodeType":"VariableDeclaration","scope":1091,"src":"1994:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:8"},"returnParameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1091,"src":"2027:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1075,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:8"},"scope":1457,"src":"1943:189:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1119,"nodeType":"Block","src":"2381:109:8","statements":[{"expression":{"arguments":[{"id":1107,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2422:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1110,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2444:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:8","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":966,"src":"2444:18:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1112,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"2465:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"2471:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1101,"src":"2475:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1106,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"2398:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1105,"id":1118,"nodeType":"Return","src":"2391:92:8"}]},"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"2138:130:8","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":1120,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:8","nodeType":"FunctionDefinition","parameters":{"id":1102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1095,"mutability":"mutable","name":"token","nameLocation":"2309:5:8","nodeType":"VariableDeclaration","scope":1120,"src":"2302:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1094,"nodeType":"UserDefinedTypeName","pathNode":{"id":1093,"name":"IERC20","nameLocations":["2302:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"2302:6:8"},"referencedDeclaration":967,"src":"2302:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"from","nameLocation":"2324:4:8","nodeType":"VariableDeclaration","scope":1120,"src":"2316:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"to","nameLocation":"2338:2:8","nodeType":"VariableDeclaration","scope":1120,"src":"2330:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1098,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1101,"mutability":"mutable","name":"value","nameLocation":"2350:5:8","nodeType":"VariableDeclaration","scope":1120,"src":"2342:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:8"},"returnParameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1120,"src":"2375:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1103,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:8"},"scope":1457,"src":"2273:217:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"3232:139:8","statements":[{"assignments":[1132],"declarations":[{"constant":false,"id":1132,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:8","nodeType":"VariableDeclaration","scope":1150,"src":"3242:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1141,"initialValue":{"arguments":[{"arguments":[{"id":1137,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:8","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1139,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3296:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1133,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3265:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"3265:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:8"},{"expression":{"arguments":[{"id":1143,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"3327:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1144,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"3334:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"3343:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"3358:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1142,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"3314:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"3314:50:8"}]},"documentation":{"id":1121,"nodeType":"StructuredDocumentation","src":"2496:645:8","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:8","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"token","nameLocation":"3184:5:8","nodeType":"VariableDeclaration","scope":1151,"src":"3177:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1123,"nodeType":"UserDefinedTypeName","pathNode":{"id":1122,"name":"IERC20","nameLocations":["3177:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"3177:6:8"},"referencedDeclaration":967,"src":"3177:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"spender","nameLocation":"3199:7:8","nodeType":"VariableDeclaration","scope":1151,"src":"3191:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"3216:5:8","nodeType":"VariableDeclaration","scope":1151,"src":"3208:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:8"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"3232:0:8"},"scope":1457,"src":"3146:225:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"4137:370:8","statements":[{"id":1192,"nodeType":"UncheckedBlock","src":"4147:354:8","statements":[{"assignments":[1163],"declarations":[{"constant":false,"id":1163,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:8","nodeType":"VariableDeclaration","scope":1192,"src":"4171:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1172,"initialValue":{"arguments":[{"arguments":[{"id":1168,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1457","typeString":"library SafeERC20"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:8","typeDescriptions":{}}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1170,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4229:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1164,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4198:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:8","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"4198:15:8","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4255:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1174,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4274:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1183,"nodeType":"IfStatement","src":"4251:160:8","trueBody":{"id":1182,"nodeType":"Block","src":"4293:118:8","statements":[{"errorCall":{"arguments":[{"id":1177,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4351:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1178,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4360:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1179,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4378:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1176,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"4318:32:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1181,"nodeType":"RevertStatement","src":"4311:85:8"}]}},{"expression":{"arguments":[{"id":1185,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"4437:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1186,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4444:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"4453:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1188,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4472:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1184,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"4424:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"4424:66:8"}]}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"3377:657:8","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:8","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"token","nameLocation":"4077:5:8","nodeType":"VariableDeclaration","scope":1194,"src":"4070:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1154,"nodeType":"UserDefinedTypeName","pathNode":{"id":1153,"name":"IERC20","nameLocations":["4070:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"4070:6:8"},"referencedDeclaration":967,"src":"4070:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"spender","nameLocation":"4092:7:8","nodeType":"VariableDeclaration","scope":1194,"src":"4084:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:8","nodeType":"VariableDeclaration","scope":1194,"src":"4101:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:8"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[],"src":"4137:0:8"},"scope":1457,"src":"4039:468:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1240,"nodeType":"Block","src":"5161:303:8","statements":[{"assignments":[1206],"declarations":[{"constant":false,"id":1206,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:8","nodeType":"VariableDeclaration","scope":1240,"src":"5171:25:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1205,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1215,"initialValue":{"arguments":[{"expression":{"id":1209,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5214:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":954,"src":"5214:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1211,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5230:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"5239:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1207,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1208,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:8"},{"condition":{"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:8","subExpression":{"arguments":[{"id":1217,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5286:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1218,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5293:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1216,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"5262:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1239,"nodeType":"IfStatement","src":"5257:201:8","trueBody":{"id":1238,"nodeType":"Block","src":"5308:150:8","statements":[{"expression":{"arguments":[{"id":1222,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5342:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1225,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5364:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:8","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":954,"src":"5364:13:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1227,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5380:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1229,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1223,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:8","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1221,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5322:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1232,"nodeType":"ExpressionStatement","src":"5322:71:8"},{"expression":{"arguments":[{"id":1234,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"5427:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},{"id":1235,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"5434:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1233,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"5407:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1237,"nodeType":"ExpressionStatement","src":"5407:40:8"}]}}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"4513:566:8","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1241,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:8","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"token","nameLocation":"5113:5:8","nodeType":"VariableDeclaration","scope":1241,"src":"5106:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1197,"nodeType":"UserDefinedTypeName","pathNode":{"id":1196,"name":"IERC20","nameLocations":["5106:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"5106:6:8"},"referencedDeclaration":967,"src":"5106:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"spender","nameLocation":"5128:7:8","nodeType":"VariableDeclaration","scope":1241,"src":"5120:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1199,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"value","nameLocation":"5145:5:8","nodeType":"VariableDeclaration","scope":1241,"src":"5137:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:8"},"returnParameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"5161:0:8"},"scope":1457,"src":"5084:380:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"5911:219:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5925:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:8","memberName":"code","nodeType":"MemberAccess","src":"5925:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:8","memberName":"length","nodeType":"MemberAccess","src":"5925:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:8","subExpression":{"arguments":[{"id":1268,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"6034:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"6038:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1270,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"6045:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1266,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6012:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:8","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1281,"nodeType":"IfStatement","src":"6007:117:8","trueBody":{"id":1280,"nodeType":"Block","src":"6052:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1276,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"6106:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:8","typeDescriptions":{}}},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1273,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6073:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1279,"nodeType":"RevertStatement","src":"6066:47:8"}]}},"id":1282,"nodeType":"IfStatement","src":"5921:203:8","trueBody":{"id":1265,"nodeType":"Block","src":"5946:55:8","statements":[{"expression":{"arguments":[{"id":1260,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"5973:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1261,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"5980:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"5984:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1259,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"5960:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"ExpressionStatement","src":"5960:30:8"}]}}]},"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"5470:333:8","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:8","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"token","nameLocation":"5849:5:8","nodeType":"VariableDeclaration","scope":1284,"src":"5840:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1244,"nodeType":"UserDefinedTypeName","pathNode":{"id":1243,"name":"IERC1363","nameLocations":["5840:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:8"},"referencedDeclaration":229,"src":"5840:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"to","nameLocation":"5864:2:8","nodeType":"VariableDeclaration","scope":1284,"src":"5856:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1246,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1249,"mutability":"mutable","name":"value","nameLocation":"5876:5:8","nodeType":"VariableDeclaration","scope":1284,"src":"5868:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"data","nameLocation":"5896:4:8","nodeType":"VariableDeclaration","scope":1284,"src":"5883:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:8"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"5911:0:8"},"scope":1457,"src":"5808:322:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1330,"nodeType":"Block","src":"6649:239:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1299,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6663:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:8","memberName":"code","nodeType":"MemberAccess","src":"6663:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:8","memberName":"length","nodeType":"MemberAccess","src":"6663:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:8","subExpression":{"arguments":[{"id":1314,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6786:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6792:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6796:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1317,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"6803:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1312,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6760:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:8","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1328,"nodeType":"IfStatement","src":"6755:127:8","trueBody":{"id":1327,"nodeType":"Block","src":"6810:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1323,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6864:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1321,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:8","typeDescriptions":{}}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1320,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"6831:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1326,"nodeType":"RevertStatement","src":"6824:47:8"}]}},"id":1329,"nodeType":"IfStatement","src":"6659:223:8","trueBody":{"id":1311,"nodeType":"Block","src":"6684:65:8","statements":[{"expression":{"arguments":[{"id":1305,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"6715:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1306,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"6722:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"6728:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"6732:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1304,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"6698:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"6698:40:8"}]}}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"6136:341:8","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1331,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:8","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"token","nameLocation":"6536:5:8","nodeType":"VariableDeclaration","scope":1331,"src":"6527:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1287,"nodeType":"UserDefinedTypeName","pathNode":{"id":1286,"name":"IERC1363","nameLocations":["6527:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:8"},"referencedDeclaration":229,"src":"6527:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1290,"mutability":"mutable","name":"from","nameLocation":"6559:4:8","nodeType":"VariableDeclaration","scope":1331,"src":"6551:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"to","nameLocation":"6581:2:8","nodeType":"VariableDeclaration","scope":1331,"src":"6573:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"value","nameLocation":"6601:5:8","nodeType":"VariableDeclaration","scope":1331,"src":"6593:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"data","nameLocation":"6629:4:8","nodeType":"VariableDeclaration","scope":1331,"src":"6616:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1295,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:8"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"6649:0:8"},"scope":1457,"src":"6482:406:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1373,"nodeType":"Block","src":"7655:218:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7669:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:8","memberName":"code","nodeType":"MemberAccess","src":"7669:7:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:8","memberName":"length","nodeType":"MemberAccess","src":"7669:14:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:8","subExpression":{"arguments":[{"id":1358,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7777:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7781:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1360,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1341,"src":"7788:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1356,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7756:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:8","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1371,"nodeType":"IfStatement","src":"7751:116:8","trueBody":{"id":1370,"nodeType":"Block","src":"7795:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1366,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7849:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:8","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1363,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"7816:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1369,"nodeType":"RevertStatement","src":"7809:47:8"}]}},"id":1372,"nodeType":"IfStatement","src":"7665:202:8","trueBody":{"id":1355,"nodeType":"Block","src":"7690:55:8","statements":[{"expression":{"arguments":[{"id":1350,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"7717:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":1351,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7724:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7728:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1349,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"7704:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1354,"nodeType":"ExpressionStatement","src":"7704:30:8"}]}}]},"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"6894:654:8","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1374,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:8","nodeType":"FunctionDefinition","parameters":{"id":1342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"token","nameLocation":"7593:5:8","nodeType":"VariableDeclaration","scope":1374,"src":"7584:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":1334,"nodeType":"UserDefinedTypeName","pathNode":{"id":1333,"name":"IERC1363","nameLocations":["7584:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:8"},"referencedDeclaration":229,"src":"7584:8:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1337,"mutability":"mutable","name":"to","nameLocation":"7608:2:8","nodeType":"VariableDeclaration","scope":1374,"src":"7600:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1339,"mutability":"mutable","name":"value","nameLocation":"7620:5:8","nodeType":"VariableDeclaration","scope":1374,"src":"7612:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1341,"mutability":"mutable","name":"data","nameLocation":"7640:4:8","nodeType":"VariableDeclaration","scope":1374,"src":"7627:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1340,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:8"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[],"src":"7655:0:8"},"scope":1457,"src":"7553:320:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1414,"nodeType":"Block","src":"8440:650:8","statements":[{"assignments":[1384],"declarations":[{"constant":false,"id":1384,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:8","nodeType":"VariableDeclaration","scope":1414,"src":"8450:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1385,"nodeType":"VariableDeclarationStatement","src":"8450:18:8"},{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:8","nodeType":"VariableDeclaration","scope":1414,"src":"8478:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1388,"nodeType":"VariableDeclarationStatement","src":"8478:19:8"},{"AST":{"nativeSrc":"8532:396:8","nodeType":"YulBlock","src":"8532:396:8","statements":[{"nativeSrc":"8546:75:8","nodeType":"YulVariableDeclaration","src":"8546:75:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"8566:3:8","nodeType":"YulIdentifier","src":"8566:3:8"},"nativeSrc":"8566:5:8","nodeType":"YulFunctionCall","src":"8566:5:8"},{"name":"token","nativeSrc":"8573:5:8","nodeType":"YulIdentifier","src":"8573:5:8"},{"kind":"number","nativeSrc":"8580:1:8","nodeType":"YulLiteral","src":"8580:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"8587:4:8","nodeType":"YulIdentifier","src":"8587:4:8"},{"kind":"number","nativeSrc":"8593:4:8","nodeType":"YulLiteral","src":"8593:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8583:3:8","nodeType":"YulIdentifier","src":"8583:3:8"},"nativeSrc":"8583:15:8","nodeType":"YulFunctionCall","src":"8583:15:8"},{"arguments":[{"name":"data","nativeSrc":"8606:4:8","nodeType":"YulIdentifier","src":"8606:4:8"}],"functionName":{"name":"mload","nativeSrc":"8600:5:8","nodeType":"YulIdentifier","src":"8600:5:8"},"nativeSrc":"8600:11:8","nodeType":"YulFunctionCall","src":"8600:11:8"},{"kind":"number","nativeSrc":"8613:1:8","nodeType":"YulLiteral","src":"8613:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"8616:4:8","nodeType":"YulLiteral","src":"8616:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"8561:4:8","nodeType":"YulIdentifier","src":"8561:4:8"},"nativeSrc":"8561:60:8","nodeType":"YulFunctionCall","src":"8561:60:8"},"variables":[{"name":"success","nativeSrc":"8550:7:8","nodeType":"YulTypedName","src":"8550:7:8","type":""}]},{"body":{"nativeSrc":"8682:157:8","nodeType":"YulBlock","src":"8682:157:8","statements":[{"nativeSrc":"8700:22:8","nodeType":"YulVariableDeclaration","src":"8700:22:8","value":{"arguments":[{"kind":"number","nativeSrc":"8717:4:8","nodeType":"YulLiteral","src":"8717:4:8","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8711:5:8","nodeType":"YulIdentifier","src":"8711:5:8"},"nativeSrc":"8711:11:8","nodeType":"YulFunctionCall","src":"8711:11:8"},"variables":[{"name":"ptr","nativeSrc":"8704:3:8","nodeType":"YulTypedName","src":"8704:3:8","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8754:3:8","nodeType":"YulIdentifier","src":"8754:3:8"},{"kind":"number","nativeSrc":"8759:1:8","nodeType":"YulLiteral","src":"8759:1:8","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8762:14:8","nodeType":"YulIdentifier","src":"8762:14:8"},"nativeSrc":"8762:16:8","nodeType":"YulFunctionCall","src":"8762:16:8"}],"functionName":{"name":"returndatacopy","nativeSrc":"8739:14:8","nodeType":"YulIdentifier","src":"8739:14:8"},"nativeSrc":"8739:40:8","nodeType":"YulFunctionCall","src":"8739:40:8"},"nativeSrc":"8739:40:8","nodeType":"YulExpressionStatement","src":"8739:40:8"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8803:3:8","nodeType":"YulIdentifier","src":"8803:3:8"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8808:14:8","nodeType":"YulIdentifier","src":"8808:14:8"},"nativeSrc":"8808:16:8","nodeType":"YulFunctionCall","src":"8808:16:8"}],"functionName":{"name":"revert","nativeSrc":"8796:6:8","nodeType":"YulIdentifier","src":"8796:6:8"},"nativeSrc":"8796:29:8","nodeType":"YulFunctionCall","src":"8796:29:8"},"nativeSrc":"8796:29:8","nodeType":"YulExpressionStatement","src":"8796:29:8"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"8673:7:8","nodeType":"YulIdentifier","src":"8673:7:8"}],"functionName":{"name":"iszero","nativeSrc":"8666:6:8","nodeType":"YulIdentifier","src":"8666:6:8"},"nativeSrc":"8666:15:8","nodeType":"YulFunctionCall","src":"8666:15:8"},"nativeSrc":"8663:176:8","nodeType":"YulIf","src":"8663:176:8"},{"nativeSrc":"8852:30:8","nodeType":"YulAssignment","src":"8852:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8866:14:8","nodeType":"YulIdentifier","src":"8866:14:8"},"nativeSrc":"8866:16:8","nodeType":"YulFunctionCall","src":"8866:16:8"},"variableNames":[{"name":"returnSize","nativeSrc":"8852:10:8","nodeType":"YulIdentifier","src":"8852:10:8"}]},{"nativeSrc":"8895:23:8","nodeType":"YulAssignment","src":"8895:23:8","value":{"arguments":[{"kind":"number","nativeSrc":"8916:1:8","nodeType":"YulLiteral","src":"8916:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8910:5:8","nodeType":"YulIdentifier","src":"8910:5:8"},"nativeSrc":"8910:8:8","nodeType":"YulFunctionCall","src":"8910:8:8"},"variableNames":[{"name":"returnValue","nativeSrc":"8895:11:8","nodeType":"YulIdentifier","src":"8895:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1380,"isOffset":false,"isSlot":false,"src":"8587:4:8","valueSize":1},{"declaration":1380,"isOffset":false,"isSlot":false,"src":"8606:4:8","valueSize":1},{"declaration":1384,"isOffset":false,"isSlot":false,"src":"8852:10:8","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"8895:11:8","valueSize":1},{"declaration":1378,"isOffset":false,"isSlot":false,"src":"8573:5:8","valueSize":1}],"flags":["memory-safe"],"id":1389,"nodeType":"InlineAssembly","src":"8507:421:8"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1390,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"8942:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1401,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"8994:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1395,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"8968:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:8","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:8","memberName":"code","nodeType":"MemberAccess","src":"8960:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:8","memberName":"length","nodeType":"MemberAccess","src":"8960:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1413,"nodeType":"IfStatement","src":"8938:146:8","trueBody":{"id":1412,"nodeType":"Block","src":"9012:72:8","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1408,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"9066:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1406,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:8","typeDescriptions":{}}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1405,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"9033:24:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1411,"nodeType":"RevertStatement","src":"9026:47:8"}]}}]},"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"7879:486:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1415,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:8","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"mutability":"mutable","name":"token","nameLocation":"8406:5:8","nodeType":"VariableDeclaration","scope":1415,"src":"8399:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1377,"nodeType":"UserDefinedTypeName","pathNode":{"id":1376,"name":"IERC20","nameLocations":["8399:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"8399:6:8"},"referencedDeclaration":967,"src":"8399:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1380,"mutability":"mutable","name":"data","nameLocation":"8426:4:8","nodeType":"VariableDeclaration","scope":1415,"src":"8413:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1379,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:8"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"8440:0:8"},"scope":1457,"src":"8370:720:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1455,"nodeType":"Block","src":"9681:391:8","statements":[{"assignments":[1427],"declarations":[{"constant":false,"id":1427,"mutability":"mutable","name":"success","nameLocation":"9696:7:8","nodeType":"VariableDeclaration","scope":1455,"src":"9691:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1426,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1428,"nodeType":"VariableDeclarationStatement","src":"9691:12:8"},{"assignments":[1430],"declarations":[{"constant":false,"id":1430,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:8","nodeType":"VariableDeclaration","scope":1455,"src":"9713:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1431,"nodeType":"VariableDeclarationStatement","src":"9713:18:8"},{"assignments":[1433],"declarations":[{"constant":false,"id":1433,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:8","nodeType":"VariableDeclaration","scope":1455,"src":"9741:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1434,"nodeType":"VariableDeclarationStatement","src":"9741:19:8"},{"AST":{"nativeSrc":"9795:174:8","nodeType":"YulBlock","src":"9795:174:8","statements":[{"nativeSrc":"9809:71:8","nodeType":"YulAssignment","src":"9809:71:8","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9825:3:8","nodeType":"YulIdentifier","src":"9825:3:8"},"nativeSrc":"9825:5:8","nodeType":"YulFunctionCall","src":"9825:5:8"},{"name":"token","nativeSrc":"9832:5:8","nodeType":"YulIdentifier","src":"9832:5:8"},{"kind":"number","nativeSrc":"9839:1:8","nodeType":"YulLiteral","src":"9839:1:8","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9846:4:8","nodeType":"YulIdentifier","src":"9846:4:8"},{"kind":"number","nativeSrc":"9852:4:8","nodeType":"YulLiteral","src":"9852:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9842:3:8","nodeType":"YulIdentifier","src":"9842:3:8"},"nativeSrc":"9842:15:8","nodeType":"YulFunctionCall","src":"9842:15:8"},{"arguments":[{"name":"data","nativeSrc":"9865:4:8","nodeType":"YulIdentifier","src":"9865:4:8"}],"functionName":{"name":"mload","nativeSrc":"9859:5:8","nodeType":"YulIdentifier","src":"9859:5:8"},"nativeSrc":"9859:11:8","nodeType":"YulFunctionCall","src":"9859:11:8"},{"kind":"number","nativeSrc":"9872:1:8","nodeType":"YulLiteral","src":"9872:1:8","type":"","value":"0"},{"kind":"number","nativeSrc":"9875:4:8","nodeType":"YulLiteral","src":"9875:4:8","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9820:4:8","nodeType":"YulIdentifier","src":"9820:4:8"},"nativeSrc":"9820:60:8","nodeType":"YulFunctionCall","src":"9820:60:8"},"variableNames":[{"name":"success","nativeSrc":"9809:7:8","nodeType":"YulIdentifier","src":"9809:7:8"}]},{"nativeSrc":"9893:30:8","nodeType":"YulAssignment","src":"9893:30:8","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9907:14:8","nodeType":"YulIdentifier","src":"9907:14:8"},"nativeSrc":"9907:16:8","nodeType":"YulFunctionCall","src":"9907:16:8"},"variableNames":[{"name":"returnSize","nativeSrc":"9893:10:8","nodeType":"YulIdentifier","src":"9893:10:8"}]},{"nativeSrc":"9936:23:8","nodeType":"YulAssignment","src":"9936:23:8","value":{"arguments":[{"kind":"number","nativeSrc":"9957:1:8","nodeType":"YulLiteral","src":"9957:1:8","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9951:5:8","nodeType":"YulIdentifier","src":"9951:5:8"},"nativeSrc":"9951:8:8","nodeType":"YulFunctionCall","src":"9951:8:8"},"variableNames":[{"name":"returnValue","nativeSrc":"9936:11:8","nodeType":"YulIdentifier","src":"9936:11:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1421,"isOffset":false,"isSlot":false,"src":"9846:4:8","valueSize":1},{"declaration":1421,"isOffset":false,"isSlot":false,"src":"9865:4:8","valueSize":1},{"declaration":1430,"isOffset":false,"isSlot":false,"src":"9893:10:8","valueSize":1},{"declaration":1433,"isOffset":false,"isSlot":false,"src":"9936:11:8","valueSize":1},{"declaration":1427,"isOffset":false,"isSlot":false,"src":"9809:7:8","valueSize":1},{"declaration":1419,"isOffset":false,"isSlot":false,"src":"9832:5:8","valueSize":1}],"flags":["memory-safe"],"id":1435,"nodeType":"InlineAssembly","src":"9770:199:8"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1436,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"9985:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"9997:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"10048:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1442,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"10023:5:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1440,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:8","typeDescriptions":{}}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:8","memberName":"code","nodeType":"MemberAccess","src":"10015:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:8","memberName":"length","nodeType":"MemberAccess","src":"10015:26:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1425,"id":1454,"nodeType":"Return","src":"9978:87:8"}]},"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"9096:491:8","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1456,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:8","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"token","nameLocation":"9632:5:8","nodeType":"VariableDeclaration","scope":1456,"src":"9625:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":1418,"nodeType":"UserDefinedTypeName","pathNode":{"id":1417,"name":"IERC20","nameLocations":["9625:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"9625:6:8"},"referencedDeclaration":967,"src":"9625:6:8","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1421,"mutability":"mutable","name":"data","nameLocation":"9652:4:8","nodeType":"VariableDeclaration","scope":1456,"src":"9639:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1420,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:8"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1456,"src":"9675:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1423,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:8"},"scope":1457,"src":"9592:480:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1458,"src":"698:9376:8","usedErrors":[1005,1014],"usedEvents":[]}],"src":"115:9960:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1487]},"id":1488,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1459,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1460,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1487,"linearizedBaseContracts":[1487],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1468,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":1465,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1464,"id":1467,"nodeType":"Return","src":"728:17:9"}]},"id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1469,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":1487,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1477,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":1474,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1473,"id":1476,"nodeType":"Return","src":"835:15:9"}]},"id":1478,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":1470,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1478,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1471,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":1487,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1485,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":1483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1482,"id":1484,"nodeType":"Return","src":"945:8:9"}]},"id":1486,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":1479,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1486,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":1487,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1488,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1556]},"id":1557,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1489,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:10"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"135:894:10","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1556,"linearizedBaseContracts":[1556],"name":"ReentrancyGuard","nameLocation":"1048:15:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1493,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:10","nodeType":"VariableDeclaration","scope":1556,"src":"1818:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1496,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:10","nodeType":"VariableDeclaration","scope":1556,"src":"1864:36:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1498,"mutability":"mutable","name":"_status","nameLocation":"1923:7:10","nodeType":"VariableDeclaration","scope":1556,"src":"1907:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"1937:52:10","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":1501,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:10","nodeType":"ErrorDefinition","parameters":{"id":1500,"nodeType":"ParameterList","parameters":[],"src":"2028:2:10"},"src":"1994:37:10"},{"body":{"id":1508,"nodeType":"Block","src":"2051:38:10","statements":[{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1504,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1505,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"2071:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1507,"nodeType":"ExpressionStatement","src":"2061:21:10"}]},"id":1509,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[],"src":"2048:2:10"},"returnParameters":{"id":1503,"nodeType":"ParameterList","parameters":[],"src":"2051:0:10"},"scope":1556,"src":"2037:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1519,"nodeType":"Block","src":"2490:79:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1512,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"2500:19:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1514,"nodeType":"ExpressionStatement","src":"2500:21:10"},{"id":1515,"nodeType":"PlaceholderStatement","src":"2531:1:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1516,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2542:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1518,"nodeType":"ExpressionStatement","src":"2542:20:10"}]},"documentation":{"id":1510,"nodeType":"StructuredDocumentation","src":"2095:366:10","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":1520,"name":"nonReentrant","nameLocation":"2475:12:10","nodeType":"ModifierDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[],"src":"2487:2:10"},"src":"2466:103:10","virtual":false,"visibility":"internal"},{"body":{"id":1535,"nodeType":"Block","src":"2614:268:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1523,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2702:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1524,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2713:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1530,"nodeType":"IfStatement","src":"2698:86:10","trueBody":{"id":1529,"nodeType":"Block","src":"2722:62:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1526,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"2743:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1528,"nodeType":"RevertStatement","src":"2736:37:10"}]}},{"expression":{"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1531,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"2858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1532,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"2868:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1534,"nodeType":"ExpressionStatement","src":"2858:17:10"}]},"id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:10","nodeType":"FunctionDefinition","parameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"2603:2:10"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[],"src":"2614:0:10"},"scope":1556,"src":"2575:307:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1543,"nodeType":"Block","src":"2926:170:10","statements":[{"expression":{"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1539,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"3068:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1540,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"3078:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1542,"nodeType":"ExpressionStatement","src":"3068:21:10"}]},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:10","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[],"src":"2915:2:10"},"returnParameters":{"id":1538,"nodeType":"ParameterList","parameters":[],"src":"2926:0:10"},"scope":1556,"src":"2888:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1554,"nodeType":"Block","src":"3339:42:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1550,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"3356:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1551,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"3367:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1549,"id":1553,"nodeType":"Return","src":"3349:25:10"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"3102:168:10","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:10","nodeType":"FunctionDefinition","parameters":{"id":1546,"nodeType":"ParameterList","parameters":[],"src":"3307:2:10"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1555,"src":"3333:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1547,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:10"},"scope":1556,"src":"3275:106:10","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1557,"src":"1030:2353:10","usedErrors":[1501],"usedEvents":[]}],"src":"109:3275:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[1904]},"id":1905,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1558,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":1559,"nodeType":"StructuredDocumentation","src":"138:205:11","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":1904,"linearizedBaseContracts":[1904],"name":"ECDSA","nameLocation":"352:5:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":1564,"members":[{"id":1560,"name":"NoError","nameLocation":"392:7:11","nodeType":"EnumValue","src":"392:7:11"},{"id":1561,"name":"InvalidSignature","nameLocation":"409:16:11","nodeType":"EnumValue","src":"409:16:11"},{"id":1562,"name":"InvalidSignatureLength","nameLocation":"435:22:11","nodeType":"EnumValue","src":"435:22:11"},{"id":1563,"name":"InvalidSignatureS","nameLocation":"467:17:11","nodeType":"EnumValue","src":"467:17:11"}],"name":"RecoverError","nameLocation":"369:12:11","nodeType":"EnumDefinition","src":"364:126:11"},{"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"496:63:11","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":1567,"name":"ECDSAInvalidSignature","nameLocation":"570:21:11","nodeType":"ErrorDefinition","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[],"src":"591:2:11"},"src":"564:30:11"},{"documentation":{"id":1568,"nodeType":"StructuredDocumentation","src":"600:60:11","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":1572,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:11","nodeType":"ErrorDefinition","parameters":{"id":1571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1570,"mutability":"mutable","name":"length","nameLocation":"707:6:11","nodeType":"VariableDeclaration","scope":1572,"src":"699:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:11"},"src":"665:50:11"},{"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"721:85:11","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":1577,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:11","nodeType":"ErrorDefinition","parameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1575,"mutability":"mutable","name":"s","nameLocation":"848:1:11","nodeType":"VariableDeclaration","scope":1577,"src":"840:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:11"},"src":"811:40:11"},{"body":{"id":1629,"nodeType":"Block","src":"2285:622:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1592,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"2299:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:11","memberName":"length","nodeType":"MemberAccess","src":"2299:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":1594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1627,"nodeType":"Block","src":"2793:108:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1614,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:11","typeDescriptions":{}}},"id":1617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1618,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"2827:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"2827:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":1622,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1582,"src":"2872:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:11","memberName":"length","nodeType":"MemberAccess","src":"2872:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:11","typeDescriptions":{}}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1591,"id":1626,"nodeType":"Return","src":"2807:83:11"}]},"id":1628,"nodeType":"IfStatement","src":"2295:606:11","trueBody":{"id":1613,"nodeType":"Block","src":"2323:464:11","statements":[{"assignments":[1597],"declarations":[{"constant":false,"id":1597,"mutability":"mutable","name":"r","nameLocation":"2345:1:11","nodeType":"VariableDeclaration","scope":1613,"src":"2337:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1598,"nodeType":"VariableDeclarationStatement","src":"2337:9:11"},{"assignments":[1600],"declarations":[{"constant":false,"id":1600,"mutability":"mutable","name":"s","nameLocation":"2368:1:11","nodeType":"VariableDeclaration","scope":1613,"src":"2360:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1601,"nodeType":"VariableDeclarationStatement","src":"2360:9:11"},{"assignments":[1603],"declarations":[{"constant":false,"id":1603,"mutability":"mutable","name":"v","nameLocation":"2389:1:11","nodeType":"VariableDeclaration","scope":1613,"src":"2383:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1602,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1604,"nodeType":"VariableDeclarationStatement","src":"2383:7:11"},{"AST":{"nativeSrc":"2560:171:11","nodeType":"YulBlock","src":"2560:171:11","statements":[{"nativeSrc":"2578:32:11","nodeType":"YulAssignment","src":"2578:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:11","nodeType":"YulIdentifier","src":"2593:9:11"},{"kind":"number","nativeSrc":"2604:4:11","nodeType":"YulLiteral","src":"2604:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:11","nodeType":"YulIdentifier","src":"2589:3:11"},"nativeSrc":"2589:20:11","nodeType":"YulFunctionCall","src":"2589:20:11"}],"functionName":{"name":"mload","nativeSrc":"2583:5:11","nodeType":"YulIdentifier","src":"2583:5:11"},"nativeSrc":"2583:27:11","nodeType":"YulFunctionCall","src":"2583:27:11"},"variableNames":[{"name":"r","nativeSrc":"2578:1:11","nodeType":"YulIdentifier","src":"2578:1:11"}]},{"nativeSrc":"2627:32:11","nodeType":"YulAssignment","src":"2627:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:11","nodeType":"YulIdentifier","src":"2642:9:11"},{"kind":"number","nativeSrc":"2653:4:11","nodeType":"YulLiteral","src":"2653:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:11","nodeType":"YulIdentifier","src":"2638:3:11"},"nativeSrc":"2638:20:11","nodeType":"YulFunctionCall","src":"2638:20:11"}],"functionName":{"name":"mload","nativeSrc":"2632:5:11","nodeType":"YulIdentifier","src":"2632:5:11"},"nativeSrc":"2632:27:11","nodeType":"YulFunctionCall","src":"2632:27:11"},"variableNames":[{"name":"s","nativeSrc":"2627:1:11","nodeType":"YulIdentifier","src":"2627:1:11"}]},{"nativeSrc":"2676:41:11","nodeType":"YulAssignment","src":"2676:41:11","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:11","nodeType":"YulLiteral","src":"2686:1:11","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:11","nodeType":"YulIdentifier","src":"2699:9:11"},{"kind":"number","nativeSrc":"2710:4:11","nodeType":"YulLiteral","src":"2710:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:11","nodeType":"YulIdentifier","src":"2695:3:11"},"nativeSrc":"2695:20:11","nodeType":"YulFunctionCall","src":"2695:20:11"}],"functionName":{"name":"mload","nativeSrc":"2689:5:11","nodeType":"YulIdentifier","src":"2689:5:11"},"nativeSrc":"2689:27:11","nodeType":"YulFunctionCall","src":"2689:27:11"}],"functionName":{"name":"byte","nativeSrc":"2681:4:11","nodeType":"YulIdentifier","src":"2681:4:11"},"nativeSrc":"2681:36:11","nodeType":"YulFunctionCall","src":"2681:36:11"},"variableNames":[{"name":"v","nativeSrc":"2676:1:11","nodeType":"YulIdentifier","src":"2676:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1597,"isOffset":false,"isSlot":false,"src":"2578:1:11","valueSize":1},{"declaration":1600,"isOffset":false,"isSlot":false,"src":"2627:1:11","valueSize":1},{"declaration":1582,"isOffset":false,"isSlot":false,"src":"2593:9:11","valueSize":1},{"declaration":1582,"isOffset":false,"isSlot":false,"src":"2642:9:11","valueSize":1},{"declaration":1582,"isOffset":false,"isSlot":false,"src":"2699:9:11","valueSize":1},{"declaration":1603,"isOffset":false,"isSlot":false,"src":"2676:1:11","valueSize":1}],"flags":["memory-safe"],"id":1605,"nodeType":"InlineAssembly","src":"2535:196:11"},{"expression":{"arguments":[{"id":1607,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"2762:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1608,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"2768:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1609,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1597,"src":"2771:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1610,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"2774:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1606,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1630,1710,1818],"referencedDeclaration":1818,"src":"2751:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1591,"id":1612,"nodeType":"Return","src":"2744:32:11"}]}}]},"documentation":{"id":1578,"nodeType":"StructuredDocumentation","src":"857:1267:11","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:11","nodeType":"FunctionDefinition","parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"hash","nameLocation":"2166:4:11","nodeType":"VariableDeclaration","scope":1630,"src":"2158:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"signature","nameLocation":"2193:9:11","nodeType":"VariableDeclaration","scope":1630,"src":"2180:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:11"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:11","nodeType":"VariableDeclaration","scope":1630,"src":"2232:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1588,"mutability":"mutable","name":"err","nameLocation":"2264:3:11","nodeType":"VariableDeclaration","scope":1630,"src":"2251:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1587,"nodeType":"UserDefinedTypeName","pathNode":{"id":1586,"name":"RecoverError","nameLocations":["2251:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1564,"src":"2251:12:11"},"referencedDeclaration":1564,"src":"2251:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1590,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:11","nodeType":"VariableDeclaration","scope":1630,"src":"2269:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1589,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:11"},"scope":1904,"src":"2129:778:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1659,"nodeType":"Block","src":"3801:168:11","statements":[{"assignments":[1641,1644,1646],"declarations":[{"constant":false,"id":1641,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:11","nodeType":"VariableDeclaration","scope":1659,"src":"3812:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1640,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"error","nameLocation":"3844:5:11","nodeType":"VariableDeclaration","scope":1659,"src":"3831:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1643,"nodeType":"UserDefinedTypeName","pathNode":{"id":1642,"name":"RecoverError","nameLocations":["3831:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1564,"src":"3831:12:11"},"referencedDeclaration":1564,"src":"3831:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:11","nodeType":"VariableDeclaration","scope":1659,"src":"3851:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1651,"initialValue":{"arguments":[{"id":1648,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"3882:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1649,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"3888:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1647,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1630,1710,1818],"referencedDeclaration":1630,"src":"3871:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:11"},{"expression":{"arguments":[{"id":1653,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"3920:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},{"id":1654,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"3927:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1652,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"3908:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1564_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1656,"nodeType":"ExpressionStatement","src":"3908:28:11"},{"expression":{"id":1657,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"3953:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1639,"id":1658,"nodeType":"Return","src":"3946:16:11"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"2913:796:11","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":1660,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:11","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"hash","nameLocation":"3739:4:11","nodeType":"VariableDeclaration","scope":1660,"src":"3731:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"signature","nameLocation":"3758:9:11","nodeType":"VariableDeclaration","scope":1660,"src":"3745:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1634,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:11"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1660,"src":"3792:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:11"},"scope":1904,"src":"3714:255:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1709,"nodeType":"Block","src":"4348:342:11","statements":[{"id":1708,"nodeType":"UncheckedBlock","src":"4358:326:11","statements":[{"assignments":[1678],"declarations":[{"constant":false,"id":1678,"mutability":"mutable","name":"s","nameLocation":"4390:1:11","nodeType":"VariableDeclaration","scope":1708,"src":"4382:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1685,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1679,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"4394:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1680,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:11","typeDescriptions":{}}},"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:11"},{"assignments":[1687],"declarations":[{"constant":false,"id":1687,"mutability":"mutable","name":"v","nameLocation":"4591:1:11","nodeType":"VariableDeclaration","scope":1708,"src":"4585:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1686,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1700,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1692,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"4610:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:11","typeDescriptions":{}}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1696,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":1697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:11","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1688,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:11","typeDescriptions":{}}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:11"},{"expression":{"arguments":[{"id":1702,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"4659:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1703,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"4665:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1704,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"4668:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1705,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"4671:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1701,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1630,1710,1818],"referencedDeclaration":1818,"src":"4648:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1676,"id":1707,"nodeType":"Return","src":"4641:32:11"}]}]},"documentation":{"id":1661,"nodeType":"StructuredDocumentation","src":"3975:205:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":1710,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:11","nodeType":"FunctionDefinition","parameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1663,"mutability":"mutable","name":"hash","nameLocation":"4222:4:11","nodeType":"VariableDeclaration","scope":1710,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1662,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"r","nameLocation":"4244:1:11","nodeType":"VariableDeclaration","scope":1710,"src":"4236:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1664,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"vs","nameLocation":"4263:2:11","nodeType":"VariableDeclaration","scope":1710,"src":"4255:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1666,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:11"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:11","nodeType":"VariableDeclaration","scope":1710,"src":"4295:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1673,"mutability":"mutable","name":"err","nameLocation":"4327:3:11","nodeType":"VariableDeclaration","scope":1710,"src":"4314:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1672,"nodeType":"UserDefinedTypeName","pathNode":{"id":1671,"name":"RecoverError","nameLocations":["4314:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1564,"src":"4314:12:11"},"referencedDeclaration":1564,"src":"4314:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1675,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:11","nodeType":"VariableDeclaration","scope":1710,"src":"4332:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:11"},"scope":1904,"src":"4185:505:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1742,"nodeType":"Block","src":"4903:164:11","statements":[{"assignments":[1723,1726,1728],"declarations":[{"constant":false,"id":1723,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:11","nodeType":"VariableDeclaration","scope":1742,"src":"4914:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1722,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1726,"mutability":"mutable","name":"error","nameLocation":"4946:5:11","nodeType":"VariableDeclaration","scope":1742,"src":"4933:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1725,"nodeType":"UserDefinedTypeName","pathNode":{"id":1724,"name":"RecoverError","nameLocations":["4933:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1564,"src":"4933:12:11"},"referencedDeclaration":1564,"src":"4933:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:11","nodeType":"VariableDeclaration","scope":1742,"src":"4953:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1727,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1734,"initialValue":{"arguments":[{"id":1730,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"4984:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1731,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"4990:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1732,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"4993:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1729,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1630,1710,1818],"referencedDeclaration":1710,"src":"4973:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:11"},{"expression":{"arguments":[{"id":1736,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5018:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},{"id":1737,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"5025:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1735,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"5006:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1564_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1739,"nodeType":"ExpressionStatement","src":"5006:28:11"},{"expression":{"id":1740,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"5051:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1721,"id":1741,"nodeType":"Return","src":"5044:16:11"}]},"documentation":{"id":1711,"nodeType":"StructuredDocumentation","src":"4696:116:11","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":1743,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:11","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1713,"mutability":"mutable","name":"hash","nameLocation":"4842:4:11","nodeType":"VariableDeclaration","scope":1743,"src":"4834:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1712,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1715,"mutability":"mutable","name":"r","nameLocation":"4856:1:11","nodeType":"VariableDeclaration","scope":1743,"src":"4848:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1714,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1717,"mutability":"mutable","name":"vs","nameLocation":"4867:2:11","nodeType":"VariableDeclaration","scope":1743,"src":"4859:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:11"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1743,"src":"4894:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:11"},"scope":1904,"src":"4817:250:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"5382:1372:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1764,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6278:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1762,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:11","typeDescriptions":{}}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1778,"nodeType":"IfStatement","src":"6266:164:11","trueBody":{"id":1777,"nodeType":"Block","src":"6351:79:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:11","typeDescriptions":{}}},"id":1771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1772,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"6385:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"6385:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},{"id":1774,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6417:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1761,"id":1776,"nodeType":"Return","src":"6365:54:11"}]}},{"assignments":[1780],"declarations":[{"constant":false,"id":1780,"mutability":"mutable","name":"signer","nameLocation":"6532:6:11","nodeType":"VariableDeclaration","scope":1817,"src":"6524:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1787,"initialValue":{"arguments":[{"id":1782,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"6551:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1783,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"6557:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1784,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"6560:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1785,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"6563:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1781,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"6579:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:11","typeDescriptions":{}}},"id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1807,"nodeType":"IfStatement","src":"6575:113:11","trueBody":{"id":1806,"nodeType":"Block","src":"6601:87:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":1796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:11","typeDescriptions":{}}},"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1798,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"6635:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1561,"src":"6635:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1800,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:11","typeDescriptions":{}}},"id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1761,"id":1805,"nodeType":"Return","src":"6615:62:11"}]}},{"expression":{"components":[{"id":1808,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"6706:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1809,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"6714:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1560,"src":"6714:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:11","typeDescriptions":{}}},"id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1815,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":1761,"id":1816,"nodeType":"Return","src":"6698:49:11"}]},"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"5073:125:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:11","nodeType":"FunctionDefinition","parameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"hash","nameLocation":"5240:4:11","nodeType":"VariableDeclaration","scope":1818,"src":"5232:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"v","nameLocation":"5260:1:11","nodeType":"VariableDeclaration","scope":1818,"src":"5254:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1747,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1750,"mutability":"mutable","name":"r","nameLocation":"5279:1:11","nodeType":"VariableDeclaration","scope":1818,"src":"5271:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"s","nameLocation":"5298:1:11","nodeType":"VariableDeclaration","scope":1818,"src":"5290:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1751,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:11"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:11","nodeType":"VariableDeclaration","scope":1818,"src":"5329:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"err","nameLocation":"5361:3:11","nodeType":"VariableDeclaration","scope":1818,"src":"5348:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1757,"nodeType":"UserDefinedTypeName","pathNode":{"id":1756,"name":"RecoverError","nameLocations":["5348:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1564,"src":"5348:12:11"},"referencedDeclaration":1564,"src":"5348:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:11","nodeType":"VariableDeclaration","scope":1818,"src":"5366:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1759,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:11"},"scope":1904,"src":"5203:1551:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1853,"nodeType":"Block","src":"6981:166:11","statements":[{"assignments":[1833,1836,1838],"declarations":[{"constant":false,"id":1833,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:11","nodeType":"VariableDeclaration","scope":1853,"src":"6992:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1832,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"error","nameLocation":"7024:5:11","nodeType":"VariableDeclaration","scope":1853,"src":"7011:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1835,"nodeType":"UserDefinedTypeName","pathNode":{"id":1834,"name":"RecoverError","nameLocations":["7011:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1564,"src":"7011:12:11"},"referencedDeclaration":1564,"src":"7011:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:11","nodeType":"VariableDeclaration","scope":1853,"src":"7031:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1845,"initialValue":{"arguments":[{"id":1840,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"7062:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1841,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1823,"src":"7068:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1842,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"7071:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1843,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"7074:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1839,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[1630,1710,1818],"referencedDeclaration":1818,"src":"7051:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$1564_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:11"},{"expression":{"arguments":[{"id":1847,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"7098:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},{"id":1848,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"7105:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1846,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"7086:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$1564_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1850,"nodeType":"ExpressionStatement","src":"7086:28:11"},{"expression":{"id":1851,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"7131:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1831,"id":1852,"nodeType":"Return","src":"7124:16:11"}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"6760:122:11","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":1854,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:11","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"hash","nameLocation":"6912:4:11","nodeType":"VariableDeclaration","scope":1854,"src":"6904:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1823,"mutability":"mutable","name":"v","nameLocation":"6924:1:11","nodeType":"VariableDeclaration","scope":1854,"src":"6918:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1822,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"r","nameLocation":"6935:1:11","nodeType":"VariableDeclaration","scope":1854,"src":"6927:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"s","nameLocation":"6946:1:11","nodeType":"VariableDeclaration","scope":1854,"src":"6938:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1826,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:11"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1854,"src":"6972:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1829,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:11"},"scope":1904,"src":"6887:260:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1902,"nodeType":"Block","src":"7352:460:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1863,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7366:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1864,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"7375:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":1560,"src":"7375:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1869,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7462:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1870,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"7471:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1871,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":1561,"src":"7471:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1877,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7567:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1878,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"7576:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":1562,"src":"7576:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1889,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"7701:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1890,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"7710:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$1564_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":1563,"src":"7710:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1898,"nodeType":"IfStatement","src":"7697:109:11","trueBody":{"id":1897,"nodeType":"Block","src":"7742:64:11","statements":[{"errorCall":{"arguments":[{"id":1894,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7786:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1893,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"7763:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1896,"nodeType":"RevertStatement","src":"7756:39:11"}]}},"id":1899,"nodeType":"IfStatement","src":"7563:243:11","trueBody":{"id":1888,"nodeType":"Block","src":"7613:78:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1884,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"7670:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:11","typeDescriptions":{}}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1881,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"7634:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1887,"nodeType":"RevertStatement","src":"7627:53:11"}]}},"id":1900,"nodeType":"IfStatement","src":"7458:348:11","trueBody":{"id":1876,"nodeType":"Block","src":"7502:55:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1873,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1567,"src":"7523:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1875,"nodeType":"RevertStatement","src":"7516:30:11"}]}},"id":1901,"nodeType":"IfStatement","src":"7362:444:11","trueBody":{"id":1868,"nodeType":"Block","src":"7397:55:11","statements":[{"functionReturnParameters":1862,"id":1867,"nodeType":"Return","src":"7411:7:11"}]}}]},"documentation":{"id":1855,"nodeType":"StructuredDocumentation","src":"7153:122:11","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":1903,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:11","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"error","nameLocation":"7314:5:11","nodeType":"VariableDeclaration","scope":1903,"src":"7301:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":1857,"nodeType":"UserDefinedTypeName","pathNode":{"id":1856,"name":"RecoverError","nameLocations":["7301:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":1564,"src":"7301:12:11"},"referencedDeclaration":1564,"src":"7301:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$1564","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:11","nodeType":"VariableDeclaration","scope":1903,"src":"7321:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1859,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:11"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"7352:0:11"},"scope":1904,"src":"7280:532:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1905,"src":"344:7470:11","usedErrors":[1567,1572,1577],"usedEvents":[]}],"src":"112:7703:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1916]},"id":1917,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1906,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1907,"nodeType":"StructuredDocumentation","src":"142:280:12","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1916,"linearizedBaseContracts":[1916],"name":"IERC165","nameLocation":"433:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"447:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1915,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:12","nodeType":"FunctionDefinition","parameters":{"id":1911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1910,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:12","nodeType":"VariableDeclaration","scope":1915,"src":"819:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1909,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:12"},"returnParameters":{"id":1914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1915,"src":"862:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1912,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:12"},"scope":1916,"src":"792:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1917,"src":"423:447:12","usedErrors":[],"usedEvents":[]}],"src":"115:756:12"},"id":12},"contracts/MockPYUSD.sol":{"ast":{"absolutePath":"contracts/MockPYUSD.sol","exportedSymbols":{"Context":[1487],"ERC20":[889],"IERC20":[967],"IERC20Errors":[279],"IERC20Metadata":[993],"MockPYUSD":[2105]},"id":2106,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1918,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1919,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2106,"sourceUnit":890,"src":"57:55:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1920,"name":"ERC20","nameLocations":["136:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"136:5:13"},"id":1921,"nodeType":"InheritanceSpecifier","src":"136:5:13"}],"canonicalName":"MockPYUSD","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2105,"linearizedBaseContracts":[2105,889,279,993,967,1487],"name":"MockPYUSD","nameLocation":"123:9:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1923,"mutability":"mutable","name":"_decimals","nameLocation":"162:9:13","nodeType":"VariableDeclaration","scope":2105,"src":"148:23:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1922,"name":"uint8","nodeType":"ElementaryTypeName","src":"148:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"constant":false,"functionSelector":"d5b8b5be","id":1925,"mutability":"mutable","name":"transferFailing","nameLocation":"189:15:13","nodeType":"VariableDeclaration","scope":2105,"src":"177:27:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1924,"name":"bool","nodeType":"ElementaryTypeName","src":"177:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"1e0f867c","id":1929,"mutability":"mutable","name":"forceFailOnTransfer","nameLocation":"242:19:13","nodeType":"VariableDeclaration","scope":2105,"src":"210:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1928,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1926,"name":"address","nodeType":"ElementaryTypeName","src":"218:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"210:24:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1927,"name":"bool","nodeType":"ElementaryTypeName","src":"229:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":1950,"nodeType":"Block","src":"311:106:13","statements":[{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1936,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"321:9:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"36","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"333:1:13","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"321:13:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1939,"nodeType":"ExpressionStatement","src":"321:13:13"},{"expression":{"arguments":[{"expression":{"id":1941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"350:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"354:6:13","memberName":"sender","nodeType":"MemberAccess","src":"350:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"362:7:13","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"372:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1945,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"376:9:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"372:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"362:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1940,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"344:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"344:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1949,"nodeType":"ExpressionStatement","src":"344:42:13"}]},"id":1951,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"50617950616c20555344","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"288:12:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_5c2008a73450857669672559c26c7ef7d798ff376bfaece1cb1311e2faa19b51","typeString":"literal_string \"PayPal USD\""},"value":"PayPal USD"},{"hexValue":"5059555344","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"302:7:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4de1662037f55cb794da13cab66bc4d0787a463af1249ee3624319fa70f7b48c","typeString":"literal_string \"PYUSD\""},"value":"PYUSD"}],"id":1934,"kind":"baseConstructorSpecifier","modifierName":{"id":1931,"name":"ERC20","nameLocations":["282:5:13"],"nodeType":"IdentifierPath","referencedDeclaration":889,"src":"282:5:13"},"nodeType":"ModifierInvocation","src":"282:28:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1930,"nodeType":"ParameterList","parameters":[],"src":"279:2:13"},"returnParameters":{"id":1935,"nodeType":"ParameterList","parameters":[],"src":"311:0:13"},"scope":2105,"src":"268:149:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[453],"body":{"id":1959,"nodeType":"Block","src":"488:33:13","statements":[{"expression":{"id":1957,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"505:9:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1956,"id":1958,"nodeType":"Return","src":"498:16:13"}]},"functionSelector":"313ce567","id":1960,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"432:8:13","nodeType":"FunctionDefinition","overrides":{"id":1953,"nodeType":"OverrideSpecifier","overrides":[],"src":"463:8:13"},"parameters":{"id":1952,"nodeType":"ParameterList","parameters":[],"src":"440:2:13"},"returnParameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1960,"src":"481:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1954,"name":"uint8","nodeType":"ElementaryTypeName","src":"481:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"480:7:13"},"scope":2105,"src":"423:98:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1972,"nodeType":"Block","src":"578:34:13","statements":[{"expression":{"arguments":[{"id":1968,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"594:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"598:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1967,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"588:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"588:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1971,"nodeType":"ExpressionStatement","src":"588:17:13"}]},"functionSelector":"40c10f19","id":1973,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"536:4:13","nodeType":"FunctionDefinition","parameters":{"id":1965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1962,"mutability":"mutable","name":"to","nameLocation":"549:2:13","nodeType":"VariableDeclaration","scope":1973,"src":"541:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1961,"name":"address","nodeType":"ElementaryTypeName","src":"541:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1964,"mutability":"mutable","name":"amount","nameLocation":"561:6:13","nodeType":"VariableDeclaration","scope":1973,"src":"553:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"553:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"540:28:13"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[],"src":"578:0:13"},"scope":2105,"src":"527:85:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1985,"nodeType":"Block","src":"671:36:13","statements":[{"expression":{"arguments":[{"id":1981,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1975,"src":"687:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1982,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1977,"src":"693:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1980,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"681:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"681:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1984,"nodeType":"ExpressionStatement","src":"681:19:13"}]},"functionSelector":"9dc29fac","id":1986,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"627:4:13","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"from","nameLocation":"640:4:13","nodeType":"VariableDeclaration","scope":1986,"src":"632:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1974,"name":"address","nodeType":"ElementaryTypeName","src":"632:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1977,"mutability":"mutable","name":"amount","nameLocation":"654:6:13","nodeType":"VariableDeclaration","scope":1986,"src":"646:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:30:13"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[],"src":"671:0:13"},"scope":2105,"src":"618:89:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2023,"nodeType":"Block","src":"775:261:13","statements":[{"assignments":[1994],"declarations":[{"constant":false,"id":1994,"mutability":"mutable","name":"currentBalance","nameLocation":"793:14:13","nodeType":"VariableDeclaration","scope":2023,"src":"785:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"785:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1998,"initialValue":{"arguments":[{"id":1996,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"820:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1995,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"810:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"810:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"785:43:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1999,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"842:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2000,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"851:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"842:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2010,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"941:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2011,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"950:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"nodeType":"IfStatement","src":"937:93:13","trueBody":{"id":2020,"nodeType":"Block","src":"966:64:13","statements":[{"expression":{"arguments":[{"id":2014,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"986:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2015,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"995:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2016,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"1012:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"995:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2013,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"980:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"980:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2019,"nodeType":"ExpressionStatement","src":"980:39:13"}]}},"id":2022,"nodeType":"IfStatement","src":"838:192:13","trueBody":{"id":2009,"nodeType":"Block","src":"867:64:13","statements":[{"expression":{"arguments":[{"id":2003,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"887:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2004,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1990,"src":"896:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2005,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"905:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"896:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2002,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"881:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"881:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2008,"nodeType":"ExpressionStatement","src":"881:39:13"}]}}]},"functionSelector":"e30443bc","id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"setBalance","nameLocation":"722:10:13","nodeType":"FunctionDefinition","parameters":{"id":1991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"account","nameLocation":"741:7:13","nodeType":"VariableDeclaration","scope":2024,"src":"733:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1987,"name":"address","nodeType":"ElementaryTypeName","src":"733:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1990,"mutability":"mutable","name":"amount","nameLocation":"758:6:13","nodeType":"VariableDeclaration","scope":2024,"src":"750:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1989,"name":"uint256","nodeType":"ElementaryTypeName","src":"750:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"732:33:13"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[],"src":"775:0:13"},"scope":2105,"src":"713:323:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2033,"nodeType":"Block","src":"1093:42:13","statements":[{"expression":{"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2029,"name":"transferFailing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"1103:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2030,"name":"failing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2026,"src":"1121:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1103:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2032,"nodeType":"ExpressionStatement","src":"1103:25:13"}]},"functionSelector":"a6290fff","id":2034,"implemented":true,"kind":"function","modifiers":[],"name":"setTransferFailing","nameLocation":"1051:18:13","nodeType":"FunctionDefinition","parameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"failing","nameLocation":"1075:7:13","nodeType":"VariableDeclaration","scope":2034,"src":"1070:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2025,"name":"bool","nodeType":"ElementaryTypeName","src":"1070:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1069:14:13"},"returnParameters":{"id":2028,"nodeType":"ParameterList","parameters":[],"src":"1093:0:13"},"scope":2105,"src":"1042:93:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2047,"nodeType":"Block","src":"1210:52:13","statements":[{"expression":{"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2041,"name":"forceFailOnTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"1220:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2043,"indexExpression":{"id":2042,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"1240:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1220:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2044,"name":"fail","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"1251:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1220:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2046,"nodeType":"ExpressionStatement","src":"1220:35:13"}]},"functionSelector":"c0bd8085","id":2048,"implemented":true,"kind":"function","modifiers":[],"name":"setForceFailOnTransfer","nameLocation":"1150:22:13","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"account","nameLocation":"1181:7:13","nodeType":"VariableDeclaration","scope":2048,"src":"1173:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"1173:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"fail","nameLocation":"1195:4:13","nodeType":"VariableDeclaration","scope":2048,"src":"1190:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2037,"name":"bool","nodeType":"ElementaryTypeName","src":"1190:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1172:28:13"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[],"src":"1210:0:13"},"scope":2105,"src":"1141:121:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[499],"body":{"id":2074,"nodeType":"Block","src":"1345:194:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2058,"name":"transferFailing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"1359:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"id":2059,"name":"forceFailOnTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"1378:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2062,"indexExpression":{"expression":{"id":2060,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1398:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1402:6:13","memberName":"sender","nodeType":"MemberAccess","src":"1398:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1378:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1359:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2067,"nodeType":"IfStatement","src":"1355:135:13","trueBody":{"id":2066,"nodeType":"Block","src":"1411:79:13","statements":[{"expression":{"hexValue":"66616c7365","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1432:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2057,"id":2065,"nodeType":"Return","src":"1425:12:13"}]}},{"expression":{"arguments":[{"id":2070,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"1521:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2071,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"1525:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2068,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1506:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MockPYUSD_$2105_$","typeString":"type(contract super MockPYUSD)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1512:8:13","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":499,"src":"1506:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) returns (bool)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1506:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2057,"id":2073,"nodeType":"Return","src":"1499:33:13"}]},"functionSelector":"a9059cbb","id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1277:8:13","nodeType":"FunctionDefinition","overrides":{"id":2054,"nodeType":"OverrideSpecifier","overrides":[],"src":"1321:8:13"},"parameters":{"id":2053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2050,"mutability":"mutable","name":"to","nameLocation":"1294:2:13","nodeType":"VariableDeclaration","scope":2075,"src":"1286:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"1286:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2052,"mutability":"mutable","name":"amount","nameLocation":"1306:6:13","nodeType":"VariableDeclaration","scope":2075,"src":"1298:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2051,"name":"uint256","nodeType":"ElementaryTypeName","src":"1298:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1285:28:13"},"returnParameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2075,"src":"1339:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2055,"name":"bool","nodeType":"ElementaryTypeName","src":"1339:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1338:6:13"},"scope":2105,"src":"1268:271:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[572],"body":{"id":2103,"nodeType":"Block","src":"1640:156:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2087,"name":"transferFailing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"1654:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"id":2088,"name":"forceFailOnTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"1673:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2090,"indexExpression":{"id":2089,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"1693:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1673:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1654:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2095,"nodeType":"IfStatement","src":"1650:87:13","trueBody":{"id":2094,"nodeType":"Block","src":"1700:37:13","statements":[{"expression":{"hexValue":"66616c7365","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1721:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2086,"id":2093,"nodeType":"Return","src":"1714:12:13"}]}},{"expression":{"arguments":[{"id":2098,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2077,"src":"1772:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2099,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2079,"src":"1778:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2100,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"1782:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2096,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1753:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_MockPYUSD_$2105_$","typeString":"type(contract super MockPYUSD)"}},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1759:12:13","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":572,"src":"1753:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1753:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2086,"id":2102,"nodeType":"Return","src":"1746:43:13"}]},"functionSelector":"23b872dd","id":2104,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1554:12:13","nodeType":"FunctionDefinition","overrides":{"id":2083,"nodeType":"OverrideSpecifier","overrides":[],"src":"1616:8:13"},"parameters":{"id":2082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2077,"mutability":"mutable","name":"from","nameLocation":"1575:4:13","nodeType":"VariableDeclaration","scope":2104,"src":"1567:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2076,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2079,"mutability":"mutable","name":"to","nameLocation":"1589:2:13","nodeType":"VariableDeclaration","scope":2104,"src":"1581:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2078,"name":"address","nodeType":"ElementaryTypeName","src":"1581:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2081,"mutability":"mutable","name":"amount","nameLocation":"1601:6:13","nodeType":"VariableDeclaration","scope":2104,"src":"1593:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2080,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1566:42:13"},"returnParameters":{"id":2086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2104,"src":"1634:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2084,"name":"bool","nodeType":"ElementaryTypeName","src":"1634:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1633:6:13"},"scope":2105,"src":"1545:251:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2106,"src":"114:1684:13","usedErrors":[249,254,259,268,273,278],"usedEvents":[901,910]}],"src":"32:1766:13"},"id":13},"contracts/RelayerRegistry.sol":{"ast":{"absolutePath":"contracts/RelayerRegistry.sol","exportedSymbols":{"Context":[1487],"IERC1363":[229],"IERC20":[967],"Ownable":[147],"ReentrancyGuard":[1556],"RelayerRegistry":[3115],"SafeERC20":[1457]},"id":3116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2107,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"32:23:14"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3116,"sourceUnit":968,"src":"57:56:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":2109,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3116,"sourceUnit":1458,"src":"114:65:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2110,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3116,"sourceUnit":1557,"src":"180:59:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2111,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3116,"sourceUnit":148,"src":"240:52:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2112,"name":"ReentrancyGuard","nameLocations":["322:15:14"],"nodeType":"IdentifierPath","referencedDeclaration":1556,"src":"322:15:14"},"id":2113,"nodeType":"InheritanceSpecifier","src":"322:15:14"},{"baseName":{"id":2114,"name":"Ownable","nameLocations":["339:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"339:7:14"},"id":2115,"nodeType":"InheritanceSpecifier","src":"339:7:14"}],"canonicalName":"RelayerRegistry","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3115,"linearizedBaseContracts":[3115,147,1487,1556],"name":"RelayerRegistry","nameLocation":"303:15:14","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2119,"libraryName":{"id":2116,"name":"SafeERC20","nameLocations":["359:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":1457,"src":"359:9:14"},"nodeType":"UsingForDirective","src":"353:27:14","typeName":{"id":2118,"nodeType":"UserDefinedTypeName","pathNode":{"id":2117,"name":"IERC20","nameLocations":["373:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"373:6:14"},"referencedDeclaration":967,"src":"373:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}},{"canonicalName":"RelayerRegistry.Relayer","id":2134,"members":[{"constant":false,"id":2121,"mutability":"mutable","name":"stakedAmount","nameLocation":"418:12:14","nodeType":"VariableDeclaration","scope":2134,"src":"410:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"successfulExecutions","nameLocation":"448:20:14","nodeType":"VariableDeclaration","scope":2134,"src":"440:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"440:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"failedExecutions","nameLocation":"486:16:14","nodeType":"VariableDeclaration","scope":2134,"src":"478:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2127,"mutability":"mutable","name":"totalFeesEarned","nameLocation":"520:15:14","nodeType":"VariableDeclaration","scope":2134,"src":"512:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2126,"name":"uint256","nodeType":"ElementaryTypeName","src":"512:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"withdrawalRequestTime","nameLocation":"553:21:14","nodeType":"VariableDeclaration","scope":2134,"src":"545:29:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"545:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2131,"mutability":"mutable","name":"isActive","nameLocation":"589:8:14","nodeType":"VariableDeclaration","scope":2134,"src":"584:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2130,"name":"bool","nodeType":"ElementaryTypeName","src":"584:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2133,"mutability":"mutable","name":"withdrawalRequested","nameLocation":"612:19:14","nodeType":"VariableDeclaration","scope":2134,"src":"607:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2132,"name":"bool","nodeType":"ElementaryTypeName","src":"607:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Relayer","nameLocation":"392:7:14","nodeType":"StructDefinition","scope":3115,"src":"385:253:14","visibility":"public"},{"constant":false,"functionSelector":"5300f841","id":2139,"mutability":"mutable","name":"relayers","nameLocation":"679:8:14","nodeType":"VariableDeclaration","scope":3115,"src":"644:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer)"},"typeName":{"id":2138,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"652:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"644:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2137,"nodeType":"UserDefinedTypeName","pathNode":{"id":2136,"name":"Relayer","nameLocations":["663:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"663:7:14"},"referencedDeclaration":2134,"src":"663:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}}},"visibility":"public"},{"constant":true,"functionSelector":"08dbbb03","id":2142,"mutability":"constant","name":"MINIMUM_STAKE","nameLocation":"717:13:14","nodeType":"VariableDeclaration","scope":3115,"src":"693:46:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2140,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030306536","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"733:6:14","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"value":"1000e6"},"visibility":"public"},{"constant":true,"functionSelector":"37720606","id":2145,"mutability":"constant","name":"SLASH_AMOUNT","nameLocation":"783:12:14","nodeType":"VariableDeclaration","scope":3115,"src":"759:44:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"759:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130306536","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"798:5:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"value":"100e6"},"visibility":"public"},{"constant":true,"functionSelector":"b4bb6c0d","id":2148,"mutability":"constant","name":"CONSECUTIVE_FAILURES_THRESHOLD","nameLocation":"833:30:14","nodeType":"VariableDeclaration","scope":3115,"src":"809:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"809:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":2147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"866:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"public"},{"constant":true,"functionSelector":"ab576cb5","id":2151,"mutability":"constant","name":"SLASHING_COOLDOWN","nameLocation":"897:17:14","nodeType":"VariableDeclaration","scope":3115,"src":"873:50:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2149,"name":"uint256","nodeType":"ElementaryTypeName","src":"873:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"917:6:14","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_86400_by_1","typeString":"int_const 86400"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"15d39754","id":2154,"mutability":"mutable","name":"slashAmountConfig","nameLocation":"945:17:14","nodeType":"VariableDeclaration","scope":3115,"src":"930:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"930:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"id":2153,"name":"SLASH_AMOUNT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"965:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ceb88df8","id":2157,"mutability":"mutable","name":"failureThresholdConfig","nameLocation":"998:22:14","nodeType":"VariableDeclaration","scope":3115,"src":"983:70:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2155,"name":"uint256","nodeType":"ElementaryTypeName","src":"983:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"id":2156,"name":"CONSECUTIVE_FAILURES_THRESHOLD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2148,"src":"1023:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7f202654","id":2161,"mutability":"mutable","name":"lastSlashTime","nameLocation":"1095:13:14","nodeType":"VariableDeclaration","scope":3115,"src":"1060:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2160,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2158,"name":"address","nodeType":"ElementaryTypeName","src":"1068:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1060:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1079:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"efdac37c","id":2165,"mutability":"mutable","name":"consecutiveFailures","nameLocation":"1149:19:14","nodeType":"VariableDeclaration","scope":3115,"src":"1114:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2164,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2162,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1114:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1133:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"b799036c","id":2169,"mutability":"mutable","name":"isSlashed","nameLocation":"1206:9:14","nodeType":"VariableDeclaration","scope":3115,"src":"1174:41:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":2168,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2166,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:24:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2167,"name":"bool","nodeType":"ElementaryTypeName","src":"1193:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":true,"functionSelector":"0ebb172a","id":2172,"mutability":"constant","name":"WITHDRAWAL_DELAY","nameLocation":"1246:16:14","nodeType":"VariableDeclaration","scope":3115,"src":"1222:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1222:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1265:6:14","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"public"},{"constant":false,"functionSelector":"e2b02576","id":2174,"mutability":"immutable","name":"PYUSD_ADDRESS","nameLocation":"1302:13:14","nodeType":"VariableDeclaration","scope":3115,"src":"1277:38:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"1277:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"bf158fd2","id":2176,"mutability":"mutable","name":"subscriptionManager","nameLocation":"1336:19:14","nodeType":"VariableDeclaration","scope":3115,"src":"1321:34:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"1321:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"193a79fd17752d71da6eaba98e99be182b006d3e3178dd96b26a52f905e23e7d","id":2182,"name":"RelayerRegistered","nameLocation":"1368:17:14","nodeType":"EventDefinition","parameters":{"id":2181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2178,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"1411:7:14","nodeType":"VariableDeclaration","scope":2182,"src":"1395:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2177,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2180,"indexed":false,"mutability":"mutable","name":"stakedAmount","nameLocation":"1436:12:14","nodeType":"VariableDeclaration","scope":2182,"src":"1428:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2179,"name":"uint256","nodeType":"ElementaryTypeName","src":"1428:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1385:69:14"},"src":"1362:93:14"},{"anonymous":false,"eventSelector":"1febc9d304fb99c3cd8bc5ffe8b9219d7676ffad2aa8cfa3a8286ea93092244c","id":2188,"name":"RelayerUnregistered","nameLocation":"1467:19:14","nodeType":"EventDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2184,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"1512:7:14","nodeType":"VariableDeclaration","scope":2188,"src":"1496:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2183,"name":"address","nodeType":"ElementaryTypeName","src":"1496:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2186,"indexed":false,"mutability":"mutable","name":"returnedStake","nameLocation":"1537:13:14","nodeType":"VariableDeclaration","scope":2188,"src":"1529:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1486:70:14"},"src":"1461:96:14"},{"anonymous":false,"eventSelector":"e670e4e82118d22a1f9ee18920455ebc958bae26a90a05d31d3378788b1b0e44","id":2194,"name":"WithdrawalRequested","nameLocation":"1569:19:14","nodeType":"EventDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"1614:7:14","nodeType":"VariableDeclaration","scope":2194,"src":"1598:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2189,"name":"address","nodeType":"ElementaryTypeName","src":"1598:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2192,"indexed":false,"mutability":"mutable","name":"requestTime","nameLocation":"1639:11:14","nodeType":"VariableDeclaration","scope":2194,"src":"1631:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1631:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1588:68:14"},"src":"1563:94:14"},{"anonymous":false,"eventSelector":"c799a6e963130dbc0f01e269475a49a5da606f63b2f40ae03f66e7af42076295","id":2202,"name":"ExecutionRecorded","nameLocation":"1669:17:14","nodeType":"EventDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"1712:7:14","nodeType":"VariableDeclaration","scope":2202,"src":"1696:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2198,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"1734:7:14","nodeType":"VariableDeclaration","scope":2202,"src":"1729:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2197,"name":"bool","nodeType":"ElementaryTypeName","src":"1729:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2200,"indexed":false,"mutability":"mutable","name":"feeAmount","nameLocation":"1759:9:14","nodeType":"VariableDeclaration","scope":2202,"src":"1751:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1686:88:14"},"src":"1663:112:14"},{"anonymous":false,"eventSelector":"4ccd10aa8a641e19c262018438ab4cbaa91e683a875ddd178515bc2cc6869ec6","id":2210,"name":"RelayerSlashed","nameLocation":"1787:14:14","nodeType":"EventDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"1827:7:14","nodeType":"VariableDeclaration","scope":2210,"src":"1811:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2203,"name":"address","nodeType":"ElementaryTypeName","src":"1811:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2206,"indexed":false,"mutability":"mutable","name":"slashAmount","nameLocation":"1852:11:14","nodeType":"VariableDeclaration","scope":2210,"src":"1844:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2205,"name":"uint256","nodeType":"ElementaryTypeName","src":"1844:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2208,"indexed":false,"mutability":"mutable","name":"remainingStake","nameLocation":"1881:14:14","nodeType":"VariableDeclaration","scope":2210,"src":"1873:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1873:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1801:100:14"},"src":"1781:121:14"},{"anonymous":false,"eventSelector":"610e5fc0d3114f2abb2801d5c0fdd8f3db27b0fbbf30da68155090bb63a17785","id":2218,"name":"RelayerRestaked","nameLocation":"1914:15:14","nodeType":"EventDefinition","parameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"1955:7:14","nodeType":"VariableDeclaration","scope":2218,"src":"1939:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"1939:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2214,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1980:6:14","nodeType":"VariableDeclaration","scope":2218,"src":"1972:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2216,"indexed":false,"mutability":"mutable","name":"newStake","nameLocation":"2004:8:14","nodeType":"VariableDeclaration","scope":2218,"src":"1996:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"1996:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1929:89:14"},"src":"1908:111:14"},{"anonymous":false,"eventSelector":"caf538385e067c71f144fcab1890f637fa60fb1ab456f6a023a4c9427df9deb7","id":2224,"name":"SlashingParametersUpdated","nameLocation":"2031:25:14","nodeType":"EventDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"indexed":false,"mutability":"mutable","name":"slashAmount","nameLocation":"2074:11:14","nodeType":"VariableDeclaration","scope":2224,"src":"2066:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"2066:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2222,"indexed":false,"mutability":"mutable","name":"failureThreshold","nameLocation":"2103:16:14","nodeType":"VariableDeclaration","scope":2224,"src":"2095:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2221,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2056:69:14"},"src":"2025:101:14"},{"anonymous":false,"eventSelector":"b29f077e0f1bff1879b3429feea103b77c429db336ffc4f31154f266038a5c9c","id":2232,"name":"EmergencySlash","nameLocation":"2138:14:14","nodeType":"EventDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"indexed":true,"mutability":"mutable","name":"relayer","nameLocation":"2178:7:14","nodeType":"VariableDeclaration","scope":2232,"src":"2162:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"2162:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2228,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2203:6:14","nodeType":"VariableDeclaration","scope":2232,"src":"2195:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2195:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2230,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"2226:6:14","nodeType":"VariableDeclaration","scope":2232,"src":"2219:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2229,"name":"string","nodeType":"ElementaryTypeName","src":"2219:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2152:86:14"},"src":"2132:107:14"},{"body":{"id":2243,"nodeType":"Block","src":"2280:98:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2298:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2298:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2237,"name":"subscriptionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"2312:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2298:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920537562736372697074696f6e4d616e61676572","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2333:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_18360f268b065f208ae7822d3d8dded5baae15c1d505fe980e059a32fd137b64","typeString":"literal_string \"Only SubscriptionManager\""},"value":"Only SubscriptionManager"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18360f268b065f208ae7822d3d8dded5baae15c1d505fe980e059a32fd137b64","typeString":"literal_string \"Only SubscriptionManager\""}],"id":2234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2290:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:70:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2241,"nodeType":"ExpressionStatement","src":"2290:70:14"},{"id":2242,"nodeType":"PlaceholderStatement","src":"2370:1:14"}]},"id":2244,"name":"onlySubscriptionManager","nameLocation":"2254:23:14","nodeType":"ModifierDefinition","parameters":{"id":2233,"nodeType":"ParameterList","parameters":[],"src":"2277:2:14"},"src":"2245:133:14","virtual":false,"visibility":"internal"},{"body":{"id":2267,"nodeType":"Block","src":"2439:117:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2254,"name":"_pyusdAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"2457:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2482:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2474:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2255,"name":"address","nodeType":"ElementaryTypeName","src":"2474:7:14","typeDescriptions":{}}},"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2474:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2457:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642050595553442061646472657373","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2486:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebff79b906aea32e5f097689a28b85747736352fa9fa716629dd37c6eb7a675d","typeString":"literal_string \"Invalid PYUSD address\""},"value":"Invalid PYUSD address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebff79b906aea32e5f097689a28b85747736352fa9fa716629dd37c6eb7a675d","typeString":"literal_string \"Invalid PYUSD address\""}],"id":2253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2449:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2262,"nodeType":"ExpressionStatement","src":"2449:61:14"},{"expression":{"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2263,"name":"PYUSD_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"2520:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2264,"name":"_pyusdAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"2536:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2520:29:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2266,"nodeType":"ExpressionStatement","src":"2520:29:14"}]},"id":2268,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2249,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2427:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2431:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2427:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2251,"kind":"baseConstructorSpecifier","modifierName":{"id":2248,"name":"Ownable","nameLocations":["2419:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2419:7:14"},"nodeType":"ModifierInvocation","src":"2419:19:14"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"_pyusdAddress","nameLocation":"2404:13:14","nodeType":"VariableDeclaration","scope":2268,"src":"2396:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2395:23:14"},"returnParameters":{"id":2252,"nodeType":"ParameterList","parameters":[],"src":"2439:0:14"},"scope":3115,"src":"2384:172:14","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2299,"nodeType":"Block","src":"2643:198:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2276,"name":"_subscriptionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2661:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2693:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2685:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2277,"name":"address","nodeType":"ElementaryTypeName","src":"2685:7:14","typeDescriptions":{}}},"id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2685:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2661:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2697:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":2275,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2653:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2653:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2284,"nodeType":"ExpressionStatement","src":"2653:62:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2286,"name":"subscriptionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"2733:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2756:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2287,"name":"address","nodeType":"ElementaryTypeName","src":"2756:7:14","typeDescriptions":{}}},"id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2756:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2733:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920736574","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2768:13:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc","typeString":"literal_string \"Already set\""},"value":"Already set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7e48b067d9657b74fa88865ffd84ee4954e27df98d359dfc75a722e1054131bc","typeString":"literal_string \"Already set\""}],"id":2285,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2725:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2294,"nodeType":"ExpressionStatement","src":"2725:57:14"},{"expression":{"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2295,"name":"subscriptionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"2792:19:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2296,"name":"_subscriptionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2270,"src":"2814:20:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2792:42:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2298,"nodeType":"ExpressionStatement","src":"2792:42:14"}]},"functionSelector":"c05b3585","id":2300,"implemented":true,"kind":"function","modifiers":[{"id":2273,"kind":"modifierInvocation","modifierName":{"id":2272,"name":"onlyOwner","nameLocations":["2633:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2633:9:14"},"nodeType":"ModifierInvocation","src":"2633:9:14"}],"name":"setSubscriptionManager","nameLocation":"2571:22:14","nodeType":"FunctionDefinition","parameters":{"id":2271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2270,"mutability":"mutable","name":"_subscriptionManager","nameLocation":"2602:20:14","nodeType":"VariableDeclaration","scope":2300,"src":"2594:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2269,"name":"address","nodeType":"ElementaryTypeName","src":"2594:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2593:30:14"},"returnParameters":{"id":2274,"nodeType":"ParameterList","parameters":[],"src":"2643:0:14"},"scope":3115,"src":"2562:279:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2386,"nodeType":"Block","src":"2915:869:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2308,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"2933:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2311,"indexExpression":{"expression":{"id":2309,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2942:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2946:6:14","memberName":"sender","nodeType":"MemberAccess","src":"2942:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2933:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"id":2312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2954:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"2933:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2970:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2933:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c6179657220616c72656164792072656769737465726564","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2973:28:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2d3ee0c146337cc9b48240c84645c89e004a51b9adcb12d46d7444e8a64d5ac","typeString":"literal_string \"Relayer already registered\""},"value":"Relayer already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b2d3ee0c146337cc9b48240c84645c89e004a51b9adcb12d46d7444e8a64d5ac","typeString":"literal_string \"Relayer already registered\""}],"id":2307,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2925:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2925:77:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2317,"nodeType":"ExpressionStatement","src":"2925:77:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2319,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"3020:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2320,"name":"MINIMUM_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"3035:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3020:28:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207374616b6520616d6f756e74","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3050:27:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5","typeString":"literal_string \"Insufficient stake amount\""},"value":"Insufficient stake amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5","typeString":"literal_string \"Insufficient stake amount\""}],"id":2318,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3012:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2324,"nodeType":"ExpressionStatement","src":"3012:66:14"},{"assignments":[2327],"declarations":[{"constant":false,"id":2327,"mutability":"mutable","name":"token","nameLocation":"3195:5:14","nodeType":"VariableDeclaration","scope":2386,"src":"3188:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":2326,"nodeType":"UserDefinedTypeName","pathNode":{"id":2325,"name":"IERC20","nameLocations":["3188:6:14"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"3188:6:14"},"referencedDeclaration":967,"src":"3188:6:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2331,"initialValue":{"arguments":[{"id":2329,"name":"PYUSD_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"3210:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2328,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"3203:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3203:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"3188:36:14"},{"expression":{"arguments":[{"expression":{"id":2335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3257:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3261:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3257:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2339,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3277:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}],"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3269:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2337,"name":"address","nodeType":"ElementaryTypeName","src":"3269:7:14","typeDescriptions":{}}},"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3269:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2341,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"3284:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2332,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2327,"src":"3234:5:14","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3240:16:14","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"3234:22:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3234:62:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2343,"nodeType":"ExpressionStatement","src":"3234:62:14"},{"expression":{"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2344,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"3307:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2347,"indexExpression":{"expression":{"id":2345,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3316:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3320:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3316:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3307:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2349,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"3366:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3413:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3446:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3478:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"74727565","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3503:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3544:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":2355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3580:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2348,"name":"Relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"3330:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Relayer_$2134_storage_ptr_$","typeString":"type(struct RelayerRegistry.Relayer storage pointer)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3352:12:14","3391:20:14","3428:16:14","3461:15:14","3493:8:14","3521:21:14","3559:19:14"],"names":["stakedAmount","successfulExecutions","failedExecutions","totalFeesEarned","isActive","withdrawalRequestTime","withdrawalRequested"],"nodeType":"FunctionCall","src":"3330:266:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_memory_ptr","typeString":"struct RelayerRegistry.Relayer memory"}},"src":"3307:289:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"id":2358,"nodeType":"ExpressionStatement","src":"3307:289:14"},{"expression":{"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2359,"name":"consecutiveFailures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"3606:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2362,"indexExpression":{"expression":{"id":2360,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3626:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3630:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3626:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3606:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3640:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3606:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2365,"nodeType":"ExpressionStatement","src":"3606:35:14"},{"expression":{"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2366,"name":"isSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"3651:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2369,"indexExpression":{"expression":{"id":2367,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3661:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3665:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3661:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3651:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3675:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3651:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2372,"nodeType":"ExpressionStatement","src":"3651:29:14"},{"expression":{"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2373,"name":"lastSlashTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3690:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2376,"indexExpression":{"expression":{"id":2374,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3704:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3708:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3704:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3690:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3718:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3690:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2379,"nodeType":"ExpressionStatement","src":"3690:29:14"},{"eventCall":{"arguments":[{"expression":{"id":2381,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3753:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3757:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3753:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2383,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"3765:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2380,"name":"RelayerRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"3735:17:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2385,"nodeType":"EmitStatement","src":"3730:47:14"}]},"functionSelector":"f5855d16","id":2387,"implemented":true,"kind":"function","modifiers":[{"id":2305,"kind":"modifierInvocation","modifierName":{"id":2304,"name":"nonReentrant","nameLocations":["2902:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1520,"src":"2902:12:14"},"nodeType":"ModifierInvocation","src":"2902:12:14"}],"name":"registerRelayer","nameLocation":"2856:15:14","nodeType":"FunctionDefinition","parameters":{"id":2303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2302,"mutability":"mutable","name":"stakeAmount","nameLocation":"2880:11:14","nodeType":"VariableDeclaration","scope":2387,"src":"2872:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2301,"name":"uint256","nodeType":"ElementaryTypeName","src":"2872:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2871:21:14"},"returnParameters":{"id":2306,"nodeType":"ParameterList","parameters":[],"src":"2915:0:14"},"scope":3115,"src":"2847:937:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2439,"nodeType":"Block","src":"3828:434:14","statements":[{"assignments":[2392],"declarations":[{"constant":false,"id":2392,"mutability":"mutable","name":"relayer","nameLocation":"3854:7:14","nodeType":"VariableDeclaration","scope":2439,"src":"3838:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":2391,"nodeType":"UserDefinedTypeName","pathNode":{"id":2390,"name":"Relayer","nameLocations":["3838:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"3838:7:14"},"referencedDeclaration":2134,"src":"3838:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"id":2397,"initialValue":{"baseExpression":{"id":2393,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"3864:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2396,"indexExpression":{"expression":{"id":2394,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3873:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3877:6:14","memberName":"sender","nodeType":"MemberAccess","src":"3873:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3864:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3838:46:14"},{"expression":{"arguments":[{"expression":{"id":2399,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"3902:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3910:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"3902:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f7420616374697665","id":2401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3920:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e07c52866a96bf568d8fb536380115274f86770fac78b1cffcd72ee4948059be","typeString":"literal_string \"Relayer not active\""},"value":"Relayer not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e07c52866a96bf568d8fb536380115274f86770fac78b1cffcd72ee4948059be","typeString":"literal_string \"Relayer not active\""}],"id":2398,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3894:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3894:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2403,"nodeType":"ExpressionStatement","src":"3894:47:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2405,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"3959:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3967:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"3959:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3982:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3959:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f742072656769737465726564","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3985:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b409e32468280a5e9b57cd1ccd848308b28e4ac19819425a9d3be233859ede8","typeString":"literal_string \"Relayer not registered\""},"value":"Relayer not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b409e32468280a5e9b57cd1ccd848308b28e4ac19819425a9d3be233859ede8","typeString":"literal_string \"Relayer not registered\""}],"id":2404,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3951:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3951:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2411,"nodeType":"ExpressionStatement","src":"3951:59:14"},{"expression":{"arguments":[{"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4028:28:14","subExpression":{"expression":{"id":2413,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"4029:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4037:19:14","memberName":"withdrawalRequested","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"4029:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177616c20616c726561647920726571756573746564","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4058:30:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd5a8d7b949ae1be975f76ebfb4bcb7847b1f2590f3ffc421eba97a325d378cc","typeString":"literal_string \"Withdrawal already requested\""},"value":"Withdrawal already requested"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd5a8d7b949ae1be975f76ebfb4bcb7847b1f2590f3ffc421eba97a325d378cc","typeString":"literal_string \"Withdrawal already requested\""}],"id":2412,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4020:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4020:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2418,"nodeType":"ExpressionStatement","src":"4020:69:14"},{"expression":{"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2419,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"4100:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4108:19:14","memberName":"withdrawalRequested","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"4100:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4130:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4100:34:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2424,"nodeType":"ExpressionStatement","src":"4100:34:14"},{"expression":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2425,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"4144:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4152:21:14","memberName":"withdrawalRequestTime","nodeType":"MemberAccess","referencedDeclaration":2129,"src":"4144:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2428,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4176:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4182:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"4176:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4144:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2431,"nodeType":"ExpressionStatement","src":"4144:47:14"},{"eventCall":{"arguments":[{"expression":{"id":2433,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4227:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4231:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4227:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2435,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4239:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4245:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"4239:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2432,"name":"WithdrawalRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"4207:19:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4207:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2438,"nodeType":"EmitStatement","src":"4202:53:14"}]},"functionSelector":"dbaf2145","id":2440,"implemented":true,"kind":"function","modifiers":[],"name":"requestWithdrawal","nameLocation":"3799:17:14","nodeType":"FunctionDefinition","parameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"3816:2:14"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[],"src":"3828:0:14"},"scope":3115,"src":"3790:472:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2561,"nodeType":"Block","src":"4319:1044:14","statements":[{"assignments":[2447],"declarations":[{"constant":false,"id":2447,"mutability":"mutable","name":"relayer","nameLocation":"4345:7:14","nodeType":"VariableDeclaration","scope":2561,"src":"4329:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":2446,"nodeType":"UserDefinedTypeName","pathNode":{"id":2445,"name":"Relayer","nameLocations":["4329:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"4329:7:14"},"referencedDeclaration":2134,"src":"4329:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"id":2452,"initialValue":{"baseExpression":{"id":2448,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"4355:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2451,"indexExpression":{"expression":{"id":2449,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4364:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4368:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4364:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4355:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4329:46:14"},{"expression":{"arguments":[{"expression":{"id":2454,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4393:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4401:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"4393:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f7420616374697665","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4411:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e07c52866a96bf568d8fb536380115274f86770fac78b1cffcd72ee4948059be","typeString":"literal_string \"Relayer not active\""},"value":"Relayer not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e07c52866a96bf568d8fb536380115274f86770fac78b1cffcd72ee4948059be","typeString":"literal_string \"Relayer not active\""}],"id":2453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4385:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4385:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2458,"nodeType":"ExpressionStatement","src":"4385:47:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2460,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4450:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4458:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"4450:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4473:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4450:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f742072656769737465726564","id":2464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4476:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b409e32468280a5e9b57cd1ccd848308b28e4ac19819425a9d3be233859ede8","typeString":"literal_string \"Relayer not registered\""},"value":"Relayer not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b409e32468280a5e9b57cd1ccd848308b28e4ac19819425a9d3be233859ede8","typeString":"literal_string \"Relayer not registered\""}],"id":2459,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4442:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4442:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2466,"nodeType":"ExpressionStatement","src":"4442:59:14"},{"expression":{"arguments":[{"expression":{"id":2468,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4519:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4527:19:14","memberName":"withdrawalRequested","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"4519:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742072657175657374207769746864726177616c206669727374","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4548:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_59d084e058a9277041219f751e0d40100106a451cb36ad235d47e5b7130393b0","typeString":"literal_string \"Must request withdrawal first\""},"value":"Must request withdrawal first"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_59d084e058a9277041219f751e0d40100106a451cb36ad235d47e5b7130393b0","typeString":"literal_string \"Must request withdrawal first\""}],"id":2467,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4511:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4511:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2472,"nodeType":"ExpressionStatement","src":"4511:69:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2474,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4611:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4617:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"4611:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2476,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4630:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4638:21:14","memberName":"withdrawalRequestTime","nodeType":"MemberAccess","referencedDeclaration":2129,"src":"4630:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2478,"name":"WITHDRAWAL_DELAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2172,"src":"4662:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4630:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4611:67:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177616c2064656c6179206e6f74206d6574","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4692:26:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_b18c4d74e289d94610fcb428855c9b1f24132b9044dbe1fe931a83c46ae060c9","typeString":"literal_string \"Withdrawal delay not met\""},"value":"Withdrawal delay not met"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b18c4d74e289d94610fcb428855c9b1f24132b9044dbe1fe931a83c46ae060c9","typeString":"literal_string \"Withdrawal delay not met\""}],"id":2473,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4590:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4590:138:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2483,"nodeType":"ExpressionStatement","src":"4590:138:14"},{"expression":{"arguments":[{"id":2489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4746:22:14","subExpression":{"baseExpression":{"id":2485,"name":"isSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"4747:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2488,"indexExpression":{"expression":{"id":2486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4757:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4761:6:14","memberName":"sender","nodeType":"MemberAccess","src":"4757:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4747:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c6179657220736c6173686564","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4770:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f385791a492afaa881af4f46454e201a919b2a427bec0bcbf37c1c449ef3761","typeString":"literal_string \"Relayer slashed\""},"value":"Relayer slashed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f385791a492afaa881af4f46454e201a919b2a427bec0bcbf37c1c449ef3761","typeString":"literal_string \"Relayer slashed\""}],"id":2484,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4738:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4738:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"ExpressionStatement","src":"4738:50:14"},{"assignments":[2494],"declarations":[{"constant":false,"id":2494,"mutability":"mutable","name":"stakeToReturn","nameLocation":"4808:13:14","nodeType":"VariableDeclaration","scope":2561,"src":"4800:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2493,"name":"uint256","nodeType":"ElementaryTypeName","src":"4800:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2497,"initialValue":{"expression":{"id":2495,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4824:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4832:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"4824:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4800:44:14"},{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2498,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4910:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4918:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"4910:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4929:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4910:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2503,"nodeType":"ExpressionStatement","src":"4910:24:14"},{"expression":{"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2504,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4944:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2506,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4952:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"4944:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4967:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4944:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2509,"nodeType":"ExpressionStatement","src":"4944:24:14"},{"expression":{"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2510,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"4978:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4986:19:14","memberName":"withdrawalRequested","nodeType":"MemberAccess","referencedDeclaration":2133,"src":"4978:27:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5008:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"4978:35:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2515,"nodeType":"ExpressionStatement","src":"4978:35:14"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2516,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2447,"src":"5023:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5031:21:14","memberName":"withdrawalRequestTime","nodeType":"MemberAccess","referencedDeclaration":2129,"src":"5023:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5055:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5023:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2521,"nodeType":"ExpressionStatement","src":"5023:33:14"},{"expression":{"arguments":[{"expression":{"id":2526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5102:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5106:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5102:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2528,"name":"stakeToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"5114:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2523,"name":"PYUSD_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"5074:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2522,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"5067:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5067:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5089:12:14","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1038,"src":"5067:34:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,uint256)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5067:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2530,"nodeType":"ExpressionStatement","src":"5067:61:14"},{"eventCall":{"arguments":[{"expression":{"id":2532,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5164:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5168:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5164:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2534,"name":"stakeToReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"5176:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2531,"name":"RelayerUnregistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2188,"src":"5144:19:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5144:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2536,"nodeType":"EmitStatement","src":"5139:51:14"},{"expression":{"id":2541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5201:27:14","subExpression":{"baseExpression":{"id":2537,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"5208:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2540,"indexExpression":{"expression":{"id":2538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5217:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5221:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5217:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5208:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2542,"nodeType":"ExpressionStatement","src":"5201:27:14"},{"expression":{"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5238:38:14","subExpression":{"baseExpression":{"id":2543,"name":"consecutiveFailures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5245:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2546,"indexExpression":{"expression":{"id":2544,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5265:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5269:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5265:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5245:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2548,"nodeType":"ExpressionStatement","src":"5238:38:14"},{"expression":{"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5286:32:14","subExpression":{"baseExpression":{"id":2549,"name":"lastSlashTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"5293:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2552,"indexExpression":{"expression":{"id":2550,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5307:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5311:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5307:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5293:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2554,"nodeType":"ExpressionStatement","src":"5286:32:14"},{"expression":{"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"5328:28:14","subExpression":{"baseExpression":{"id":2555,"name":"isSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"5335:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2558,"indexExpression":{"expression":{"id":2556,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5345:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5349:6:14","memberName":"sender","nodeType":"MemberAccess","src":"5345:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5335:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2560,"nodeType":"ExpressionStatement","src":"5328:28:14"}]},"functionSelector":"e6d1b240","id":2562,"implemented":true,"kind":"function","modifiers":[{"id":2443,"kind":"modifierInvocation","modifierName":{"id":2442,"name":"nonReentrant","nameLocations":["4306:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1520,"src":"4306:12:14"},"nodeType":"ModifierInvocation","src":"4306:12:14"}],"name":"unregisterRelayer","nameLocation":"4277:17:14","nodeType":"FunctionDefinition","parameters":{"id":2441,"nodeType":"ParameterList","parameters":[],"src":"4294:2:14"},"returnParameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"4319:0:14"},"scope":3115,"src":"4268:1095:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2651,"nodeType":"Block","src":"5514:826:14","statements":[{"assignments":[2575],"declarations":[{"constant":false,"id":2575,"mutability":"mutable","name":"relayer","nameLocation":"5540:7:14","nodeType":"VariableDeclaration","scope":2651,"src":"5524:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":2574,"nodeType":"UserDefinedTypeName","pathNode":{"id":2573,"name":"Relayer","nameLocations":["5524:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"5524:7:14"},"referencedDeclaration":2134,"src":"5524:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"id":2579,"initialValue":{"baseExpression":{"id":2576,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"5550:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2578,"indexExpression":{"id":2577,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"5559:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5550:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5524:50:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2581,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"5592:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5600:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"5592:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5592:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f742072656769737465726564","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5618:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b409e32468280a5e9b57cd1ccd848308b28e4ac19819425a9d3be233859ede8","typeString":"literal_string \"Relayer not registered\""},"value":"Relayer not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b409e32468280a5e9b57cd1ccd848308b28e4ac19819425a9d3be233859ede8","typeString":"literal_string \"Relayer not registered\""}],"id":2580,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5584:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5584:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2587,"nodeType":"ExpressionStatement","src":"5584:59:14"},{"expression":{"arguments":[{"expression":{"id":2589,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"5661:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5669:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"5661:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f7420616374697665","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5679:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e07c52866a96bf568d8fb536380115274f86770fac78b1cffcd72ee4948059be","typeString":"literal_string \"Relayer not active\""},"value":"Relayer not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e07c52866a96bf568d8fb536380115274f86770fac78b1cffcd72ee4948059be","typeString":"literal_string \"Relayer not active\""}],"id":2588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5653:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5653:47:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2593,"nodeType":"ExpressionStatement","src":"5653:47:14"},{"expression":{"arguments":[{"id":2598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5718:26:14","subExpression":{"baseExpression":{"id":2595,"name":"isSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"5719:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2597,"indexExpression":{"id":2596,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"5729:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5719:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c6179657220736c6173686564","id":2599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5746:17:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f385791a492afaa881af4f46454e201a919b2a427bec0bcbf37c1c449ef3761","typeString":"literal_string \"Relayer slashed\""},"value":"Relayer slashed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f385791a492afaa881af4f46454e201a919b2a427bec0bcbf37c1c449ef3761","typeString":"literal_string \"Relayer slashed\""}],"id":2594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5710:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5710:54:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2601,"nodeType":"ExpressionStatement","src":"5710:54:14"},{"condition":{"id":2602,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"5829:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2643,"nodeType":"Block","src":"6002:263:14","statements":[{"expression":{"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6016:26:14","subExpression":{"expression":{"id":2621,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"6016:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6024:16:14","memberName":"failedExecutions","nodeType":"MemberAccess","referencedDeclaration":2125,"src":"6016:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2625,"nodeType":"ExpressionStatement","src":"6016:26:14"},{"expression":{"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6056:37:14","subExpression":{"baseExpression":{"id":2626,"name":"consecutiveFailures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6056:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2628,"indexExpression":{"id":2627,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6076:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6056:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2630,"nodeType":"ExpressionStatement","src":"6056:37:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2631,"name":"consecutiveFailures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"6111:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2633,"indexExpression":{"id":2632,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6131:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6111:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2634,"name":"failureThresholdConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"6150:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6111:61:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2642,"nodeType":"IfStatement","src":"6107:148:14","trueBody":{"id":2641,"nodeType":"Block","src":"6174:81:14","statements":[{"expression":{"arguments":[{"id":2637,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6206:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2638,"name":"slashAmountConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"6222:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2636,"name":"_slashRelayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"6192:13:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6192:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2640,"nodeType":"ExpressionStatement","src":"6192:48:14"}]}}]},"id":2644,"nodeType":"IfStatement","src":"5825:440:14","trueBody":{"id":2620,"nodeType":"Block","src":"5838:158:14","statements":[{"expression":{"id":2606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5852:30:14","subExpression":{"expression":{"id":2603,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"5852:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5860:20:14","memberName":"successfulExecutions","nodeType":"MemberAccess","referencedDeclaration":2123,"src":"5852:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2607,"nodeType":"ExpressionStatement","src":"5852:30:14"},{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2608,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"5896:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2610,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5904:15:14","memberName":"totalFeesEarned","nodeType":"MemberAccess","referencedDeclaration":2127,"src":"5896:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2611,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"5923:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5896:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2613,"nodeType":"ExpressionStatement","src":"5896:36:14"},{"expression":{"id":2618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2614,"name":"consecutiveFailures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"5946:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2616,"indexExpression":{"id":2615,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"5966:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5946:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5984:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5946:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2619,"nodeType":"ExpressionStatement","src":"5946:39:14"}]}},{"eventCall":{"arguments":[{"id":2646,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"6298:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2647,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"6314:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2648,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"6323:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2645,"name":"ExecutionRecorded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"6280:17:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6280:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2650,"nodeType":"EmitStatement","src":"6275:58:14"}]},"functionSelector":"894f8c72","id":2652,"implemented":true,"kind":"function","modifiers":[{"id":2571,"kind":"modifierInvocation","modifierName":{"id":2570,"name":"onlySubscriptionManager","nameLocations":["5490:23:14"],"nodeType":"IdentifierPath","referencedDeclaration":2244,"src":"5490:23:14"},"nodeType":"ModifierInvocation","src":"5490:23:14"}],"name":"recordExecution","nameLocation":"5378:15:14","nodeType":"FunctionDefinition","parameters":{"id":2569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2564,"mutability":"mutable","name":"relayerAddress","nameLocation":"5411:14:14","nodeType":"VariableDeclaration","scope":2652,"src":"5403:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2563,"name":"address","nodeType":"ElementaryTypeName","src":"5403:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2566,"mutability":"mutable","name":"success","nameLocation":"5440:7:14","nodeType":"VariableDeclaration","scope":2652,"src":"5435:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2565,"name":"bool","nodeType":"ElementaryTypeName","src":"5435:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2568,"mutability":"mutable","name":"feeAmount","nameLocation":"5465:9:14","nodeType":"VariableDeclaration","scope":2652,"src":"5457:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"5457:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5393:87:14"},"returnParameters":{"id":2572,"nodeType":"ParameterList","parameters":[],"src":"5514:0:14"},"scope":3115,"src":"5369:971:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2664,"nodeType":"Block","src":"6424:57:14","statements":[{"expression":{"expression":{"baseExpression":{"id":2659,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"6441:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2661,"indexExpression":{"id":2660,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"6450:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6441:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"id":2662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6466:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"6441:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2658,"id":2663,"nodeType":"Return","src":"6434:40:14"}]},"functionSelector":"83a9f7fc","id":2665,"implemented":true,"kind":"function","modifiers":[],"name":"isRelayerActive","nameLocation":"6355:15:14","nodeType":"FunctionDefinition","parameters":{"id":2655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2654,"mutability":"mutable","name":"relayerAddress","nameLocation":"6379:14:14","nodeType":"VariableDeclaration","scope":2665,"src":"6371:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2653,"name":"address","nodeType":"ElementaryTypeName","src":"6371:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6370:24:14"},"returnParameters":{"id":2658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2665,"src":"6418:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2656,"name":"bool","nodeType":"ElementaryTypeName","src":"6418:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6417:6:14"},"scope":3115,"src":"6346:135:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2699,"nodeType":"Block","src":"6723:275:14","statements":[{"assignments":[2682],"declarations":[{"constant":false,"id":2682,"mutability":"mutable","name":"relayer","nameLocation":"6749:7:14","nodeType":"VariableDeclaration","scope":2699,"src":"6733:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":2681,"nodeType":"UserDefinedTypeName","pathNode":{"id":2680,"name":"Relayer","nameLocations":["6733:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"6733:7:14"},"referencedDeclaration":2134,"src":"6733:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"id":2686,"initialValue":{"baseExpression":{"id":2683,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"6759:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2685,"indexExpression":{"id":2684,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2667,"src":"6768:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6759:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6733:50:14"},{"expression":{"components":[{"expression":{"id":2687,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6814:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6822:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"6814:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2689,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6848:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6856:20:14","memberName":"successfulExecutions","nodeType":"MemberAccess","referencedDeclaration":2123,"src":"6848:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2691,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6890:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6898:16:14","memberName":"failedExecutions","nodeType":"MemberAccess","referencedDeclaration":2125,"src":"6890:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2693,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6928:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6936:15:14","memberName":"totalFeesEarned","nodeType":"MemberAccess","referencedDeclaration":2127,"src":"6928:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2695,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"6965:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6973:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"6965:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6800:191:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$","typeString":"tuple(uint256,uint256,uint256,uint256,bool)"}},"functionReturnParameters":2679,"id":2698,"nodeType":"Return","src":"6793:198:14"}]},"functionSelector":"62724306","id":2700,"implemented":true,"kind":"function","modifiers":[],"name":"getRelayerStats","nameLocation":"6496:15:14","nodeType":"FunctionDefinition","parameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"relayerAddress","nameLocation":"6520:14:14","nodeType":"VariableDeclaration","scope":2700,"src":"6512:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"6512:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6511:24:14"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2670,"mutability":"mutable","name":"stakedAmount","nameLocation":"6576:12:14","nodeType":"VariableDeclaration","scope":2700,"src":"6568:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2669,"name":"uint256","nodeType":"ElementaryTypeName","src":"6568:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"successfulExecutions","nameLocation":"6606:20:14","nodeType":"VariableDeclaration","scope":2700,"src":"6598:28:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"6598:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2674,"mutability":"mutable","name":"failedExecutions","nameLocation":"6644:16:14","nodeType":"VariableDeclaration","scope":2700,"src":"6636:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2673,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2676,"mutability":"mutable","name":"totalFeesEarned","nameLocation":"6678:15:14","nodeType":"VariableDeclaration","scope":2700,"src":"6670:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"6670:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"isActive","nameLocation":"6708:8:14","nodeType":"VariableDeclaration","scope":2700,"src":"6703:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2677,"name":"bool","nodeType":"ElementaryTypeName","src":"6703:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6558:164:14"},"scope":3115,"src":"6487:511:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2712,"nodeType":"Block","src":"7091:48:14","statements":[{"expression":{"baseExpression":{"id":2708,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"7108:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2710,"indexExpression":{"id":2709,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"7117:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7108:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"functionReturnParameters":2707,"id":2711,"nodeType":"Return","src":"7101:31:14"}]},"functionSelector":"06bfd20b","id":2713,"implemented":true,"kind":"function","modifiers":[],"name":"getRelayerInfo","nameLocation":"7013:14:14","nodeType":"FunctionDefinition","parameters":{"id":2703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2702,"mutability":"mutable","name":"relayerAddress","nameLocation":"7036:14:14","nodeType":"VariableDeclaration","scope":2713,"src":"7028:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2701,"name":"address","nodeType":"ElementaryTypeName","src":"7028:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7027:24:14"},"returnParameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2713,"src":"7075:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_memory_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":2705,"nodeType":"UserDefinedTypeName","pathNode":{"id":2704,"name":"Relayer","nameLocations":["7075:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"7075:7:14"},"referencedDeclaration":2134,"src":"7075:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"src":"7074:16:14"},"scope":3115,"src":"7004:135:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2740,"nodeType":"Block","src":"7218:171:14","statements":[{"assignments":[2722],"declarations":[{"constant":false,"id":2722,"mutability":"mutable","name":"relayer","nameLocation":"7244:7:14","nodeType":"VariableDeclaration","scope":2740,"src":"7228:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":2721,"nodeType":"UserDefinedTypeName","pathNode":{"id":2720,"name":"Relayer","nameLocations":["7228:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"7228:7:14"},"referencedDeclaration":2134,"src":"7228:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"id":2726,"initialValue":{"baseExpression":{"id":2723,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"7254:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2725,"indexExpression":{"id":2724,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7263:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7254:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7228:50:14"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2727,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"7295:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7303:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"7295:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7315:26:14","subExpression":{"baseExpression":{"id":2729,"name":"isSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"7316:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2731,"indexExpression":{"id":2730,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"7326:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7316:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7295:46:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2734,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"7345:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7353:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"7345:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2736,"name":"MINIMUM_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"7369:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7345:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7295:87:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2719,"id":2739,"nodeType":"Return","src":"7288:94:14"}]},"functionSelector":"85c99e2b","id":2741,"implemented":true,"kind":"function","modifiers":[],"name":"canExecute","nameLocation":"7154:10:14","nodeType":"FunctionDefinition","parameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"relayerAddress","nameLocation":"7173:14:14","nodeType":"VariableDeclaration","scope":2741,"src":"7165:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2714,"name":"address","nodeType":"ElementaryTypeName","src":"7165:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7164:24:14"},"returnParameters":{"id":2719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2718,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2741,"src":"7212:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2717,"name":"bool","nodeType":"ElementaryTypeName","src":"7212:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7211:6:14"},"scope":3115,"src":"7145:244:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2752,"nodeType":"Block","src":"7483:59:14","statements":[{"expression":{"baseExpression":{"id":2748,"name":"consecutiveFailures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"7500:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2750,"indexExpression":{"id":2749,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2743,"src":"7520:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7500:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2747,"id":2751,"nodeType":"Return","src":"7493:42:14"}]},"functionSelector":"546b83ad","id":2753,"implemented":true,"kind":"function","modifiers":[],"name":"getConsecutiveFailures","nameLocation":"7404:22:14","nodeType":"FunctionDefinition","parameters":{"id":2744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2743,"mutability":"mutable","name":"relayerAddress","nameLocation":"7435:14:14","nodeType":"VariableDeclaration","scope":2753,"src":"7427:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2742,"name":"address","nodeType":"ElementaryTypeName","src":"7427:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7426:24:14"},"returnParameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2753,"src":"7474:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2745,"name":"uint256","nodeType":"ElementaryTypeName","src":"7474:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7473:9:14"},"scope":3115,"src":"7395:147:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2782,"nodeType":"Block","src":"7639:209:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2760,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7653:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7659:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"7653:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2762,"name":"lastSlashTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7672:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2764,"indexExpression":{"id":2763,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"7686:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7672:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2765,"name":"SLASHING_COOLDOWN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"7704:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7672:49:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7653:68:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2771,"nodeType":"IfStatement","src":"7649:107:14","trueBody":{"id":2770,"nodeType":"Block","src":"7723:33:14","statements":[{"expression":{"hexValue":"30","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7744:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2759,"id":2769,"nodeType":"Return","src":"7737:8:14"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2772,"name":"lastSlashTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"7773:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2774,"indexExpression":{"id":2773,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"7787:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7773:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2775,"name":"SLASHING_COOLDOWN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"7805:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7773:49:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7772:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":2778,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7826:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7832:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"7826:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7772:69:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2759,"id":2781,"nodeType":"Return","src":"7765:76:14"}]},"functionSelector":"00359015","id":2783,"implemented":true,"kind":"function","modifiers":[],"name":"getTimeUntilSlashCooldown","nameLocation":"7557:25:14","nodeType":"FunctionDefinition","parameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"relayerAddress","nameLocation":"7591:14:14","nodeType":"VariableDeclaration","scope":2783,"src":"7583:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2754,"name":"address","nodeType":"ElementaryTypeName","src":"7583:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7582:24:14"},"returnParameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2783,"src":"7630:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"7630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7629:9:14"},"scope":3115,"src":"7548:300:14","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2870,"nodeType":"Block","src":"7919:597:14","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2791,"name":"isSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"7937:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2794,"indexExpression":{"expression":{"id":2792,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7947:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7951:6:14","memberName":"sender","nodeType":"MemberAccess","src":"7947:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7937:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f7420736c6173686564","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7960:21:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e986f9af3cbcada9a39d2d17813a387bfc03188853ccfe2851e14bac27428aec","typeString":"literal_string \"Relayer not slashed\""},"value":"Relayer not slashed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e986f9af3cbcada9a39d2d17813a387bfc03188853ccfe2851e14bac27428aec","typeString":"literal_string \"Relayer not slashed\""}],"id":2790,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7929:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:53:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2797,"nodeType":"ExpressionStatement","src":"7929:53:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8000:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8009:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8000:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616d6f756e74","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8012:16:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""},"value":"Invalid amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""}],"id":2798,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7992:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7992:37:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2804,"nodeType":"ExpressionStatement","src":"7992:37:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2806,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"8047:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2809,"indexExpression":{"expression":{"id":2807,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8056:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8060:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8056:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8047:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"id":2810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8068:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"8047:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8083:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8047:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f742072656769737465726564","id":2813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8086:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b409e32468280a5e9b57cd1ccd848308b28e4ac19819425a9d3be233859ede8","typeString":"literal_string \"Relayer not registered\""},"value":"Relayer not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b409e32468280a5e9b57cd1ccd848308b28e4ac19819425a9d3be233859ede8","typeString":"literal_string \"Relayer not registered\""}],"id":2805,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8039:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8039:72:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2815,"nodeType":"ExpressionStatement","src":"8039:72:14"},{"expression":{"arguments":[{"expression":{"id":2820,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8161:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8165:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8161:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":2824,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8181:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}],"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8173:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2822,"name":"address","nodeType":"ElementaryTypeName","src":"8173:7:14","typeDescriptions":{}}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8173:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2826,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8188:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":2817,"name":"PYUSD_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"8129:13:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2816,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"8122:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:21:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8144:16:14","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1065,"src":"8122:38:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2828,"nodeType":"ExpressionStatement","src":"8122:73:14"},{"assignments":[2831],"declarations":[{"constant":false,"id":2831,"mutability":"mutable","name":"relayer","nameLocation":"8222:7:14","nodeType":"VariableDeclaration","scope":2870,"src":"8206:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":2830,"nodeType":"UserDefinedTypeName","pathNode":{"id":2829,"name":"Relayer","nameLocations":["8206:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"8206:7:14"},"referencedDeclaration":2134,"src":"8206:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"id":2836,"initialValue":{"baseExpression":{"id":2832,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"8232:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2835,"indexExpression":{"expression":{"id":2833,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8241:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8245:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8241:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8232:20:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8206:46:14"},{"expression":{"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2837,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8262:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8270:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"8262:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2840,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8286:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8262:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2842,"nodeType":"ExpressionStatement","src":"8262:30:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2843,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8307:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2844,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8315:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"8307:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2845,"name":"MINIMUM_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"8331:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8307:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2861,"nodeType":"IfStatement","src":"8303:134:14","trueBody":{"id":2860,"nodeType":"Block","src":"8346:91:14","statements":[{"expression":{"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2847,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8360:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2849,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8368:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"8360:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8379:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8360:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2852,"nodeType":"ExpressionStatement","src":"8360:23:14"},{"expression":{"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2853,"name":"isSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"8397:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2856,"indexExpression":{"expression":{"id":2854,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8407:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8411:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8407:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8397:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8421:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"8397:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2859,"nodeType":"ExpressionStatement","src":"8397:29:14"}]}},{"eventCall":{"arguments":[{"expression":{"id":2863,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8468:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8472:6:14","memberName":"sender","nodeType":"MemberAccess","src":"8468:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2865,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2785,"src":"8480:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2866,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2831,"src":"8488:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8496:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"8488:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2862,"name":"RelayerRestaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"8452:15:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8452:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2869,"nodeType":"EmitStatement","src":"8447:62:14"}]},"functionSelector":"8ce37cc4","id":2871,"implemented":true,"kind":"function","modifiers":[{"id":2788,"kind":"modifierInvocation","modifierName":{"id":2787,"name":"nonReentrant","nameLocations":["7906:12:14"],"nodeType":"IdentifierPath","referencedDeclaration":1520,"src":"7906:12:14"},"nodeType":"ModifierInvocation","src":"7906:12:14"}],"name":"restakeAfterSlash","nameLocation":"7863:17:14","nodeType":"FunctionDefinition","parameters":{"id":2786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2785,"mutability":"mutable","name":"amount","nameLocation":"7889:6:14","nodeType":"VariableDeclaration","scope":2871,"src":"7881:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2784,"name":"uint256","nodeType":"ElementaryTypeName","src":"7881:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7880:16:14"},"returnParameters":{"id":2789,"nodeType":"ParameterList","parameters":[],"src":"7919:0:14"},"scope":3115,"src":"7854:662:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2923,"nodeType":"Block","src":"8629:369:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2883,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8647:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8647:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736c61736820616d6f756e74","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8659:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b3f12b80e8bb9aac4ba6829963b419deb3140d610a4dc8ba687bf1996876466","typeString":"literal_string \"Invalid slash amount\""},"value":"Invalid slash amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b3f12b80e8bb9aac4ba6829963b419deb3140d610a4dc8ba687bf1996876466","typeString":"literal_string \"Invalid slash amount\""}],"id":2882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8639:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8639:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2888,"nodeType":"ExpressionStatement","src":"8639:43:14"},{"assignments":[2891],"declarations":[{"constant":false,"id":2891,"mutability":"mutable","name":"relayer","nameLocation":"8708:7:14","nodeType":"VariableDeclaration","scope":2923,"src":"8692:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":2890,"nodeType":"UserDefinedTypeName","pathNode":{"id":2889,"name":"Relayer","nameLocations":["8692:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"8692:7:14"},"referencedDeclaration":2134,"src":"8692:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"id":2895,"initialValue":{"baseExpression":{"id":2892,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"8718:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2894,"indexExpression":{"id":2893,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"8727:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8718:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8692:50:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2897,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"8760:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8768:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"8760:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2899,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8784:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8760:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207374616b65","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8792:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b","typeString":"literal_string \"Insufficient stake\""},"value":"Insufficient stake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b","typeString":"literal_string \"Insufficient stake\""}],"id":2896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8752:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8752:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2903,"nodeType":"ExpressionStatement","src":"8752:61:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2905,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"8832:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2906,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8840:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"8832:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8855:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8832:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f742072656769737465726564","id":2909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8858:24:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b409e32468280a5e9b57cd1ccd848308b28e4ac19819425a9d3be233859ede8","typeString":"literal_string \"Relayer not registered\""},"value":"Relayer not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b409e32468280a5e9b57cd1ccd848308b28e4ac19819425a9d3be233859ede8","typeString":"literal_string \"Relayer not registered\""}],"id":2904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8824:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8824:59:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2911,"nodeType":"ExpressionStatement","src":"8824:59:14"},{"expression":{"arguments":[{"id":2913,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"8906:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2914,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8922:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2912,"name":"_applySlash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"8894:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8894:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2916,"nodeType":"ExpressionStatement","src":"8894:35:14"},{"eventCall":{"arguments":[{"id":2918,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"8960:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2919,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8976:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2920,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"8984:6:14","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":2917,"name":"EmergencySlash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"8945:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,uint256,string memory)"}},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8945:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2922,"nodeType":"EmitStatement","src":"8940:51:14"}]},"functionSelector":"b63f3b8a","id":2924,"implemented":true,"kind":"function","modifiers":[{"id":2880,"kind":"modifierInvocation","modifierName":{"id":2879,"name":"onlyOwner","nameLocations":["8619:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"8619:9:14"},"nodeType":"ModifierInvocation","src":"8619:9:14"}],"name":"emergencySlash","nameLocation":"8531:14:14","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"relayerAddress","nameLocation":"8554:14:14","nodeType":"VariableDeclaration","scope":2924,"src":"8546:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2872,"name":"address","nodeType":"ElementaryTypeName","src":"8546:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"amount","nameLocation":"8578:6:14","nodeType":"VariableDeclaration","scope":2924,"src":"8570:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"reason","nameLocation":"8602:6:14","nodeType":"VariableDeclaration","scope":2924,"src":"8586:22:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":2876,"name":"string","nodeType":"ElementaryTypeName","src":"8586:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:64:14"},"returnParameters":{"id":2881,"nodeType":"ParameterList","parameters":[],"src":"8629:0:14"},"scope":3115,"src":"8522:476:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2969,"nodeType":"Block","src":"9073:328:14","statements":[{"expression":{"arguments":[{"baseExpression":{"id":2932,"name":"isSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"9091:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2934,"indexExpression":{"id":2933,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"9101:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9091:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f7420736c6173686564","id":2935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9118:21:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_e986f9af3cbcada9a39d2d17813a387bfc03188853ccfe2851e14bac27428aec","typeString":"literal_string \"Relayer not slashed\""},"value":"Relayer not slashed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e986f9af3cbcada9a39d2d17813a387bfc03188853ccfe2851e14bac27428aec","typeString":"literal_string \"Relayer not slashed\""}],"id":2931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9083:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9083:57:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2937,"nodeType":"ExpressionStatement","src":"9083:57:14"},{"expression":{"id":2942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2938,"name":"isSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"9151:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2940,"indexExpression":{"id":2939,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"9161:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9151:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9179:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9151:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2943,"nodeType":"ExpressionStatement","src":"9151:33:14"},{"expression":{"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2944,"name":"consecutiveFailures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"9194:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2946,"indexExpression":{"id":2945,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"9214:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9194:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9232:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9194:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2949,"nodeType":"ExpressionStatement","src":"9194:39:14"},{"assignments":[2952],"declarations":[{"constant":false,"id":2952,"mutability":"mutable","name":"relayer","nameLocation":"9260:7:14","nodeType":"VariableDeclaration","scope":2969,"src":"9244:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":2951,"nodeType":"UserDefinedTypeName","pathNode":{"id":2950,"name":"Relayer","nameLocations":["9244:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"9244:7:14"},"referencedDeclaration":2134,"src":"9244:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"id":2956,"initialValue":{"baseExpression":{"id":2953,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"9270:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":2955,"indexExpression":{"id":2954,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"9279:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9270:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9244:50:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2957,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"9308:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9316:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"9308:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2959,"name":"MINIMUM_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"9332:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9308:37:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2968,"nodeType":"IfStatement","src":"9304:91:14","trueBody":{"id":2967,"nodeType":"Block","src":"9347:48:14","statements":[{"expression":{"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":2961,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"9361:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":2963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9369:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"9361:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9380:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9361:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2966,"nodeType":"ExpressionStatement","src":"9361:23:14"}]}}]},"functionSelector":"20e732cd","id":2970,"implemented":true,"kind":"function","modifiers":[{"id":2929,"kind":"modifierInvocation","modifierName":{"id":2928,"name":"onlyOwner","nameLocations":["9063:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9063:9:14"},"nodeType":"ModifierInvocation","src":"9063:9:14"}],"name":"emergencyUnslash","nameLocation":"9013:16:14","nodeType":"FunctionDefinition","parameters":{"id":2927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2926,"mutability":"mutable","name":"relayerAddress","nameLocation":"9038:14:14","nodeType":"VariableDeclaration","scope":2970,"src":"9030:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2925,"name":"address","nodeType":"ElementaryTypeName","src":"9030:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9029:24:14"},"returnParameters":{"id":2930,"nodeType":"ParameterList","parameters":[],"src":"9073:0:14"},"scope":3115,"src":"9004:397:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3006,"nodeType":"Block","src":"9507:290:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2980,"name":"slashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"9525:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9539:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9525:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420736c61736820616d6f756e74","id":2983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9542:22:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b3f12b80e8bb9aac4ba6829963b419deb3140d610a4dc8ba687bf1996876466","typeString":"literal_string \"Invalid slash amount\""},"value":"Invalid slash amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b3f12b80e8bb9aac4ba6829963b419deb3140d610a4dc8ba687bf1996876466","typeString":"literal_string \"Invalid slash amount\""}],"id":2979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9517:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9517:48:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2985,"nodeType":"ExpressionStatement","src":"9517:48:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2987,"name":"failureThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"9583:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9602:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9583:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207468726573686f6c64","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9605:19:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ff97c68cc1ac5ac02627bc56a7952ed013c289f74b6ec864fdb7b550327a4a9","typeString":"literal_string \"Invalid threshold\""},"value":"Invalid threshold"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ff97c68cc1ac5ac02627bc56a7952ed013c289f74b6ec864fdb7b550327a4a9","typeString":"literal_string \"Invalid threshold\""}],"id":2986,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9575:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9575:50:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2992,"nodeType":"ExpressionStatement","src":"9575:50:14"},{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2993,"name":"slashAmountConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2154,"src":"9636:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2994,"name":"slashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"9656:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9636:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2996,"nodeType":"ExpressionStatement","src":"9636:31:14"},{"expression":{"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2997,"name":"failureThresholdConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2157,"src":"9677:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2998,"name":"failureThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"9702:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9677:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3000,"nodeType":"ExpressionStatement","src":"9677:41:14"},{"eventCall":{"arguments":[{"id":3002,"name":"slashAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"9760:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3003,"name":"failureThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2974,"src":"9773:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3001,"name":"SlashingParametersUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"9734:25:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9734:56:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3005,"nodeType":"EmitStatement","src":"9729:61:14"}]},"functionSelector":"d53f8a63","id":3007,"implemented":true,"kind":"function","modifiers":[{"id":2977,"kind":"modifierInvocation","modifierName":{"id":2976,"name":"onlyOwner","nameLocations":["9497:9:14"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"9497:9:14"},"nodeType":"ModifierInvocation","src":"9497:9:14"}],"name":"updateSlashingParameters","nameLocation":"9416:24:14","nodeType":"FunctionDefinition","parameters":{"id":2975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2972,"mutability":"mutable","name":"slashAmount","nameLocation":"9449:11:14","nodeType":"VariableDeclaration","scope":3007,"src":"9441:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2971,"name":"uint256","nodeType":"ElementaryTypeName","src":"9441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2974,"mutability":"mutable","name":"failureThreshold","nameLocation":"9470:16:14","nodeType":"VariableDeclaration","scope":3007,"src":"9462:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"9462:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9440:47:14"},"returnParameters":{"id":2978,"nodeType":"ParameterList","parameters":[],"src":"9507:0:14"},"scope":3115,"src":"9407:390:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3046,"nodeType":"Block","src":"9875:305:14","statements":[{"assignments":[3016],"declarations":[{"constant":false,"id":3016,"mutability":"mutable","name":"relayer","nameLocation":"9901:7:14","nodeType":"VariableDeclaration","scope":3046,"src":"9885:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":3015,"nodeType":"UserDefinedTypeName","pathNode":{"id":3014,"name":"Relayer","nameLocations":["9885:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"9885:7:14"},"referencedDeclaration":2134,"src":"9885:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"id":3020,"initialValue":{"baseExpression":{"id":3017,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"9911:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":3019,"indexExpression":{"id":3018,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"9920:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9911:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9885:50:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3022,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3016,"src":"9953:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":3023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9961:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"9953:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3024,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"9977:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9953:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207374616b6520746f20736c617368","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9985:29:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68bdd7ebce8e1f256ffd08733b66d8b22793ac300d5acaf823496dc3feffd3b","typeString":"literal_string \"Insufficient stake to slash\""},"value":"Insufficient stake to slash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68bdd7ebce8e1f256ffd08733b66d8b22793ac300d5acaf823496dc3feffd3b","typeString":"literal_string \"Insufficient stake to slash\""}],"id":3021,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9945:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9945:70:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3028,"nodeType":"ExpressionStatement","src":"9945:70:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3030,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10033:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10039:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"10033:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3032,"name":"lastSlashTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10052:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3034,"indexExpression":{"id":3033,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"10066:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10052:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3035,"name":"SLASHING_COOLDOWN","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2151,"src":"10084:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10052:49:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:68:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536c61736820636f6f6c646f776e20616374697665","id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10103:23:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_dcf045554b8f58ec2e0b389cb52fefc89c0f3f304ad888fa5344793c2dccd655","typeString":"literal_string \"Slash cooldown active\""},"value":"Slash cooldown active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dcf045554b8f58ec2e0b389cb52fefc89c0f3f304ad888fa5344793c2dccd655","typeString":"literal_string \"Slash cooldown active\""}],"id":3029,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10025:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10025:102:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3040,"nodeType":"ExpressionStatement","src":"10025:102:14"},{"expression":{"arguments":[{"id":3042,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"10150:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3043,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"10166:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3041,"name":"_applySlash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"10138:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10138:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3045,"nodeType":"ExpressionStatement","src":"10138:35:14"}]},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"_slashRelayer","nameLocation":"9812:13:14","nodeType":"FunctionDefinition","parameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"relayerAddress","nameLocation":"9834:14:14","nodeType":"VariableDeclaration","scope":3047,"src":"9826:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3008,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"amount","nameLocation":"9858:6:14","nodeType":"VariableDeclaration","scope":3047,"src":"9850:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"9850:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9825:40:14"},"returnParameters":{"id":3013,"nodeType":"ParameterList","parameters":[],"src":"9875:0:14"},"scope":3115,"src":"9803:377:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3113,"nodeType":"Block","src":"10256:505:14","statements":[{"assignments":[3056],"declarations":[{"constant":false,"id":3056,"mutability":"mutable","name":"relayer","nameLocation":"10282:7:14","nodeType":"VariableDeclaration","scope":3113,"src":"10266:23:14","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"},"typeName":{"id":3055,"nodeType":"UserDefinedTypeName","pathNode":{"id":3054,"name":"Relayer","nameLocations":["10266:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":2134,"src":"10266:7:14"},"referencedDeclaration":2134,"src":"10266:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer"}},"visibility":"internal"}],"id":3060,"initialValue":{"baseExpression":{"id":3057,"name":"relayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"10292:8:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Relayer_$2134_storage_$","typeString":"mapping(address => struct RelayerRegistry.Relayer storage ref)"}},"id":3059,"indexExpression":{"id":3058,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"10301:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10292:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage","typeString":"struct RelayerRegistry.Relayer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10266:50:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3062,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"10334:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":3063,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10342:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"10334:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3064,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"10358:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10334:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74207374616b65","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10366:20:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b","typeString":"literal_string \"Insufficient stake\""},"value":"Insufficient stake"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9720d1a8de7a166e9a030c27736476f87ae327fd299bce6d96b18afaa5ba3d9b","typeString":"literal_string \"Insufficient stake\""}],"id":3061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10326:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10326:61:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3068,"nodeType":"ExpressionStatement","src":"10326:61:14"},{"expression":{"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3069,"name":"lastSlashTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10398:13:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3071,"indexExpression":{"id":3070,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"10412:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10398:29:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3072,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10430:5:14","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10436:9:14","memberName":"timestamp","nodeType":"MemberAccess","src":"10430:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10398:47:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3075,"nodeType":"ExpressionStatement","src":"10398:47:14"},{"expression":{"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3076,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"10456:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":3078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10464:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"10456:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3079,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"10480:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10456:30:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3081,"nodeType":"ExpressionStatement","src":"10456:30:14"},{"expression":{"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3082,"name":"isSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"10496:9:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3084,"indexExpression":{"id":3083,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"10506:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10496:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10524:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"10496:32:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3087,"nodeType":"ExpressionStatement","src":"10496:32:14"},{"expression":{"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3088,"name":"consecutiveFailures","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"10538:19:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3090,"indexExpression":{"id":3089,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"10558:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10538:35:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10576:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10538:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3093,"nodeType":"ExpressionStatement","src":"10538:39:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3094,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"10592:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":3095,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10600:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"10592:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3096,"name":"MINIMUM_STAKE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"10615:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10592:36:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3105,"nodeType":"IfStatement","src":"10588:91:14","trueBody":{"id":3104,"nodeType":"Block","src":"10630:49:14","statements":[{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3098,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"10644:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":3100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10652:8:14","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":2131,"src":"10644:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10663:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"10644:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3103,"nodeType":"ExpressionStatement","src":"10644:24:14"}]}},{"eventCall":{"arguments":[{"id":3107,"name":"relayerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"10709:14:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3108,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3051,"src":"10725:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3109,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"10733:7:14","typeDescriptions":{"typeIdentifier":"t_struct$_Relayer_$2134_storage_ptr","typeString":"struct RelayerRegistry.Relayer storage pointer"}},"id":3110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10741:12:14","memberName":"stakedAmount","nodeType":"MemberAccess","referencedDeclaration":2121,"src":"10733:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3106,"name":"RelayerSlashed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"10694:14:14","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10694:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3112,"nodeType":"EmitStatement","src":"10689:65:14"}]},"id":3114,"implemented":true,"kind":"function","modifiers":[],"name":"_applySlash","nameLocation":"10195:11:14","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3049,"mutability":"mutable","name":"relayerAddress","nameLocation":"10215:14:14","nodeType":"VariableDeclaration","scope":3114,"src":"10207:22:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3048,"name":"address","nodeType":"ElementaryTypeName","src":"10207:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3051,"mutability":"mutable","name":"amount","nameLocation":"10239:6:14","nodeType":"VariableDeclaration","scope":3114,"src":"10231:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"10231:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10206:40:14"},"returnParameters":{"id":3053,"nodeType":"ParameterList","parameters":[],"src":"10256:0:14"},"scope":3115,"src":"10186:575:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3116,"src":"294:10469:14","usedErrors":[13,18,1005,1501],"usedEvents":[24,2182,2188,2194,2202,2210,2218,2224,2232]}],"src":"32:10732:14"},"id":14},"contracts/SubscriptionManager.sol":{"ast":{"absolutePath":"contracts/SubscriptionManager.sol","exportedSymbols":{"Context":[1487],"ECDSA":[1904],"IERC1363":[229],"IERC20":[967],"Ownable":[147],"ReentrancyGuard":[1556],"RelayerRegistry":[3115],"SafeERC20":[1457],"SubscriptionManager":[5149]},"id":5150,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3117,"literals":["solidity","0.8",".28"],"nodeType":"PragmaDirective","src":"32:23:15"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5150,"sourceUnit":148,"src":"57:52:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3119,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5150,"sourceUnit":968,"src":"110:56:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":3120,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5150,"sourceUnit":1905,"src":"167:62:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":3121,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5150,"sourceUnit":1557,"src":"230:59:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/RelayerRegistry.sol","file":"./RelayerRegistry.sol","id":3122,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5150,"sourceUnit":3116,"src":"290:31:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3123,"name":"ReentrancyGuard","nameLocations":["355:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":1556,"src":"355:15:15"},"id":3124,"nodeType":"InheritanceSpecifier","src":"355:15:15"},{"baseName":{"id":3125,"name":"Ownable","nameLocations":["372:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"372:7:15"},"id":3126,"nodeType":"InheritanceSpecifier","src":"372:7:15"}],"canonicalName":"SubscriptionManager","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5149,"linearizedBaseContracts":[5149,147,1487,1556],"name":"SubscriptionManager","nameLocation":"332:19:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SubscriptionManager.SubscriptionStatus","id":3132,"members":[{"id":3127,"name":"ACTIVE","nameLocation":"420:6:15","nodeType":"EnumValue","src":"420:6:15"},{"id":3128,"name":"PAUSED","nameLocation":"436:6:15","nodeType":"EnumValue","src":"436:6:15"},{"id":3129,"name":"CANCELLED","nameLocation":"452:9:15","nodeType":"EnumValue","src":"452:9:15"},{"id":3130,"name":"EXPIRED","nameLocation":"471:7:15","nodeType":"EnumValue","src":"471:7:15"},{"id":3131,"name":"COMPLETED","nameLocation":"488:9:15","nodeType":"EnumValue","src":"488:9:15"}],"name":"SubscriptionStatus","nameLocation":"391:18:15","nodeType":"EnumDefinition","src":"386:117:15"},{"canonicalName":"SubscriptionManager.Subscription","id":3156,"members":[{"constant":false,"id":3134,"mutability":"mutable","name":"subscriber","nameLocation":"547:10:15","nodeType":"VariableDeclaration","scope":3156,"src":"539:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3133,"name":"address","nodeType":"ElementaryTypeName","src":"539:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"merchant","nameLocation":"575:8:15","nodeType":"VariableDeclaration","scope":3156,"src":"567:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3135,"name":"address","nodeType":"ElementaryTypeName","src":"567:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"amount","nameLocation":"601:6:15","nodeType":"VariableDeclaration","scope":3156,"src":"593:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3140,"mutability":"mutable","name":"interval","nameLocation":"625:8:15","nodeType":"VariableDeclaration","scope":3156,"src":"617:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3139,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3142,"mutability":"mutable","name":"startTime","nameLocation":"651:9:15","nodeType":"VariableDeclaration","scope":3156,"src":"643:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3141,"name":"uint256","nodeType":"ElementaryTypeName","src":"643:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3144,"mutability":"mutable","name":"maxPayments","nameLocation":"678:11:15","nodeType":"VariableDeclaration","scope":3156,"src":"670:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"maxTotalAmount","nameLocation":"707:14:15","nodeType":"VariableDeclaration","scope":3156,"src":"699:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3145,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3148,"mutability":"mutable","name":"expiry","nameLocation":"739:6:15","nodeType":"VariableDeclaration","scope":3156,"src":"731:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3147,"name":"uint256","nodeType":"ElementaryTypeName","src":"731:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3150,"mutability":"mutable","name":"nonce","nameLocation":"763:5:15","nodeType":"VariableDeclaration","scope":3156,"src":"755:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3149,"name":"uint256","nodeType":"ElementaryTypeName","src":"755:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3152,"mutability":"mutable","name":"token","nameLocation":"786:5:15","nodeType":"VariableDeclaration","scope":3156,"src":"778:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3151,"name":"address","nodeType":"ElementaryTypeName","src":"778:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"status","nameLocation":"820:6:15","nodeType":"VariableDeclaration","scope":3156,"src":"801:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"typeName":{"id":3154,"nodeType":"UserDefinedTypeName","pathNode":{"id":3153,"name":"SubscriptionStatus","nameLocations":["801:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":3132,"src":"801:18:15"},"referencedDeclaration":3132,"src":"801:18:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"516:12:15","nodeType":"StructDefinition","scope":5149,"src":"509:324:15","visibility":"public"},{"canonicalName":"SubscriptionManager.SubscriptionIntent","id":3177,"members":[{"constant":false,"id":3158,"mutability":"mutable","name":"subscriber","nameLocation":"883:10:15","nodeType":"VariableDeclaration","scope":3177,"src":"875:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3157,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3160,"mutability":"mutable","name":"merchant","nameLocation":"911:8:15","nodeType":"VariableDeclaration","scope":3177,"src":"903:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3159,"name":"address","nodeType":"ElementaryTypeName","src":"903:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3162,"mutability":"mutable","name":"amount","nameLocation":"937:6:15","nodeType":"VariableDeclaration","scope":3177,"src":"929:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3161,"name":"uint256","nodeType":"ElementaryTypeName","src":"929:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3164,"mutability":"mutable","name":"interval","nameLocation":"961:8:15","nodeType":"VariableDeclaration","scope":3177,"src":"953:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3163,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3166,"mutability":"mutable","name":"startTime","nameLocation":"987:9:15","nodeType":"VariableDeclaration","scope":3177,"src":"979:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3165,"name":"uint256","nodeType":"ElementaryTypeName","src":"979:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3168,"mutability":"mutable","name":"maxPayments","nameLocation":"1014:11:15","nodeType":"VariableDeclaration","scope":3177,"src":"1006:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1006:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"maxTotalAmount","nameLocation":"1043:14:15","nodeType":"VariableDeclaration","scope":3177,"src":"1035:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3169,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3172,"mutability":"mutable","name":"expiry","nameLocation":"1075:6:15","nodeType":"VariableDeclaration","scope":3177,"src":"1067:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1067:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3174,"mutability":"mutable","name":"nonce","nameLocation":"1099:5:15","nodeType":"VariableDeclaration","scope":3177,"src":"1091:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1091:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3176,"mutability":"mutable","name":"token","nameLocation":"1122:5:15","nodeType":"VariableDeclaration","scope":3177,"src":"1114:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3175,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"SubscriptionIntent","nameLocation":"846:18:15","nodeType":"StructDefinition","scope":5149,"src":"839:295:15","visibility":"public"},{"constant":false,"functionSelector":"94259c6c","id":3182,"mutability":"mutable","name":"subscriptions","nameLocation":"1180:13:15","nodeType":"VariableDeclaration","scope":5149,"src":"1140:53:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription)"},"typeName":{"id":3181,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1148:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1140:32:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3180,"nodeType":"UserDefinedTypeName","pathNode":{"id":3179,"name":"Subscription","nameLocations":["1159:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"1159:12:15"},"referencedDeclaration":3156,"src":"1159:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}}},"visibility":"public"},{"constant":false,"functionSelector":"eaef9f2f","id":3186,"mutability":"mutable","name":"executedPayments","nameLocation":"1234:16:15","nodeType":"VariableDeclaration","scope":5149,"src":"1199:51:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3185,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1207:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1199:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1218:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"6437ecfc","id":3190,"mutability":"mutable","name":"currentNonce","nameLocation":"1291:12:15","nodeType":"VariableDeclaration","scope":5149,"src":"1256:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3189,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3187,"name":"address","nodeType":"ElementaryTypeName","src":"1264:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1256:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1275:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"68c4ac26","id":3194,"mutability":"mutable","name":"supportedTokens","nameLocation":"1341:15:15","nodeType":"VariableDeclaration","scope":5149,"src":"1309:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":3193,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3191,"name":"address","nodeType":"ElementaryTypeName","src":"1317:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1309:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3192,"name":"bool","nodeType":"ElementaryTypeName","src":"1328:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"7656b440","id":3198,"mutability":"mutable","name":"subscriptionToken","nameLocation":"1397:17:15","nodeType":"VariableDeclaration","scope":5149,"src":"1362:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":3197,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1370:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1362:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3196,"name":"address","nodeType":"ElementaryTypeName","src":"1381:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"ebd9c39c","id":3202,"mutability":"mutable","name":"ethDeposits","nameLocation":"1455:11:15","nodeType":"VariableDeclaration","scope":5149,"src":"1420:46:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3201,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1428:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1420:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1439:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"d6559120","id":3206,"mutability":"mutable","name":"activeSubscriptionCounts","nameLocation":"1507:24:15","nodeType":"VariableDeclaration","scope":5149,"src":"1472:59:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3205,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1472:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1491:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"id":3209,"mutability":"mutable","name":"supportedTokenList","nameLocation":"1555:18:15","nodeType":"VariableDeclaration","scope":5149,"src":"1537:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":3207,"name":"address","nodeType":"ElementaryTypeName","src":"1537:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3208,"nodeType":"ArrayTypeName","src":"1537:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"constant":false,"id":3213,"mutability":"mutable","name":"supportedTokenIndex","nameLocation":"1615:19:15","nodeType":"VariableDeclaration","scope":5149,"src":"1579:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":3212,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3210,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1579:27:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"functionSelector":"a807db75","id":3216,"mutability":"immutable","name":"RELAYER_REGISTRY","nameLocation":"1674:16:15","nodeType":"VariableDeclaration","scope":5149,"src":"1641:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"},"typeName":{"id":3215,"nodeType":"UserDefinedTypeName","pathNode":{"id":3214,"name":"RelayerRegistry","nameLocations":["1641:15:15"],"nodeType":"IdentifierPath","referencedDeclaration":3115,"src":"1641:15:15"},"referencedDeclaration":3115,"src":"1641:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}},"visibility":"public"},{"constant":true,"functionSelector":"be378228","id":3219,"mutability":"constant","name":"PROTOCOL_FEE_BPS","nameLocation":"1720:16:15","nodeType":"VariableDeclaration","scope":5149,"src":"1696:45:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"1696:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3530","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1739:2:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"visibility":"public"},{"constant":false,"id":3221,"mutability":"immutable","name":"DOMAIN_SEPARATOR","nameLocation":"1795:16:15","nodeType":"VariableDeclaration","scope":5149,"src":"1769:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1769:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"functionSelector":"33e5a1d6","id":3226,"mutability":"constant","name":"SUBSCRIPTION_INTENT_TYPEHASH","nameLocation":"1841:28:15","nodeType":"VariableDeclaration","scope":5149,"src":"1817:273:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1817:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"537562736372697074696f6e496e74656e74286164647265737320737562736372696265722c61646472657373206d65726368616e742c75696e7432353620616d6f756e742c75696e7432353620696e74657276616c2c75696e7432353620737461727454696d652c75696e74323536206d61785061796d656e74732c75696e74323536206d6178546f74616c416d6f756e742c75696e74323536206578706972792c75696e74323536206e6f6e63652c6164647265737320746f6b656e29","id":3224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1891:193:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_316f763395dccfb0903cc163e1283e12acbf4ec58e2882ed12c2f13bac986461","typeString":"literal_string \"SubscriptionIntent(address subscriber,address merchant,uint256 amount,uint256 interval,uint256 startTime,uint256 maxPayments,uint256 maxTotalAmount,uint256 expiry,uint256 nonce,address token)\""},"value":"SubscriptionIntent(address subscriber,address merchant,uint256 amount,uint256 interval,uint256 startTime,uint256 maxPayments,uint256 maxTotalAmount,uint256 expiry,uint256 nonce,address token)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_316f763395dccfb0903cc163e1283e12acbf4ec58e2882ed12c2f13bac986461","typeString":"literal_string \"SubscriptionIntent(address subscriber,address merchant,uint256 amount,uint256 interval,uint256 startTime,uint256 maxPayments,uint256 maxTotalAmount,uint256 expiry,uint256 nonce,address token)\""}],"id":3223,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1872:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:218:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"5adf2d8d","id":3231,"mutability":"constant","name":"PAUSE_REQUEST_TYPEHASH","nameLocation":"2120:22:15","nodeType":"VariableDeclaration","scope":5149,"src":"2096:126:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2096:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"506175736552657175657374286279746573333220737562736372697074696f6e49642c75696e74323536206e6f6e636529","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2164:52:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4d196c0bbe67585f3497477b08a7dedca34f0794cef101cf570c3e415f6d939","typeString":"literal_string \"PauseRequest(bytes32 subscriptionId,uint256 nonce)\""},"value":"PauseRequest(bytes32 subscriptionId,uint256 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b4d196c0bbe67585f3497477b08a7dedca34f0794cef101cf570c3e415f6d939","typeString":"literal_string \"PauseRequest(bytes32 subscriptionId,uint256 nonce)\""}],"id":3228,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2145:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"7b0e3b62","id":3236,"mutability":"constant","name":"RESUME_REQUEST_TYPEHASH","nameLocation":"2252:23:15","nodeType":"VariableDeclaration","scope":5149,"src":"2228:128:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2228:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"526573756d6552657175657374286279746573333220737562736372697074696f6e49642c75696e74323536206e6f6e636529","id":3234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2297:53:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d806147178df513a750f9faa80312ba59509af708425df523403bf058ce4b244","typeString":"literal_string \"ResumeRequest(bytes32 subscriptionId,uint256 nonce)\""},"value":"ResumeRequest(bytes32 subscriptionId,uint256 nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d806147178df513a750f9faa80312ba59509af708425df523403bf058ce4b244","typeString":"literal_string \"ResumeRequest(bytes32 subscriptionId,uint256 nonce)\""}],"id":3233,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2278:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2278:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"anonymous":false,"eventSelector":"b76f505b43aee5831d9f29bf6332a7aa4e48e7016819fbd63de7dbace080f049","id":3256,"name":"SubscriptionCreated","nameLocation":"2369:19:15","nodeType":"EventDefinition","parameters":{"id":3255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3238,"indexed":true,"mutability":"mutable","name":"subscriptionId","nameLocation":"2414:14:15","nodeType":"VariableDeclaration","scope":3256,"src":"2398:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2398:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3240,"indexed":true,"mutability":"mutable","name":"subscriber","nameLocation":"2454:10:15","nodeType":"VariableDeclaration","scope":3256,"src":"2438:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3239,"name":"address","nodeType":"ElementaryTypeName","src":"2438:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3242,"indexed":true,"mutability":"mutable","name":"merchant","nameLocation":"2490:8:15","nodeType":"VariableDeclaration","scope":3256,"src":"2474:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"2474:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3244,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"2516:5:15","nodeType":"VariableDeclaration","scope":3256,"src":"2508:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3243,"name":"address","nodeType":"ElementaryTypeName","src":"2508:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3246,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2539:6:15","nodeType":"VariableDeclaration","scope":3256,"src":"2531:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"2531:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3248,"indexed":false,"mutability":"mutable","name":"interval","nameLocation":"2563:8:15","nodeType":"VariableDeclaration","scope":3256,"src":"2555:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"2555:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3250,"indexed":false,"mutability":"mutable","name":"maxPayments","nameLocation":"2589:11:15","nodeType":"VariableDeclaration","scope":3256,"src":"2581:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"2581:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3252,"indexed":false,"mutability":"mutable","name":"maxTotalAmount","nameLocation":"2618:14:15","nodeType":"VariableDeclaration","scope":3256,"src":"2610:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3251,"name":"uint256","nodeType":"ElementaryTypeName","src":"2610:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3254,"indexed":false,"mutability":"mutable","name":"expiry","nameLocation":"2650:6:15","nodeType":"VariableDeclaration","scope":3256,"src":"2642:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2642:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2388:274:15"},"src":"2363:300:15"},{"anonymous":false,"eventSelector":"ded8d4d23682b33f0e79da6698526d10c5f7ec65705c1903e9ac7f78b5e3a51b","id":3262,"name":"SubscriptionPaused","nameLocation":"2675:18:15","nodeType":"EventDefinition","parameters":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"indexed":true,"mutability":"mutable","name":"subscriptionId","nameLocation":"2710:14:15","nodeType":"VariableDeclaration","scope":3262,"src":"2694:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2694:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3260,"indexed":true,"mutability":"mutable","name":"subscriber","nameLocation":"2742:10:15","nodeType":"VariableDeclaration","scope":3262,"src":"2726:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3259,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2693:60:15"},"src":"2669:85:15"},{"anonymous":false,"eventSelector":"aa36c7b46a257244f7f4be84a7163f464e536b2f812d6c308ef7856c58ba925d","id":3268,"name":"SubscriptionResumed","nameLocation":"2766:19:15","nodeType":"EventDefinition","parameters":{"id":3267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"indexed":true,"mutability":"mutable","name":"subscriptionId","nameLocation":"2802:14:15","nodeType":"VariableDeclaration","scope":3268,"src":"2786:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3263,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2786:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3266,"indexed":true,"mutability":"mutable","name":"subscriber","nameLocation":"2834:10:15","nodeType":"VariableDeclaration","scope":3268,"src":"2818:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3265,"name":"address","nodeType":"ElementaryTypeName","src":"2818:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2785:60:15"},"src":"2760:86:15"},{"anonymous":false,"eventSelector":"8065a33ad053d617d51579685a263b0f7c6ec05931dbc0280bfda3a784208959","id":3276,"name":"SubscriptionCancelled","nameLocation":"2858:21:15","nodeType":"EventDefinition","parameters":{"id":3275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"indexed":true,"mutability":"mutable","name":"subscriptionId","nameLocation":"2905:14:15","nodeType":"VariableDeclaration","scope":3276,"src":"2889:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2889:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3272,"indexed":true,"mutability":"mutable","name":"subscriber","nameLocation":"2945:10:15","nodeType":"VariableDeclaration","scope":3276,"src":"2929:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3271,"name":"address","nodeType":"ElementaryTypeName","src":"2929:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3274,"indexed":true,"mutability":"mutable","name":"merchant","nameLocation":"2981:8:15","nodeType":"VariableDeclaration","scope":3276,"src":"2965:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3273,"name":"address","nodeType":"ElementaryTypeName","src":"2965:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2879:116:15"},"src":"2852:144:15"},{"anonymous":false,"eventSelector":"8edd31b1042c3b68388248a57905bb81bd5b2abd7334d9e2cee14b88a479a23d","id":3294,"name":"PaymentExecuted","nameLocation":"3008:15:15","nodeType":"EventDefinition","parameters":{"id":3293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3278,"indexed":true,"mutability":"mutable","name":"subscriptionId","nameLocation":"3049:14:15","nodeType":"VariableDeclaration","scope":3294,"src":"3033:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3277,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3033:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3280,"indexed":true,"mutability":"mutable","name":"subscriber","nameLocation":"3089:10:15","nodeType":"VariableDeclaration","scope":3294,"src":"3073:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"3073:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3282,"indexed":true,"mutability":"mutable","name":"merchant","nameLocation":"3125:8:15","nodeType":"VariableDeclaration","scope":3294,"src":"3109:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3281,"name":"address","nodeType":"ElementaryTypeName","src":"3109:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3284,"indexed":false,"mutability":"mutable","name":"token","nameLocation":"3151:5:15","nodeType":"VariableDeclaration","scope":3294,"src":"3143:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3283,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3286,"indexed":false,"mutability":"mutable","name":"paymentNumber","nameLocation":"3174:13:15","nodeType":"VariableDeclaration","scope":3294,"src":"3166:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3166:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3288,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3205:6:15","nodeType":"VariableDeclaration","scope":3294,"src":"3197:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"3197:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3290,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"3229:3:15","nodeType":"VariableDeclaration","scope":3294,"src":"3221:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"3221:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3292,"indexed":false,"mutability":"mutable","name":"relayer","nameLocation":"3250:7:15","nodeType":"VariableDeclaration","scope":3294,"src":"3242:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"3242:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3023:240:15"},"src":"3002:262:15"},{"anonymous":false,"eventSelector":"8d07bb7d7ffc0fde6ebc3e0e718c1fdbfac73eb7ea593da5566fa86a1c3c1a30","id":3306,"name":"PaymentFailed","nameLocation":"3276:13:15","nodeType":"EventDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"indexed":true,"mutability":"mutable","name":"subscriptionId","nameLocation":"3315:14:15","nodeType":"VariableDeclaration","scope":3306,"src":"3299:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3299:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3298,"indexed":true,"mutability":"mutable","name":"subscriber","nameLocation":"3355:10:15","nodeType":"VariableDeclaration","scope":3306,"src":"3339:26:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3297,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3300,"indexed":true,"mutability":"mutable","name":"merchant","nameLocation":"3391:8:15","nodeType":"VariableDeclaration","scope":3306,"src":"3375:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3299,"name":"address","nodeType":"ElementaryTypeName","src":"3375:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3302,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3417:6:15","nodeType":"VariableDeclaration","scope":3306,"src":"3409:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3409:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3304,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"3440:6:15","nodeType":"VariableDeclaration","scope":3306,"src":"3433:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3303,"name":"string","nodeType":"ElementaryTypeName","src":"3433:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3289:163:15"},"src":"3270:183:15"},{"anonymous":false,"eventSelector":"784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4","id":3310,"name":"TokenAdded","nameLocation":"3465:10:15","nodeType":"EventDefinition","parameters":{"id":3309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3308,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"3492:5:15","nodeType":"VariableDeclaration","scope":3310,"src":"3476:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3307,"name":"address","nodeType":"ElementaryTypeName","src":"3476:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3475:23:15"},"src":"3459:40:15"},{"anonymous":false,"eventSelector":"4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3","id":3314,"name":"TokenRemoved","nameLocation":"3510:12:15","nodeType":"EventDefinition","parameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"indexed":true,"mutability":"mutable","name":"token","nameLocation":"3539:5:15","nodeType":"VariableDeclaration","scope":3314,"src":"3523:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3311,"name":"address","nodeType":"ElementaryTypeName","src":"3523:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3522:23:15"},"src":"3504:42:15"},{"body":{"id":3412,"nodeType":"Block","src":"3664:824:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"_relayerRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"3682:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3710:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3702:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3328,"name":"address","nodeType":"ElementaryTypeName","src":"3702:7:15","typeDescriptions":{}}},"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3702:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3682:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072656c617965722072656769737472792061646472657373","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3714:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8ee3099b22a447507ef25b0a5de2c7284fe3de507007edbaf89956974416721","typeString":"literal_string \"Invalid relayer registry address\""},"value":"Invalid relayer registry address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8ee3099b22a447507ef25b0a5de2c7284fe3de507007edbaf89956974416721","typeString":"literal_string \"Invalid relayer registry address\""}],"id":3326,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3674:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3674:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3335,"nodeType":"ExpressionStatement","src":"3674:75:15"},{"expression":{"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3336,"name":"RELAYER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"3760:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3338,"name":"_relayerRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"3795:16:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3337,"name":"RelayerRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"3779:15:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_RelayerRegistry_$3115_$","typeString":"type(contract RelayerRegistry)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3779:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}},"src":"3760:52:15","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}},"id":3341,"nodeType":"ExpressionStatement","src":"3760:52:15"},{"expression":{"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3342,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"3823:16:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3903:84:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":3346,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3893:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3893:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"hexValue":"417572756d","id":3352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4022:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_acdbaa2d9365d09420a73f7eac1bfd80ef7f0a52431b7ed44c1d8a8f77e56da8","typeString":"literal_string \"Aurum\""},"value":"Aurum"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_acdbaa2d9365d09420a73f7eac1bfd80ef7f0a52431b7ed44c1d8a8f77e56da8","typeString":"literal_string \"Aurum\""}],"id":3351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4016:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3350,"name":"bytes","nodeType":"ElementaryTypeName","src":"4016:5:15","typeDescriptions":{}}},"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4016:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3349,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4006:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4006:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"hexValue":"31","id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4065:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4059:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3356,"name":"bytes","nodeType":"ElementaryTypeName","src":"4059:5:15","typeDescriptions":{}}},"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4059:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3355,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4049:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3361,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4088:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4094:7:15","memberName":"chainid","nodeType":"MemberAccess","src":"4088:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3365,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4127:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionManager_$5149","typeString":"contract SubscriptionManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionManager_$5149","typeString":"contract SubscriptionManager"}],"id":3364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4119:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3363,"name":"address","nodeType":"ElementaryTypeName","src":"4119:7:15","typeDescriptions":{}}},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3344,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3865:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3869:6:15","memberName":"encode","nodeType":"MemberAccess","src":"3865:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3865:281:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3343,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3842:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:314:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3823:333:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3370,"nodeType":"ExpressionStatement","src":"3823:333:15"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":3374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4202:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4194:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3372,"name":"address","nodeType":"ElementaryTypeName","src":"4194:7:15","typeDescriptions":{}}},"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":3376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4206:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3371,"name":"_addSupportedTokenInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"4167:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3378,"nodeType":"ExpressionStatement","src":"4167:45:15"},{"body":{"id":3410,"nodeType":"Block","src":"4283:199:15","statements":[{"assignments":[3391],"declarations":[{"constant":false,"id":3391,"mutability":"mutable","name":"token","nameLocation":"4305:5:15","nodeType":"VariableDeclaration","scope":3410,"src":"4297:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3390,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3395,"initialValue":{"baseExpression":{"id":3392,"name":"supportedTokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"4313:23:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3394,"indexExpression":{"id":3393,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"4337:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4313:26:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4297:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3396,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"4357:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4374:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4366:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3397,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:15","typeDescriptions":{}}},"id":3400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4366:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4357:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3404,"nodeType":"IfStatement","src":"4353:66:15","trueBody":{"id":3403,"nodeType":"Block","src":"4378:41:15","statements":[{"id":3402,"nodeType":"Continue","src":"4396:8:15"}]}},{"expression":{"arguments":[{"id":3406,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"4459:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4466:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3405,"name":"_addSupportedTokenInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"4432:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4432:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3409,"nodeType":"ExpressionStatement","src":"4432:39:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3383,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"4242:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3384,"name":"supportedTokenAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"4246:23:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4270:6:15","memberName":"length","nodeType":"MemberAccess","src":"4246:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4242:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3411,"initializationExpression":{"assignments":[3380],"declarations":[{"constant":false,"id":3380,"mutability":"mutable","name":"i","nameLocation":"4235:1:15","nodeType":"VariableDeclaration","scope":3411,"src":"4227:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3382,"initialValue":{"hexValue":"30","id":3381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4239:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4227:13:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4278:3:15","subExpression":{"id":3387,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"4278:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3389,"nodeType":"ExpressionStatement","src":"4278:3:15"},"nodeType":"ForStatement","src":"4222:260:15"}]},"id":3413,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":3322,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3648:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3652:6:15","memberName":"sender","nodeType":"MemberAccess","src":"3648:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3324,"kind":"baseConstructorSpecifier","modifierName":{"id":3321,"name":"Ownable","nameLocations":["3640:7:15"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3640:7:15"},"nodeType":"ModifierInvocation","src":"3640:19:15"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3317,"mutability":"mutable","name":"supportedTokenAddresses","nameLocation":"3581:23:15","nodeType":"VariableDeclaration","scope":3413,"src":"3564:40:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3315,"name":"address","nodeType":"ElementaryTypeName","src":"3564:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3316,"nodeType":"ArrayTypeName","src":"3564:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3319,"mutability":"mutable","name":"_relayerRegistry","nameLocation":"3614:16:15","nodeType":"VariableDeclaration","scope":3413,"src":"3606:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3318,"name":"address","nodeType":"ElementaryTypeName","src":"3606:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3563:68:15"},"returnParameters":{"id":3325,"nodeType":"ParameterList","parameters":[],"src":"3664:0:15"},"scope":5149,"src":"3552:936:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3416,"nodeType":"Block","src":"4521:2:15","statements":[]},"id":3417,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3414,"nodeType":"ParameterList","parameters":[],"src":"4501:2:15"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[],"src":"4521:0:15"},"scope":5149,"src":"4494:29:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3462,"nodeType":"Block","src":"4684:302:15","statements":[{"assignments":[3430],"declarations":[{"constant":false,"id":3430,"mutability":"mutable","name":"structHash","nameLocation":"4702:10:15","nodeType":"VariableDeclaration","scope":3462,"src":"4694:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4694:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3434,"initialValue":{"arguments":[{"id":3432,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4727:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}],"id":3431,"name":"_hashIntent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"4715:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_SubscriptionIntent_$3177_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct SubscriptionManager.SubscriptionIntent memory) pure returns (bytes32)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4715:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4694:40:15"},{"assignments":[3436],"declarations":[{"constant":false,"id":3436,"mutability":"mutable","name":"digest","nameLocation":"4752:6:15","nodeType":"VariableDeclaration","scope":3462,"src":"4744:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3435,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4744:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3446,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4801:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":3441,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"4813:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4813:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3443,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"4835:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3438,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4784:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4788:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"4784:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3437,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4761:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4761:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4744:112:15"},{"assignments":[3448],"declarations":[{"constant":false,"id":3448,"mutability":"mutable","name":"recovered","nameLocation":"4875:9:15","nodeType":"VariableDeclaration","scope":3462,"src":"4867:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"4867:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3454,"initialValue":{"arguments":[{"id":3451,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"4901:6:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3452,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"4909:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3449,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"4887:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1904_$","typeString":"type(library ECDSA)"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4893:7:15","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"4887:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4887:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4867:52:15"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"4937:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3456,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4950:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4957:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3158,"src":"4950:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4937:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3459,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"4969:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4936:43:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3428,"id":3461,"nodeType":"Return","src":"4929:50:15"}]},"functionSelector":"1282a908","id":3463,"implemented":true,"kind":"function","modifiers":[],"name":"verifyIntent","nameLocation":"4538:12:15","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"intent","nameLocation":"4588:6:15","nodeType":"VariableDeclaration","scope":3463,"src":"4560:34:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent"},"typeName":{"id":3419,"nodeType":"UserDefinedTypeName","pathNode":{"id":3418,"name":"SubscriptionIntent","nameLocations":["4560:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"4560:18:15"},"referencedDeclaration":3177,"src":"4560:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_storage_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"signature","nameLocation":"4619:9:15","nodeType":"VariableDeclaration","scope":3463,"src":"4604:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3421,"name":"bytes","nodeType":"ElementaryTypeName","src":"4604:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4550:84:15"},"returnParameters":{"id":3428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"valid","nameLocation":"4661:5:15","nodeType":"VariableDeclaration","scope":3463,"src":"4656:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3424,"name":"bool","nodeType":"ElementaryTypeName","src":"4656:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3427,"mutability":"mutable","name":"signer","nameLocation":"4676:6:15","nodeType":"VariableDeclaration","scope":3463,"src":"4668:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3426,"name":"address","nodeType":"ElementaryTypeName","src":"4668:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4655:28:15"},"scope":5149,"src":"4529:457:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3485,"nodeType":"Block","src":"5053:117:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3471,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"5071:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5088:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5080:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3472,"name":"address","nodeType":"ElementaryTypeName","src":"5080:7:15","typeDescriptions":{}}},"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5071:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"65746820616c726561647920656e61626c6564","id":3477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5092:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7184748bf74b6c275337aa510fac9ee7e20a62a0f7dd0b61a0ef30a7604c974","typeString":"literal_string \"eth already enabled\""},"value":"eth already enabled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f7184748bf74b6c275337aa510fac9ee7e20a62a0f7dd0b61a0ef30a7604c974","typeString":"literal_string \"eth already enabled\""}],"id":3470,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5063:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5063:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3479,"nodeType":"ExpressionStatement","src":"5063:51:15"},{"expression":{"arguments":[{"id":3481,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"5151:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":3482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5158:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3480,"name":"_addSupportedTokenInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5123,"src":"5124:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5124:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3484,"nodeType":"ExpressionStatement","src":"5124:39:15"}]},"functionSelector":"6d69fcaf","id":3486,"implemented":true,"kind":"function","modifiers":[{"id":3468,"kind":"modifierInvocation","modifierName":{"id":3467,"name":"onlyOwner","nameLocations":["5043:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5043:9:15"},"nodeType":"ModifierInvocation","src":"5043:9:15"}],"name":"addSupportedToken","nameLocation":"5001:17:15","nodeType":"FunctionDefinition","parameters":{"id":3466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3465,"mutability":"mutable","name":"token","nameLocation":"5027:5:15","nodeType":"VariableDeclaration","scope":3486,"src":"5019:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3464,"name":"address","nodeType":"ElementaryTypeName","src":"5019:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5018:15:15"},"returnParameters":{"id":3469,"nodeType":"ParameterList","parameters":[],"src":"5053:0:15"},"scope":5149,"src":"4992:178:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3585,"nodeType":"Block","src":"5240:753:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"5258:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5275:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5267:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3495,"name":"address","nodeType":"ElementaryTypeName","src":"5267:7:15","typeDescriptions":{}}},"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5267:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5258:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616e6e6f742072656d6f76652065746820737570706f7274","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5279:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_64fb9afd79a9343b567e348cbc0b99f4af44b7483bceccba8baec640332c9898","typeString":"literal_string \"cannot remove eth support\""},"value":"cannot remove eth support"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_64fb9afd79a9343b567e348cbc0b99f4af44b7483bceccba8baec640332c9898","typeString":"literal_string \"cannot remove eth support\""}],"id":3493,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5250:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5250:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3502,"nodeType":"ExpressionStatement","src":"5250:57:15"},{"expression":{"arguments":[{"baseExpression":{"id":3504,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"5325:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3506,"indexExpression":{"id":3505,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"5341:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5325:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f6b656e206e6f7420737570706f72746564","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5349:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_01692aaaca22efb7697e71aaf6f8484c15d22118011d1d8c112ea43de7f65ddf","typeString":"literal_string \"token not supported\""},"value":"token not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01692aaaca22efb7697e71aaf6f8484c15d22118011d1d8c112ea43de7f65ddf","typeString":"literal_string \"token not supported\""}],"id":3503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5317:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5317:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3509,"nodeType":"ExpressionStatement","src":"5317:54:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3511,"name":"activeSubscriptionCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"5389:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3513,"indexExpression":{"id":3512,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"5414:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5389:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5424:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5389:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"41637469766520737562736372697074696f6e732070726573656e74","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5427:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_20be3e6e08ba67f84d50a9b757035a5b98ad8891b50f67cc586999720048244a","typeString":"literal_string \"Active subscriptions present\""},"value":"Active subscriptions present"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_20be3e6e08ba67f84d50a9b757035a5b98ad8891b50f67cc586999720048244a","typeString":"literal_string \"Active subscriptions present\""}],"id":3510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5381:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5381:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3518,"nodeType":"ExpressionStatement","src":"5381:77:15"},{"expression":{"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3519,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"5469:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3521,"indexExpression":{"id":3520,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"5485:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5469:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5494:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5469:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3524,"nodeType":"ExpressionStatement","src":"5469:30:15"},{"assignments":[3526],"declarations":[{"constant":false,"id":3526,"mutability":"mutable","name":"index","nameLocation":"5518:5:15","nodeType":"VariableDeclaration","scope":3585,"src":"5510:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3525,"name":"uint256","nodeType":"ElementaryTypeName","src":"5510:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3530,"initialValue":{"baseExpression":{"id":3527,"name":"supportedTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"5526:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3529,"indexExpression":{"id":3528,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"5546:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5526:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5510:42:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3532,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5570:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5579:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5570:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"746f6b656e20696e646578206d697373696e67","id":3535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5582:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1ee6dbfd39c3a92f816b380f2149da1ab40414f14479ea712ed05f2b7f686fc","typeString":"literal_string \"token index missing\""},"value":"token index missing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d1ee6dbfd39c3a92f816b380f2149da1ab40414f14479ea712ed05f2b7f686fc","typeString":"literal_string \"token index missing\""}],"id":3531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5562:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5562:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3537,"nodeType":"ExpressionStatement","src":"5562:42:15"},{"assignments":[3539],"declarations":[{"constant":false,"id":3539,"mutability":"mutable","name":"lastIndex","nameLocation":"5622:9:15","nodeType":"VariableDeclaration","scope":3585,"src":"5614:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3538,"name":"uint256","nodeType":"ElementaryTypeName","src":"5614:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3542,"initialValue":{"expression":{"id":3540,"name":"supportedTokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"5634:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5653:6:15","memberName":"length","nodeType":"MemberAccess","src":"5634:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5614:45:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3543,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5673:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3544,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"5682:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5673:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3569,"nodeType":"IfStatement","src":"5669:209:15","trueBody":{"id":3568,"nodeType":"Block","src":"5693:185:15","statements":[{"assignments":[3547],"declarations":[{"constant":false,"id":3547,"mutability":"mutable","name":"lastToken","nameLocation":"5715:9:15","nodeType":"VariableDeclaration","scope":3568,"src":"5707:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3546,"name":"address","nodeType":"ElementaryTypeName","src":"5707:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3553,"initialValue":{"baseExpression":{"id":3548,"name":"supportedTokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"5727:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3552,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3549,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"5746:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5758:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5746:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5727:33:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5707:53:15"},{"expression":{"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3554,"name":"supportedTokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"5774:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3558,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3555,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5793:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5801:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5793:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5774:29:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3559,"name":"lastToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"5806:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5774:41:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3561,"nodeType":"ExpressionStatement","src":"5774:41:15"},{"expression":{"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3562,"name":"supportedTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"5829:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3564,"indexExpression":{"id":3563,"name":"lastToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"5849:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5829:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3565,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3526,"src":"5862:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5829:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3567,"nodeType":"ExpressionStatement","src":"5829:38:15"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3570,"name":"supportedTokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"5887:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5906:3:15","memberName":"pop","nodeType":"MemberAccess","src":"5887:22:15","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5887:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3574,"nodeType":"ExpressionStatement","src":"5887:24:15"},{"expression":{"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3575,"name":"supportedTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"5921:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3577,"indexExpression":{"id":3576,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"5941:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5921:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5921:30:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3580,"nodeType":"ExpressionStatement","src":"5921:30:15"},{"eventCall":{"arguments":[{"id":3582,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"5980:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3581,"name":"TokenRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"5967:12:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5967:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3584,"nodeType":"EmitStatement","src":"5962:24:15"}]},"functionSelector":"76319190","id":3586,"implemented":true,"kind":"function","modifiers":[{"id":3491,"kind":"modifierInvocation","modifierName":{"id":3490,"name":"onlyOwner","nameLocations":["5230:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"5230:9:15"},"nodeType":"ModifierInvocation","src":"5230:9:15"}],"name":"removeSupportedToken","nameLocation":"5185:20:15","nodeType":"FunctionDefinition","parameters":{"id":3489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3488,"mutability":"mutable","name":"token","nameLocation":"5214:5:15","nodeType":"VariableDeclaration","scope":3586,"src":"5206:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3487,"name":"address","nodeType":"ElementaryTypeName","src":"5206:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5205:15:15"},"returnParameters":{"id":3492,"nodeType":"ParameterList","parameters":[],"src":"5240:0:15"},"scope":5149,"src":"5176:817:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3594,"nodeType":"Block","src":"6070:42:15","statements":[{"expression":{"id":3592,"name":"supportedTokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"6087:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":3591,"id":3593,"nodeType":"Return","src":"6080:25:15"}]},"functionSelector":"d3c7c2c7","id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"getSupportedTokens","nameLocation":"6008:18:15","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[],"src":"6026:2:15"},"returnParameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3595,"src":"6052:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3588,"name":"address","nodeType":"ElementaryTypeName","src":"6052:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3589,"nodeType":"ArrayTypeName","src":"6052:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6051:18:15"},"scope":5149,"src":"5999:113:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3606,"nodeType":"Block","src":"6204:57:15","statements":[{"expression":{"baseExpression":{"id":3602,"name":"subscriptionToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"6221:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3604,"indexExpression":{"id":3603,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"6239:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6221:33:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3601,"id":3605,"nodeType":"Return","src":"6214:40:15"}]},"functionSelector":"93db9cc4","id":3607,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscriptionToken","nameLocation":"6127:20:15","nodeType":"FunctionDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3597,"mutability":"mutable","name":"subscriptionId","nameLocation":"6156:14:15","nodeType":"VariableDeclaration","scope":3607,"src":"6148:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6148:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6147:24:15"},"returnParameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3607,"src":"6195:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3599,"name":"address","nodeType":"ElementaryTypeName","src":"6195:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6194:9:15"},"scope":5149,"src":"6118:143:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3618,"nodeType":"Block","src":"6342:49:15","statements":[{"expression":{"baseExpression":{"id":3614,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"6359:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3616,"indexExpression":{"id":3615,"name":"_subscriber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3609,"src":"6372:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6359:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3613,"id":3617,"nodeType":"Return","src":"6352:32:15"}]},"functionSelector":"90193b7c","id":3619,"implemented":true,"kind":"function","modifiers":[],"name":"getNextNonce","nameLocation":"6276:12:15","nodeType":"FunctionDefinition","parameters":{"id":3610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3609,"mutability":"mutable","name":"_subscriber","nameLocation":"6297:11:15","nodeType":"VariableDeclaration","scope":3619,"src":"6289:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3608,"name":"address","nodeType":"ElementaryTypeName","src":"6289:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6288:21:15"},"returnParameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3612,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3619,"src":"6333:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"6333:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6332:9:15"},"scope":5149,"src":"6267:124:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3631,"nodeType":"Block","src":"6490:53:15","statements":[{"expression":{"baseExpression":{"id":3627,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"6507:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":3629,"indexExpression":{"id":3628,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3621,"src":"6521:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6507:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"functionReturnParameters":3626,"id":3630,"nodeType":"Return","src":"6500:36:15"}]},"functionSelector":"1f32768e","id":3632,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"6406:15:15","nodeType":"FunctionDefinition","parameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"subscriptionId","nameLocation":"6430:14:15","nodeType":"VariableDeclaration","scope":3632,"src":"6422:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6422:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6421:24:15"},"returnParameters":{"id":3626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3632,"src":"6469:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_memory_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":3624,"nodeType":"UserDefinedTypeName","pathNode":{"id":3623,"name":"Subscription","nameLocations":["6469:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"6469:12:15"},"referencedDeclaration":3156,"src":"6469:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"src":"6468:21:15"},"scope":5149,"src":"6397:146:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3643,"nodeType":"Block","src":"6630:56:15","statements":[{"expression":{"baseExpression":{"id":3639,"name":"executedPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"6647:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3641,"indexExpression":{"id":3640,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"6664:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6647:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3638,"id":3642,"nodeType":"Return","src":"6640:39:15"}]},"functionSelector":"6f956971","id":3644,"implemented":true,"kind":"function","modifiers":[],"name":"getPaymentCount","nameLocation":"6558:15:15","nodeType":"FunctionDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"subscriptionId","nameLocation":"6582:14:15","nodeType":"VariableDeclaration","scope":3644,"src":"6574:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6574:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6573:24:15"},"returnParameters":{"id":3638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3644,"src":"6621:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"6621:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6620:9:15"},"scope":5149,"src":"6549:137:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3684,"nodeType":"Block","src":"6776:323:15","statements":[{"assignments":[3653],"declarations":[{"constant":false,"id":3653,"mutability":"mutable","name":"subscription","nameLocation":"6807:12:15","nodeType":"VariableDeclaration","scope":3684,"src":"6786:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":3652,"nodeType":"UserDefinedTypeName","pathNode":{"id":3651,"name":"Subscription","nameLocations":["6786:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"6786:12:15"},"referencedDeclaration":3156,"src":"6786:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"id":3657,"initialValue":{"baseExpression":{"id":3654,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"6822:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":3656,"indexExpression":{"id":3655,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"6836:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6822:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6786:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3659,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"6869:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6882:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"6869:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6904:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6896:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3661,"name":"address","nodeType":"ElementaryTypeName","src":"6896:7:15","typeDescriptions":{}}},"id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6896:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6869:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e20646f6573206e6f74206578697374","id":3666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6908:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""},"value":"Subscription does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""}],"id":3658,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6861:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6861:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3668,"nodeType":"ExpressionStatement","src":"6861:77:15"},{"assignments":[3670],"declarations":[{"constant":false,"id":3670,"mutability":"mutable","name":"paymentsExecuted","nameLocation":"6957:16:15","nodeType":"VariableDeclaration","scope":3684,"src":"6949:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3669,"name":"uint256","nodeType":"ElementaryTypeName","src":"6949:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3674,"initialValue":{"baseExpression":{"id":3671,"name":"executedPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"6976:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3673,"indexExpression":{"id":3672,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"6993:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6976:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6949:59:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3675,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"7025:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7038:9:15","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":3142,"src":"7025:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3677,"name":"paymentsExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3670,"src":"7051:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3678,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3653,"src":"7070:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7083:8:15","memberName":"interval","nodeType":"MemberAccess","referencedDeclaration":3140,"src":"7070:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7051:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3681,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7050:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7025:67:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3650,"id":3683,"nodeType":"Return","src":"7018:74:15"}]},"functionSelector":"c603ff48","id":3685,"implemented":true,"kind":"function","modifiers":[],"name":"getNextPaymentTime","nameLocation":"6701:18:15","nodeType":"FunctionDefinition","parameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"subscriptionId","nameLocation":"6728:14:15","nodeType":"VariableDeclaration","scope":3685,"src":"6720:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6720:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6719:24:15"},"returnParameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3685,"src":"6767:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3648,"name":"uint256","nodeType":"ElementaryTypeName","src":"6767:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6766:9:15"},"scope":5149,"src":"6692:407:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3713,"nodeType":"Block","src":"7188:188:15","statements":[{"assignments":[3694],"declarations":[{"constant":false,"id":3694,"mutability":"mutable","name":"subscription","nameLocation":"7219:12:15","nodeType":"VariableDeclaration","scope":3713,"src":"7198:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":3693,"nodeType":"UserDefinedTypeName","pathNode":{"id":3692,"name":"Subscription","nameLocations":["7198:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"7198:12:15"},"referencedDeclaration":3156,"src":"7198:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"id":3698,"initialValue":{"baseExpression":{"id":3695,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"7234:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":3697,"indexExpression":{"id":3696,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"7248:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7234:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7198:65:15"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3699,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"7280:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7293:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"7280:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7315:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7307:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3701,"name":"address","nodeType":"ElementaryTypeName","src":"7307:7:15","typeDescriptions":{}}},"id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7280:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3706,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"7321:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7334:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"7321:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3708,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"7344:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7363:6:15","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"7344:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"7321:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7280:89:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3691,"id":3712,"nodeType":"Return","src":"7273:96:15"}]},"functionSelector":"91351c82","id":3714,"implemented":true,"kind":"function","modifiers":[],"name":"isSubscriptionActive","nameLocation":"7114:20:15","nodeType":"FunctionDefinition","parameters":{"id":3688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"subscriptionId","nameLocation":"7143:14:15","nodeType":"VariableDeclaration","scope":3714,"src":"7135:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7135:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7134:24:15"},"returnParameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3714,"src":"7182:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3689,"name":"bool","nodeType":"ElementaryTypeName","src":"7182:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7181:6:15"},"scope":5149,"src":"7105:271:15","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3897,"nodeType":"Block","src":"7536:1868:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3725,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"7554:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7561:5:15","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"7554:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"baseExpression":{"id":3727,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"7570:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3730,"indexExpression":{"expression":{"id":3728,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"7583:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7590:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3158,"src":"7583:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7570:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7554:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206e6f6e6365","id":3732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7603:15:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568","typeString":"literal_string \"Invalid nonce\""},"value":"Invalid nonce"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19a9c5fdfc984667e300523283171e2aca8bb9e593f19eef41052fcdbfdb1568","typeString":"literal_string \"Invalid nonce\""}],"id":3724,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7546:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7546:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3734,"nodeType":"ExpressionStatement","src":"7546:73:15"},{"expression":{"arguments":[{"baseExpression":{"id":3736,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"7637:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3739,"indexExpression":{"expression":{"id":3737,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"7653:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7660:5:15","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"7653:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7637:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420737570706f72746564","id":3740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7668:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""},"value":"Token not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""}],"id":3735,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7629:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7629:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3742,"nodeType":"ExpressionStatement","src":"7629:61:15"},{"assignments":[3744,3746],"declarations":[{"constant":false,"id":3744,"mutability":"mutable","name":"valid","nameLocation":"7707:5:15","nodeType":"VariableDeclaration","scope":3897,"src":"7702:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3743,"name":"bool","nodeType":"ElementaryTypeName","src":"7702:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3746,"mutability":"mutable","name":"signer","nameLocation":"7722:6:15","nodeType":"VariableDeclaration","scope":3897,"src":"7714:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3745,"name":"address","nodeType":"ElementaryTypeName","src":"7714:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3751,"initialValue":{"arguments":[{"id":3748,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"7745:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},{"id":3749,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"7753:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":3747,"name":"verifyIntent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"7732:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SubscriptionIntent_$3177_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bool_$_t_address_$","typeString":"function (struct SubscriptionManager.SubscriptionIntent calldata,bytes calldata) view returns (bool,address)"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7732:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"7701:62:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3753,"name":"valid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"7781:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"7790:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3755,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"7800:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7807:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3158,"src":"7800:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7790:27:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7781:36:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":3759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7819:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":3752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7773:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7773:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3761,"nodeType":"ExpressionStatement","src":"7773:66:15"},{"expression":{"arguments":[{"id":3763,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"7878:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}],"id":3762,"name":"_validateSubscriptionParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7850:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_SubscriptionIntent_$3177_calldata_ptr_$returns$__$","typeString":"function (struct SubscriptionManager.SubscriptionIntent calldata) view"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7850:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3765,"nodeType":"ExpressionStatement","src":"7850:35:15"},{"expression":{"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3766,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"7896:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":3771,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"7952:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}],"id":3770,"name":"_hashIntent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4708,"src":"7940:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_SubscriptionIntent_$3177_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct SubscriptionManager.SubscriptionIntent memory) pure returns (bytes32)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7940:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3773,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"7961:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":3768,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7923:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7927:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"7923:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7923:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3767,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7913:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7913:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7896:76:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3777,"nodeType":"ExpressionStatement","src":"7896:76:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3779,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"7991:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":3781,"indexExpression":{"id":3780,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"8005:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7991:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"id":3782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8021:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"7991:40:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8035:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3783,"name":"address","nodeType":"ElementaryTypeName","src":"8035:7:15","typeDescriptions":{}}},"id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8035:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7991:54:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e20616c726561647920657869737473","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8047:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_95e921aa39b6240b3252e0659ce72d01c807f14e44d5f5a48335c1dee856a5d2","typeString":"literal_string \"Subscription already exists\""},"value":"Subscription already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95e921aa39b6240b3252e0659ce72d01c807f14e44d5f5a48335c1dee856a5d2","typeString":"literal_string \"Subscription already exists\""}],"id":3778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7983:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7983:94:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3790,"nodeType":"ExpressionStatement","src":"7983:94:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3791,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8092:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8099:5:15","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"8092:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8116:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8108:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3793,"name":"address","nodeType":"ElementaryTypeName","src":"8108:7:15","typeDescriptions":{}}},"id":3796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8108:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8092:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3825,"nodeType":"IfStatement","src":"8088:305:15","trueBody":{"id":3824,"nodeType":"Block","src":"8120:273:15","statements":[{"assignments":[3799],"declarations":[{"constant":false,"id":3799,"mutability":"mutable","name":"requiredAllowance","nameLocation":"8142:17:15","nodeType":"VariableDeclaration","scope":3824,"src":"8134:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3798,"name":"uint256","nodeType":"ElementaryTypeName","src":"8134:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3805,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3800,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8162:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8169:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3162,"src":"8162:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3802,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8178:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8185:11:15","memberName":"maxPayments","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"8178:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8162:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8134:62:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":3812,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8266:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8273:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3158,"src":"8266:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3816,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8293:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionManager_$5149","typeString":"contract SubscriptionManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionManager_$5149","typeString":"contract SubscriptionManager"}],"id":3815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8285:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3814,"name":"address","nodeType":"ElementaryTypeName","src":"8285:7:15","typeDescriptions":{}}},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8285:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"expression":{"id":3808,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8242:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8249:5:15","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"8242:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3807,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"8235:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8235:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8256:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"8235:30:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8235:64:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3819,"name":"requiredAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"8303:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8235:85:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420746f6b656e20616c6c6f77616e6365","id":3821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8338:30:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_13b746866a977dce2954bbc64faddaf77d9624a267139c2f6049388f04037257","typeString":"literal_string \"Insufficient token allowance\""},"value":"Insufficient token allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13b746866a977dce2954bbc64faddaf77d9624a267139c2f6049388f04037257","typeString":"literal_string \"Insufficient token allowance\""}],"id":3806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8210:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8210:172:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3823,"nodeType":"ExpressionStatement","src":"8210:172:15"}]}},{"expression":{"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3826,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"8403:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":3828,"indexExpression":{"id":3827,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"8417:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8403:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3830,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8474:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8481:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3158,"src":"8474:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3832,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8515:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8522:8:15","memberName":"merchant","nodeType":"MemberAccess","referencedDeclaration":3160,"src":"8515:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3834,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8552:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8559:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3162,"src":"8552:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3836,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8589:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:8:15","memberName":"interval","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"8589:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3838,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8629:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8636:9:15","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":3166,"src":"8629:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3840,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8672:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8679:11:15","memberName":"maxPayments","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"8672:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3842,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8720:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8727:14:15","memberName":"maxTotalAmount","nodeType":"MemberAccess","referencedDeclaration":3170,"src":"8720:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3844,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8763:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8770:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":3172,"src":"8763:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3846,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8797:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8804:5:15","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"8797:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3848,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8830:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8837:5:15","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"8830:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3850,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"8864:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8883:6:15","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"8864:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}],"id":3829,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3156,"src":"8435:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$3156_storage_ptr_$","typeString":"type(struct SubscriptionManager.Subscription storage pointer)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8462:10:15","8505:8:15","8544:6:15","8579:8:15","8618:9:15","8659:11:15","8704:14:15","8755:6:15","8790:5:15","8823:5:15","8856:6:15"],"names":["subscriber","merchant","amount","interval","startTime","maxPayments","maxTotalAmount","expiry","nonce","token","status"],"nodeType":"FunctionCall","src":"8435:465:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_memory_ptr","typeString":"struct SubscriptionManager.Subscription memory"}},"src":"8403:497:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"id":3854,"nodeType":"ExpressionStatement","src":"8403:497:15"},{"expression":{"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3855,"name":"subscriptionToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"8911:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3857,"indexExpression":{"id":3856,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"8929:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8911:33:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3858,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8947:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8954:5:15","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"8947:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8911:48:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3861,"nodeType":"ExpressionStatement","src":"8911:48:15"},{"expression":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3862,"name":"activeSubscriptionCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"8969:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3865,"indexExpression":{"expression":{"id":3863,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"8994:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9001:5:15","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"8994:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8969:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9011:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8969:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3868,"nodeType":"ExpressionStatement","src":"8969:43:15"},{"expression":{"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9023:33:15","subExpression":{"baseExpression":{"id":3869,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"9023:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3872,"indexExpression":{"expression":{"id":3870,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9036:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9043:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3158,"src":"9036:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9023:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3874,"nodeType":"ExpressionStatement","src":"9023:33:15"},{"eventCall":{"arguments":[{"id":3876,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"9105:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3877,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9133:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9140:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3158,"src":"9133:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3879,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9164:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9171:8:15","memberName":"merchant","nodeType":"MemberAccess","referencedDeclaration":3160,"src":"9164:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3881,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9193:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9200:5:15","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"9193:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3883,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9219:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9226:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3162,"src":"9219:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3885,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9246:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9253:8:15","memberName":"interval","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"9246:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3887,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9275:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9282:11:15","memberName":"maxPayments","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"9275:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3889,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9307:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9314:14:15","memberName":"maxTotalAmount","nodeType":"MemberAccess","referencedDeclaration":3170,"src":"9307:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3891,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3717,"src":"9342:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9349:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":3172,"src":"9342:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3875,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3256,"src":"9072:19:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,address,uint256,uint256,uint256,uint256,uint256)"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9072:293:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3894,"nodeType":"EmitStatement","src":"9067:298:15"},{"expression":{"id":3895,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3722,"src":"9383:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3723,"id":3896,"nodeType":"Return","src":"9376:21:15"}]},"functionSelector":"9c9b549d","id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"7391:18:15","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"intent","nameLocation":"7447:6:15","nodeType":"VariableDeclaration","scope":3898,"src":"7419:34:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent"},"typeName":{"id":3716,"nodeType":"UserDefinedTypeName","pathNode":{"id":3715,"name":"SubscriptionIntent","nameLocations":["7419:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"7419:18:15"},"referencedDeclaration":3177,"src":"7419:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_storage_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent"}},"visibility":"internal"},{"constant":false,"id":3719,"mutability":"mutable","name":"signature","nameLocation":"7478:9:15","nodeType":"VariableDeclaration","scope":3898,"src":"7463:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3718,"name":"bytes","nodeType":"ElementaryTypeName","src":"7463:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7409:84:15"},"returnParameters":{"id":3723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3722,"mutability":"mutable","name":"subscriptionId","nameLocation":"7520:14:15","nodeType":"VariableDeclaration","scope":3898,"src":"7512:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7512:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7511:24:15"},"scope":5149,"src":"7382:2022:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4233,"nodeType":"Block","src":"9502:3671:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3908,"name":"relayer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"9520:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9531:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9535:6:15","memberName":"sender","nodeType":"MemberAccess","src":"9531:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9520:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206d69736d61746368","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9543:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_680e9fc36ad20dbb53a856c79853678b500118948294f0fa3c749c86e8cbf2cc","typeString":"literal_string \"Relayer mismatch\""},"value":"Relayer mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_680e9fc36ad20dbb53a856c79853678b500118948294f0fa3c749c86e8cbf2cc","typeString":"literal_string \"Relayer mismatch\""}],"id":3907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9512:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9512:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3914,"nodeType":"ExpressionStatement","src":"9512:50:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3918,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9608:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9612:6:15","memberName":"sender","nodeType":"MemberAccess","src":"9608:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3916,"name":"RELAYER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"9580:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9597:10:15","memberName":"canExecute","nodeType":"MemberAccess","referencedDeclaration":2741,"src":"9580:27:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9580:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52656c61796572206e6f7420617574686f72697a6564","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9621:24:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_a822a9bf14c0a671f0df5f162ec830dc71d0a6fa42e1a65815706de349c29640","typeString":"literal_string \"Relayer not authorized\""},"value":"Relayer not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a822a9bf14c0a671f0df5f162ec830dc71d0a6fa42e1a65815706de349c29640","typeString":"literal_string \"Relayer not authorized\""}],"id":3915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9572:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9572:74:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3923,"nodeType":"ExpressionStatement","src":"9572:74:15"},{"assignments":[3926],"declarations":[{"constant":false,"id":3926,"mutability":"mutable","name":"subscription","nameLocation":"9678:12:15","nodeType":"VariableDeclaration","scope":4233,"src":"9657:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":3925,"nodeType":"UserDefinedTypeName","pathNode":{"id":3924,"name":"Subscription","nameLocations":["9657:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"9657:12:15"},"referencedDeclaration":3156,"src":"9657:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"id":3930,"initialValue":{"baseExpression":{"id":3927,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"9693:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":3929,"indexExpression":{"id":3928,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"9707:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9693:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9657:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3932,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"9741:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9754:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"9741:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9776:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9768:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3934,"name":"address","nodeType":"ElementaryTypeName","src":"9768:7:15","typeDescriptions":{}}},"id":3937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9768:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9741:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e20646f6573206e6f74206578697374","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9780:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""},"value":"Subscription does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""}],"id":3931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9733:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9733:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3941,"nodeType":"ExpressionStatement","src":"9733:77:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3943,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"9828:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9841:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"9828:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3945,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"9851:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9870:6:15","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"9851:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"9828:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e206e6f7420616374697665","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9878:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_be76c7fd3a460170820c205cea393e976262370f38f98c02bce973092d6b1607","typeString":"literal_string \"Subscription not active\""},"value":"Subscription not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be76c7fd3a460170820c205cea393e976262370f38f98c02bce973092d6b1607","typeString":"literal_string \"Subscription not active\""}],"id":3942,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9820:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9820:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3950,"nodeType":"ExpressionStatement","src":"9820:84:15"},{"assignments":[3952],"declarations":[{"constant":false,"id":3952,"mutability":"mutable","name":"token","nameLocation":"9923:5:15","nodeType":"VariableDeclaration","scope":4233,"src":"9915:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3951,"name":"address","nodeType":"ElementaryTypeName","src":"9915:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3956,"initialValue":{"baseExpression":{"id":3953,"name":"subscriptionToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"9931:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3955,"indexExpression":{"id":3954,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"9949:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9931:33:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9915:49:15"},{"expression":{"arguments":[{"baseExpression":{"id":3958,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"9982:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3960,"indexExpression":{"id":3959,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"9998:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9982:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f206c6f6e67657220737570706f72746564","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10006:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_da6ad4350b2c8f2045e6db10a875f40fc488c67ec6368c4fafb36e793d36043e","typeString":"literal_string \"Token no longer supported\""},"value":"Token no longer supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da6ad4350b2c8f2045e6db10a875f40fc488c67ec6368c4fafb36e793d36043e","typeString":"literal_string \"Token no longer supported\""}],"id":3957,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9974:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9974:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3963,"nodeType":"ExpressionStatement","src":"9974:60:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3964,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10049:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10055:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"10049:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3966,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"10067:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3967,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10080:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":3148,"src":"10067:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10049:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4002,"nodeType":"IfStatement","src":"10045:490:15","trueBody":{"id":4001,"nodeType":"Block","src":"10088:447:15","statements":[{"expression":{"arguments":[{"id":3970,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"10124:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3969,"name":"_decrementActiveCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"10102:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":3971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10102:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3972,"nodeType":"ExpressionStatement","src":"10102:37:15"},{"expression":{"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3973,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"10153:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10166:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"10153:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3976,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"10175:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10194:7:15","memberName":"EXPIRED","nodeType":"MemberAccess","referencedDeclaration":3130,"src":"10175:26:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"10153:48:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"id":3979,"nodeType":"ExpressionStatement","src":"10153:48:15"},{"eventCall":{"arguments":[{"id":3981,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"10251:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3982,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"10283:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10296:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"10283:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3984,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"10324:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10337:8:15","memberName":"merchant","nodeType":"MemberAccess","referencedDeclaration":3136,"src":"10324:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3986,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"10363:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":3987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10376:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"10363:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"537562736372697074696f6e2065787069726564","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10400:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e63f34fa1977d054b8e323d4326575c23bc986c8525830f7005defe565b5546c","typeString":"literal_string \"Subscription expired\""},"value":"Subscription expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_e63f34fa1977d054b8e323d4326575c23bc986c8525830f7005defe565b5546c","typeString":"literal_string \"Subscription expired\""}],"id":3980,"name":"PaymentFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"10220:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,address,address,uint256,string memory)"}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10220:216:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3990,"nodeType":"EmitStatement","src":"10215:221:15"},{"expression":{"arguments":[{"expression":{"id":3994,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10483:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10487:6:15","memberName":"sender","nodeType":"MemberAccess","src":"10483:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10495:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10502:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":3991,"name":"RELAYER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"10450:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10467:15:15","memberName":"recordExecution","nodeType":"MemberAccess","referencedDeclaration":2652,"src":"10450:32:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256) external"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10450:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3999,"nodeType":"ExpressionStatement","src":"10450:54:15"},{"functionReturnParameters":3906,"id":4000,"nodeType":"Return","src":"10518:7:15"}]}},{"expression":{"arguments":[{"arguments":[{"id":4005,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"10567:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4004,"name":"_isPaymentDue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4753,"src":"10553:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32) view returns (bool)"}},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10553:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061796d656e74206e6f742064756520796574","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10584:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_46f8c9e22398cf04f2f6aa70c9111a4e81d1cfe14ec052363860e1435d57bf81","typeString":"literal_string \"Payment not due yet\""},"value":"Payment not due yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_46f8c9e22398cf04f2f6aa70c9111a4e81d1cfe14ec052363860e1435d57bf81","typeString":"literal_string \"Payment not due yet\""}],"id":4003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10545:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10545:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4009,"nodeType":"ExpressionStatement","src":"10545:61:15"},{"assignments":[4011],"declarations":[{"constant":false,"id":4011,"mutability":"mutable","name":"currentPaymentNumber","nameLocation":"10625:20:15","nodeType":"VariableDeclaration","scope":4233,"src":"10617:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"10617:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4017,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4012,"name":"executedPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"10648:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4014,"indexExpression":{"id":4013,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"10665:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10648:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10683:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10648:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10617:67:15"},{"assignments":[4019],"declarations":[{"constant":false,"id":4019,"mutability":"mutable","name":"fee","nameLocation":"10702:3:15","nodeType":"VariableDeclaration","scope":4233,"src":"10694:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"10694:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4027,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4020,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"10709:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10722:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"10709:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4022,"name":"PROTOCOL_FEE_BPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"10731:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10709:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10708:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10751:5:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"10708:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10694:62:15"},{"condition":{"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10771:42:15","subExpression":{"arguments":[{"id":4029,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"10791:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4030,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"10807:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4028,"name":"_canExecutePayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"10772:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10772:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4055,"nodeType":"IfStatement","src":"10767:391:15","trueBody":{"id":4054,"nodeType":"Block","src":"10815:343:15","statements":[{"eventCall":{"arguments":[{"id":4034,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"10865:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4035,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"10897:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4036,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10910:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"10897:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4037,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"10938:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4038,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10951:8:15","memberName":"merchant","nodeType":"MemberAccess","referencedDeclaration":3136,"src":"10938:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4039,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"10977:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4040,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10990:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"10977:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"457865637574696f6e20636f6e73747261696e7473206e6f74206d6574","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11014:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1122f0903f714c89ffcf06b3caf68da6226ea992002543e10e078af59af4ae74","typeString":"literal_string \"Execution constraints not met\""},"value":"Execution constraints not met"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_1122f0903f714c89ffcf06b3caf68da6226ea992002543e10e078af59af4ae74","typeString":"literal_string \"Execution constraints not met\""}],"id":4033,"name":"PaymentFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"10834:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,address,address,uint256,string memory)"}},"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10834:225:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4043,"nodeType":"EmitStatement","src":"10829:230:15"},{"expression":{"arguments":[{"expression":{"id":4047,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11106:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11110:6:15","memberName":"sender","nodeType":"MemberAccess","src":"11106:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":4049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11118:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11125:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":4044,"name":"RELAYER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"11073:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11090:15:15","memberName":"recordExecution","nodeType":"MemberAccess","referencedDeclaration":2652,"src":"11073:32:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256) external"}},"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11073:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4052,"nodeType":"ExpressionStatement","src":"11073:54:15"},{"functionReturnParameters":3906,"id":4053,"nodeType":"Return","src":"11141:7:15"}]}},{"assignments":[4057],"declarations":[{"constant":false,"id":4057,"mutability":"mutable","name":"merchantAmount","nameLocation":"11176:14:15","nodeType":"VariableDeclaration","scope":4233,"src":"11168:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4056,"name":"uint256","nodeType":"ElementaryTypeName","src":"11168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4062,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4058,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11193:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4059,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11206:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"11193:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4060,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"11215:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11193:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11168:50:15"},{"assignments":[4064],"declarations":[{"constant":false,"id":4064,"mutability":"mutable","name":"paymentSuccess","nameLocation":"11233:14:15","nodeType":"VariableDeclaration","scope":4233,"src":"11228:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4063,"name":"bool","nodeType":"ElementaryTypeName","src":"11228:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4065,"nodeType":"VariableDeclarationStatement","src":"11228:19:15"},{"assignments":[4067],"declarations":[{"constant":false,"id":4067,"mutability":"mutable","name":"failureReason","nameLocation":"11271:13:15","nodeType":"VariableDeclaration","scope":4233,"src":"11257:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4066,"name":"string","nodeType":"ElementaryTypeName","src":"11257:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4068,"nodeType":"VariableDeclarationStatement","src":"11257:27:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4069,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"11299:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11316:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11308:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4070,"name":"address","nodeType":"ElementaryTypeName","src":"11308:7:15","typeDescriptions":{}}},"id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11308:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11299:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4145,"nodeType":"Block","src":"11988:116:15","statements":[{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4134,"name":"paymentSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"12003:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4135,"name":"failureReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"12019:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4136,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"12002:31:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_string_memory_ptr_$","typeString":"tuple(bool,string memory)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4138,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12052:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},{"id":4139,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"12066:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4140,"name":"merchantAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"12073:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4141,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"12089:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4137,"name":"_attemptPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5040,"src":"12036:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Subscription_$3156_storage_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_string_memory_ptr_$","typeString":"function (struct SubscriptionManager.Subscription storage pointer,address,uint256,uint256) returns (bool,string memory)"}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12036:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_string_memory_ptr_$","typeString":"tuple(bool,string memory)"}},"src":"12002:91:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4144,"nodeType":"ExpressionStatement","src":"12002:91:15"}]},"id":4146,"nodeType":"IfStatement","src":"11295:809:15","trueBody":{"id":4133,"nodeType":"Block","src":"11320:662:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4075,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"11338:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4077,"indexExpression":{"id":4076,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"11350:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11338:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4078,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11368:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11381:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"11368:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11338:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4131,"nodeType":"Block","src":"11470:502:15","statements":[{"assignments":[4087,null],"declarations":[{"constant":false,"id":4087,"mutability":"mutable","name":"sentMerchant","nameLocation":"11494:12:15","nodeType":"VariableDeclaration","scope":4131,"src":"11489:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4086,"name":"bool","nodeType":"ElementaryTypeName","src":"11489:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4095,"initialValue":{"arguments":[{"hexValue":"","id":4093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11562:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":4088,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11512:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4089,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11525:8:15","memberName":"merchant","nodeType":"MemberAccess","referencedDeclaration":3136,"src":"11512:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11534:4:15","memberName":"call","nodeType":"MemberAccess","src":"11512:26:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4091,"name":"merchantAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4057,"src":"11546:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11512:49:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11512:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11488:77:15"},{"condition":{"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11587:13:15","subExpression":{"id":4096,"name":"sentMerchant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"11588:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4129,"nodeType":"Block","src":"11691:267:15","statements":[{"assignments":[4104,null],"declarations":[{"constant":false,"id":4104,"mutability":"mutable","name":"sentFee","nameLocation":"11719:7:15","nodeType":"VariableDeclaration","scope":4129,"src":"11714:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4103,"name":"bool","nodeType":"ElementaryTypeName","src":"11714:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4112,"initialValue":{"arguments":[{"hexValue":"","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11760:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":4105,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11732:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11736:6:15","memberName":"sender","nodeType":"MemberAccess","src":"11732:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11743:4:15","memberName":"call","nodeType":"MemberAccess","src":"11732:15:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4108,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"11755:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"11732:27:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11732:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"11713:50:15"},{"expression":{"arguments":[{"id":4114,"name":"sentFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4104,"src":"11793:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":4115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11802:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":4113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11785:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11785:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4117,"nodeType":"ExpressionStatement","src":"11785:39:15"},{"expression":{"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4118,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"11846:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4120,"indexExpression":{"id":4119,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"11858:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11846:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"expression":{"id":4121,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"11877:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4122,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11890:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"11877:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11846:50:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4124,"nodeType":"ExpressionStatement","src":"11846:50:15"},{"expression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4125,"name":"paymentSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"11918:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11935:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"11918:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4128,"nodeType":"ExpressionStatement","src":"11918:21:15"}]},"id":4130,"nodeType":"IfStatement","src":"11583:375:15","trueBody":{"id":4102,"nodeType":"Block","src":"11602:83:15","statements":[{"expression":{"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4098,"name":"failureReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"11624:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4d65726368616e74207472616e73666572206661696c6564","id":4099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11640:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1a6bb4f428fd5e045df0d74b1e013b7152c1b824c7e4ea5869371a5f55429a8","typeString":"literal_string \"Merchant transfer failed\""},"value":"Merchant transfer failed"},"src":"11624:42:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4101,"nodeType":"ExpressionStatement","src":"11624:42:15"}]}}]},"id":4132,"nodeType":"IfStatement","src":"11334:638:15","trueBody":{"id":4085,"nodeType":"Block","src":"11389:75:15","statements":[{"expression":{"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4081,"name":"failureReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"11407:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"496e73756666696369656e7420455448206465706f736974","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11423:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_33f804e184a0da17c26f8ef48f3373791d58eb890fec86c27ecfca4ca4bed175","typeString":"literal_string \"Insufficient ETH deposit\""},"value":"Insufficient ETH deposit"},"src":"11407:42:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4084,"nodeType":"ExpressionStatement","src":"11407:42:15"}]}}]}},{"condition":{"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12118:15:15","subExpression":{"id":4147,"name":"paymentSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4064,"src":"12119:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4184,"nodeType":"IfStatement","src":"12114:472:15","trueBody":{"id":4183,"nodeType":"Block","src":"12135:451:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4151,"name":"failureReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"12159:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12153:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4149,"name":"bytes","nodeType":"ElementaryTypeName","src":"12153:5:15","typeDescriptions":{}}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12153:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12174:6:15","memberName":"length","nodeType":"MemberAccess","src":"12153:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12184:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12153:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4161,"nodeType":"IfStatement","src":"12149:113:15","trueBody":{"id":4160,"nodeType":"Block","src":"12187:75:15","statements":[{"expression":{"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4156,"name":"failureReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"12205:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5061796d656e7420657865637574696f6e206661696c6564","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12221:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_78141f7a24c14d2054fee35b1d6937c9b3e572878b494aa3b1112ff68d00cad5","typeString":"literal_string \"Payment execution failed\""},"value":"Payment execution failed"},"src":"12205:42:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4159,"nodeType":"ExpressionStatement","src":"12205:42:15"}]}},{"eventCall":{"arguments":[{"id":4163,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"12311:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4164,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12343:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12356:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"12343:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4166,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12384:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12397:8:15","memberName":"merchant","nodeType":"MemberAccess","referencedDeclaration":3136,"src":"12384:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4168,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12423:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12436:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"12423:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4170,"name":"failureReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"12460:13:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4162,"name":"PaymentFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3306,"src":"12280:13:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes32,address,address,uint256,string memory)"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12280:207:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4172,"nodeType":"EmitStatement","src":"12275:212:15"},{"expression":{"arguments":[{"expression":{"id":4176,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12534:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12538:6:15","memberName":"sender","nodeType":"MemberAccess","src":"12534:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12546:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12553:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":4173,"name":"RELAYER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"12501:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}},"id":4175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12518:15:15","memberName":"recordExecution","nodeType":"MemberAccess","referencedDeclaration":2652,"src":"12501:32:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256) external"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12501:54:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4181,"nodeType":"ExpressionStatement","src":"12501:54:15"},{"functionReturnParameters":3906,"id":4182,"nodeType":"Return","src":"12569:7:15"}]}},{"expression":{"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12596:34:15","subExpression":{"baseExpression":{"id":4185,"name":"executedPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"12596:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4187,"indexExpression":{"id":4186,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"12613:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12596:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4189,"nodeType":"ExpressionStatement","src":"12596:34:15"},{"eventCall":{"arguments":[{"id":4191,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"12675:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4192,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12703:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12716:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"12703:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4194,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12740:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12753:8:15","memberName":"merchant","nodeType":"MemberAccess","referencedDeclaration":3136,"src":"12740:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4196,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"12775:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4197,"name":"currentPaymentNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"12794:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4198,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"12828:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4199,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12841:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"12828:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4200,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"12861:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4201,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12878:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12882:6:15","memberName":"sender","nodeType":"MemberAccess","src":"12878:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4190,"name":"PaymentExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"12646:15:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (bytes32,address,address,address,uint256,uint256,uint256,address)"}},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12646:252:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4204,"nodeType":"EmitStatement","src":"12641:257:15"},{"expression":{"arguments":[{"expression":{"id":4208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12942:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12946:6:15","memberName":"sender","nodeType":"MemberAccess","src":"12942:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12954:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4211,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"12960:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4205,"name":"RELAYER_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"12909:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_RelayerRegistry_$3115","typeString":"contract RelayerRegistry"}},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12926:15:15","memberName":"recordExecution","nodeType":"MemberAccess","referencedDeclaration":2652,"src":"12909:32:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256) external"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12909:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4213,"nodeType":"ExpressionStatement","src":"12909:55:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4214,"name":"executedPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"12979:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4216,"indexExpression":{"id":4215,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"12996:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12979:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4217,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13015:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13028:11:15","memberName":"maxPayments","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"13015:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12979:60:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4232,"nodeType":"IfStatement","src":"12975:192:15","trueBody":{"id":4231,"nodeType":"Block","src":"13041:126:15","statements":[{"expression":{"arguments":[{"id":4221,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"13077:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4220,"name":"_decrementActiveCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"13055:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13055:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4223,"nodeType":"ExpressionStatement","src":"13055:37:15"},{"expression":{"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4224,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13106:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13119:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"13106:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4227,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13128:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13147:9:15","memberName":"COMPLETED","nodeType":"MemberAccess","referencedDeclaration":3131,"src":"13128:28:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"13106:50:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"id":4230,"nodeType":"ExpressionStatement","src":"13106:50:15"}]}}]},"functionSelector":"69e1fd9a","id":4234,"implemented":true,"kind":"function","modifiers":[{"id":3905,"kind":"modifierInvocation","modifierName":{"id":3904,"name":"nonReentrant","nameLocations":["9489:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1520,"src":"9489:12:15"},"nodeType":"ModifierInvocation","src":"9489:12:15"}],"name":"executeSubscription","nameLocation":"9419:19:15","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"subscriptionId","nameLocation":"9447:14:15","nodeType":"VariableDeclaration","scope":4234,"src":"9439:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9439:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"relayer","nameLocation":"9471:7:15","nodeType":"VariableDeclaration","scope":4234,"src":"9463:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3901,"name":"address","nodeType":"ElementaryTypeName","src":"9463:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9438:41:15"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[],"src":"9502:0:15"},"scope":5149,"src":"9410:3763:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4310,"nodeType":"Block","src":"13265:612:15","statements":[{"assignments":[4243],"declarations":[{"constant":false,"id":4243,"mutability":"mutable","name":"subscription","nameLocation":"13296:12:15","nodeType":"VariableDeclaration","scope":4310,"src":"13275:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":4242,"nodeType":"UserDefinedTypeName","pathNode":{"id":4241,"name":"Subscription","nameLocations":["13275:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"13275:12:15"},"referencedDeclaration":3156,"src":"13275:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"id":4247,"initialValue":{"baseExpression":{"id":4244,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"13311:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":4246,"indexExpression":{"id":4245,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"13325:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13311:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13275:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4249,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"13358:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13371:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"13358:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13393:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13385:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4251,"name":"address","nodeType":"ElementaryTypeName","src":"13385:7:15","typeDescriptions":{}}},"id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13385:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13358:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e20646f6573206e6f74206578697374","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13397:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""},"value":"Subscription does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""}],"id":4248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13350:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13350:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4258,"nodeType":"ExpressionStatement","src":"13350:77:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4260,"name":"subscriptionToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"13445:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":4262,"indexExpression":{"id":4261,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"13463:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13445:33:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13490:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13482:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4263,"name":"address","nodeType":"ElementaryTypeName","src":"13482:7:15","typeDescriptions":{}}},"id":4266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13482:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13445:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742045544820737562736372697074696f6e","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13494:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae848059ddba56c2aa7aec80121b4644c66ae80359eff90e5bbcc7eb87f14421","typeString":"literal_string \"Not ETH subscription\""},"value":"Not ETH subscription"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae848059ddba56c2aa7aec80121b4644c66ae80359eff90e5bbcc7eb87f14421","typeString":"literal_string \"Not ETH subscription\""}],"id":4259,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13437:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13437:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4270,"nodeType":"ExpressionStatement","src":"13437:80:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4272,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"13535:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13548:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"13535:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13562:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13566:6:15","memberName":"sender","nodeType":"MemberAccess","src":"13562:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13535:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792073756273637269626572","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13574:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b83302fa2a779fa292322f11e223ce66e7edafebaa42f45006620b54e43489c","typeString":"literal_string \"Only subscriber\""},"value":"Only subscriber"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b83302fa2a779fa292322f11e223ce66e7edafebaa42f45006620b54e43489c","typeString":"literal_string \"Only subscriber\""}],"id":4271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13527:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13527:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4279,"nodeType":"ExpressionStatement","src":"13527:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4281,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"13623:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13636:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"13623:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4283,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13646:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13665:6:15","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"13646:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"13623:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4286,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"13675:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13688:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"13675:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4288,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"13698:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13717:6:15","memberName":"PAUSED","nodeType":"MemberAccess","referencedDeclaration":3128,"src":"13698:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"13675:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13623:100:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e206e6f7420616374697665","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13737:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_be76c7fd3a460170820c205cea393e976262370f38f98c02bce973092d6b1607","typeString":"literal_string \"Subscription not active\""},"value":"Subscription not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be76c7fd3a460170820c205cea393e976262370f38f98c02bce973092d6b1607","typeString":"literal_string \"Subscription not active\""}],"id":4280,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13602:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13602:170:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4294,"nodeType":"ExpressionStatement","src":"13602:170:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4296,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13790:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13794:5:15","memberName":"value","nodeType":"MemberAccess","src":"13790:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13802:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13790:13:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f204554482073656e74","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13805:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9907d468041d2c10a4aaa7928e98f22a33770887781c7501fb173d8346a3197d","typeString":"literal_string \"No ETH sent\""},"value":"No ETH sent"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9907d468041d2c10a4aaa7928e98f22a33770887781c7501fb173d8346a3197d","typeString":"literal_string \"No ETH sent\""}],"id":4295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13782:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13782:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4302,"nodeType":"ExpressionStatement","src":"13782:37:15"},{"expression":{"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4303,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"13830:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4305,"indexExpression":{"id":4304,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"13842:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13830:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4306,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13861:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13865:5:15","memberName":"value","nodeType":"MemberAccess","src":"13861:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13830:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4309,"nodeType":"ExpressionStatement","src":"13830:40:15"}]},"functionSelector":"7f4a7fd0","id":4311,"implemented":true,"kind":"function","modifiers":[{"id":4239,"kind":"modifierInvocation","modifierName":{"id":4238,"name":"nonReentrant","nameLocations":["13252:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1520,"src":"13252:12:15"},"nodeType":"ModifierInvocation","src":"13252:12:15"}],"name":"depositForSubscription","nameLocation":"13188:22:15","nodeType":"FunctionDefinition","parameters":{"id":4237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"subscriptionId","nameLocation":"13219:14:15","nodeType":"VariableDeclaration","scope":4311,"src":"13211:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13211:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13210:24:15"},"returnParameters":{"id":4240,"nodeType":"ParameterList","parameters":[],"src":"13265:0:15"},"scope":5149,"src":"13179:698:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4412,"nodeType":"Block","src":"13956:860:15","statements":[{"assignments":[4320],"declarations":[{"constant":false,"id":4320,"mutability":"mutable","name":"subscription","nameLocation":"13987:12:15","nodeType":"VariableDeclaration","scope":4412,"src":"13966:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":4319,"nodeType":"UserDefinedTypeName","pathNode":{"id":4318,"name":"Subscription","nameLocations":["13966:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"13966:12:15"},"referencedDeclaration":3156,"src":"13966:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"id":4324,"initialValue":{"baseExpression":{"id":4321,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"14002:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":4323,"indexExpression":{"id":4322,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"14016:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14002:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13966:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4326,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"14049:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14062:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"14049:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14084:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14076:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4328,"name":"address","nodeType":"ElementaryTypeName","src":"14076:7:15","typeDescriptions":{}}},"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14076:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14049:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e20646f6573206e6f74206578697374","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14088:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""},"value":"Subscription does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""}],"id":4325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14041:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14041:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4335,"nodeType":"ExpressionStatement","src":"14041:77:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4337,"name":"subscriptionToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"14136:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":4339,"indexExpression":{"id":4338,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"14154:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14136:33:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14181:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14173:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4340,"name":"address","nodeType":"ElementaryTypeName","src":"14173:7:15","typeDescriptions":{}}},"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14173:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14136:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f742045544820737562736372697074696f6e","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14185:22:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae848059ddba56c2aa7aec80121b4644c66ae80359eff90e5bbcc7eb87f14421","typeString":"literal_string \"Not ETH subscription\""},"value":"Not ETH subscription"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae848059ddba56c2aa7aec80121b4644c66ae80359eff90e5bbcc7eb87f14421","typeString":"literal_string \"Not ETH subscription\""}],"id":4336,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14128:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14128:80:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4347,"nodeType":"ExpressionStatement","src":"14128:80:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4349,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"14226:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14239:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"14226:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14253:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14257:6:15","memberName":"sender","nodeType":"MemberAccess","src":"14253:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14226:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792073756273637269626572","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14265:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b83302fa2a779fa292322f11e223ce66e7edafebaa42f45006620b54e43489c","typeString":"literal_string \"Only subscriber\""},"value":"Only subscriber"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b83302fa2a779fa292322f11e223ce66e7edafebaa42f45006620b54e43489c","typeString":"literal_string \"Only subscriber\""}],"id":4348,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14218:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4356,"nodeType":"ExpressionStatement","src":"14218:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4358,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"14314:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4359,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14327:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"14314:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4360,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"14337:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14356:9:15","memberName":"CANCELLED","nodeType":"MemberAccess","referencedDeclaration":3129,"src":"14337:28:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"14314:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4363,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"14385:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14398:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"14385:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4365,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"14408:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14427:7:15","memberName":"EXPIRED","nodeType":"MemberAccess","referencedDeclaration":3130,"src":"14408:26:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"14385:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14314:120:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4369,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4320,"src":"14454:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4370,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14467:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"14454:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4371,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"14477:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14496:9:15","memberName":"COMPLETED","nodeType":"MemberAccess","referencedDeclaration":3131,"src":"14477:28:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"14454:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14314:191:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e207374696c6c20616374697665","id":4375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14519:27:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_987ec8613b495c10e6b787a9057ac618db1400e57bda8ce458a352c99127e3bd","typeString":"literal_string \"Subscription still active\""},"value":"Subscription still active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_987ec8613b495c10e6b787a9057ac618db1400e57bda8ce458a352c99127e3bd","typeString":"literal_string \"Subscription still active\""}],"id":4357,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14293:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14293:263:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4377,"nodeType":"ExpressionStatement","src":"14293:263:15"},{"assignments":[4379],"declarations":[{"constant":false,"id":4379,"mutability":"mutable","name":"balance","nameLocation":"14575:7:15","nodeType":"VariableDeclaration","scope":4412,"src":"14567:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"14567:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4383,"initialValue":{"baseExpression":{"id":4380,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14585:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4382,"indexExpression":{"id":4381,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"14597:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14585:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14567:45:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4385,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"14630:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14640:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14630:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2045544820746f207769746864726177","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14643:20:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95","typeString":"literal_string \"No ETH to withdraw\""},"value":"No ETH to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95","typeString":"literal_string \"No ETH to withdraw\""}],"id":4384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14622:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14622:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4390,"nodeType":"ExpressionStatement","src":"14622:42:15"},{"expression":{"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4391,"name":"ethDeposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"14674:11:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4393,"indexExpression":{"id":4392,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4313,"src":"14686:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14674:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14704:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14674:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4396,"nodeType":"ExpressionStatement","src":"14674:31:15"},{"assignments":[4398,null],"declarations":[{"constant":false,"id":4398,"mutability":"mutable","name":"sent","nameLocation":"14722:4:15","nodeType":"VariableDeclaration","scope":4412,"src":"14717:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4397,"name":"bool","nodeType":"ElementaryTypeName","src":"14717:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4406,"initialValue":{"arguments":[{"hexValue":"","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14764:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":4399,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14732:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14736:6:15","memberName":"sender","nodeType":"MemberAccess","src":"14732:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14743:4:15","memberName":"call","nodeType":"MemberAccess","src":"14732:15:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4402,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4379,"src":"14755:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"14732:31:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14732:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"14716:51:15"},{"expression":{"arguments":[{"id":4408,"name":"sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4398,"src":"14785:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177206661696c6564","id":4409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14791:17:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925","typeString":"literal_string \"Withdraw failed\""},"value":"Withdraw failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925","typeString":"literal_string \"Withdraw failed\""}],"id":4407,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14777:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14777:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4411,"nodeType":"ExpressionStatement","src":"14777:32:15"}]},"functionSelector":"4e504922","id":4413,"implemented":true,"kind":"function","modifiers":[{"id":4316,"kind":"modifierInvocation","modifierName":{"id":4315,"name":"nonReentrant","nameLocations":["13943:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":1520,"src":"13943:12:15"},"nodeType":"ModifierInvocation","src":"13943:12:15"}],"name":"withdrawUnusedETH","nameLocation":"13892:17:15","nodeType":"FunctionDefinition","parameters":{"id":4314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4313,"mutability":"mutable","name":"subscriptionId","nameLocation":"13918:14:15","nodeType":"VariableDeclaration","scope":4413,"src":"13910:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4312,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13910:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13909:24:15"},"returnParameters":{"id":4317,"nodeType":"ParameterList","parameters":[],"src":"13956:0:15"},"scope":5149,"src":"13883:933:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4508,"nodeType":"Block","src":"14908:855:15","statements":[{"assignments":[4422],"declarations":[{"constant":false,"id":4422,"mutability":"mutable","name":"subscription","nameLocation":"14939:12:15","nodeType":"VariableDeclaration","scope":4508,"src":"14918:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":4421,"nodeType":"UserDefinedTypeName","pathNode":{"id":4420,"name":"Subscription","nameLocations":["14918:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"14918:12:15"},"referencedDeclaration":3156,"src":"14918:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"id":4426,"initialValue":{"baseExpression":{"id":4423,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"14954:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":4425,"indexExpression":{"id":4424,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"14968:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14954:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14918:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4428,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"15002:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15015:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"15002:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15037:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15029:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4430,"name":"address","nodeType":"ElementaryTypeName","src":"15029:7:15","typeDescriptions":{}}},"id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15029:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15002:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e20646f6573206e6f74206578697374","id":4435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15041:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""},"value":"Subscription does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""}],"id":4427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14994:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14994:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4437,"nodeType":"ExpressionStatement","src":"14994:77:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4439,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"15089:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15102:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"15089:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4441,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"15112:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15131:6:15","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"15112:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"15089:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e206e6f7420616374697665","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15139:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_be76c7fd3a460170820c205cea393e976262370f38f98c02bce973092d6b1607","typeString":"literal_string \"Subscription not active\""},"value":"Subscription not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_be76c7fd3a460170820c205cea393e976262370f38f98c02bce973092d6b1607","typeString":"literal_string \"Subscription not active\""}],"id":4438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15081:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15081:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4446,"nodeType":"ExpressionStatement","src":"15081:84:15"},{"assignments":[4448],"declarations":[{"constant":false,"id":4448,"mutability":"mutable","name":"structHash","nameLocation":"15184:10:15","nodeType":"VariableDeclaration","scope":4508,"src":"15176:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15176:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4460,"initialValue":{"arguments":[{"arguments":[{"id":4452,"name":"PAUSE_REQUEST_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"15231:22:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4453,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"15255:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4454,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"15271:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4457,"indexExpression":{"expression":{"id":4455,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"15284:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4456,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15297:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"15284:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15271:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4450,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15220:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15224:6:15","memberName":"encode","nodeType":"MemberAccess","src":"15220:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15220:89:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4449,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15197:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15197:122:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15176:143:15"},{"assignments":[4462],"declarations":[{"constant":false,"id":4462,"mutability":"mutable","name":"digest","nameLocation":"15337:6:15","nodeType":"VariableDeclaration","scope":4508,"src":"15329:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15329:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4472,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":4466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15386:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":4467,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"15398:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15398:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4469,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"15420:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4464,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"15369:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15373:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"15369:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15369:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4463,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"15346:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15346:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"15329:112:15"},{"assignments":[4474],"declarations":[{"constant":false,"id":4474,"mutability":"mutable","name":"signer","nameLocation":"15459:6:15","nodeType":"VariableDeclaration","scope":4508,"src":"15451:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4473,"name":"address","nodeType":"ElementaryTypeName","src":"15451:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4480,"initialValue":{"arguments":[{"id":4477,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"15482:6:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4478,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"15490:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4475,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"15468:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1904_$","typeString":"type(library ECDSA)"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15474:7:15","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"15468:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15468:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15451:49:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4482,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"15518:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4483,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"15528:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4484,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15541:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"15528:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15518:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15553:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":4481,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15510:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15510:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4488,"nodeType":"ExpressionStatement","src":"15510:63:15"},{"expression":{"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15584:39:15","subExpression":{"baseExpression":{"id":4489,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"15584:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4492,"indexExpression":{"expression":{"id":4490,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"15597:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4491,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15610:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"15597:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15584:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4494,"nodeType":"ExpressionStatement","src":"15584:39:15"},{"expression":{"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4495,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"15634:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4497,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"15647:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"15634:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4498,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"15656:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15675:6:15","memberName":"PAUSED","nodeType":"MemberAccess","referencedDeclaration":3128,"src":"15656:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"15634:47:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"id":4501,"nodeType":"ExpressionStatement","src":"15634:47:15"},{"eventCall":{"arguments":[{"id":4503,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"15716:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4504,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"15732:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15745:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"15732:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4502,"name":"SubscriptionPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"15697:18:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15697:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4507,"nodeType":"EmitStatement","src":"15692:64:15"}]},"functionSelector":"6c00f051","id":4509,"implemented":true,"kind":"function","modifiers":[],"name":"pauseSubscription","nameLocation":"14831:17:15","nodeType":"FunctionDefinition","parameters":{"id":4418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4415,"mutability":"mutable","name":"subscriptionId","nameLocation":"14857:14:15","nodeType":"VariableDeclaration","scope":4509,"src":"14849:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14849:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4417,"mutability":"mutable","name":"signature","nameLocation":"14888:9:15","nodeType":"VariableDeclaration","scope":4509,"src":"14873:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4416,"name":"bytes","nodeType":"ElementaryTypeName","src":"14873:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14848:50:15"},"returnParameters":{"id":4419,"nodeType":"ParameterList","parameters":[],"src":"14908:0:15"},"scope":5149,"src":"14822:941:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4604,"nodeType":"Block","src":"15856:857:15","statements":[{"assignments":[4518],"declarations":[{"constant":false,"id":4518,"mutability":"mutable","name":"subscription","nameLocation":"15887:12:15","nodeType":"VariableDeclaration","scope":4604,"src":"15866:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":4517,"nodeType":"UserDefinedTypeName","pathNode":{"id":4516,"name":"Subscription","nameLocations":["15866:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"15866:12:15"},"referencedDeclaration":3156,"src":"15866:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"id":4522,"initialValue":{"baseExpression":{"id":4519,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"15902:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":4521,"indexExpression":{"id":4520,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"15916:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15902:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15866:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4524,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"15950:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15963:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"15950:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15985:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15977:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4526,"name":"address","nodeType":"ElementaryTypeName","src":"15977:7:15","typeDescriptions":{}}},"id":4529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15977:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15950:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e20646f6573206e6f74206578697374","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15989:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""},"value":"Subscription does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""}],"id":4523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15942:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15942:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4533,"nodeType":"ExpressionStatement","src":"15942:77:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4535,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"16037:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16050:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"16037:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4537,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"16060:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16079:6:15","memberName":"PAUSED","nodeType":"MemberAccess","referencedDeclaration":3128,"src":"16060:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"16037:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e206e6f7420706175736564","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16087:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f44622661c110ac77396eb508a999aa7cb05b25b5c3716afe1efc5ed2395632","typeString":"literal_string \"Subscription not paused\""},"value":"Subscription not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f44622661c110ac77396eb508a999aa7cb05b25b5c3716afe1efc5ed2395632","typeString":"literal_string \"Subscription not paused\""}],"id":4534,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16029:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4542,"nodeType":"ExpressionStatement","src":"16029:84:15"},{"assignments":[4544],"declarations":[{"constant":false,"id":4544,"mutability":"mutable","name":"structHash","nameLocation":"16132:10:15","nodeType":"VariableDeclaration","scope":4604,"src":"16124:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16124:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4556,"initialValue":{"arguments":[{"arguments":[{"id":4548,"name":"RESUME_REQUEST_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"16179:23:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4549,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"16204:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":4550,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"16220:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4553,"indexExpression":{"expression":{"id":4551,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"16233:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4552,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16246:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"16233:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16220:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4546,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16168:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16172:6:15","memberName":"encode","nodeType":"MemberAccess","src":"16168:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16168:90:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4545,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16145:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16145:123:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"16124:144:15"},{"assignments":[4558],"declarations":[{"constant":false,"id":4558,"mutability":"mutable","name":"digest","nameLocation":"16286:6:15","nodeType":"VariableDeclaration","scope":4604,"src":"16278:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16278:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4568,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":4562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16335:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"arguments":[],"expression":{"argumentTypes":[],"id":4563,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4716,"src":"16347:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16347:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4565,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"16369:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":4560,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16318:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16322:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"16318:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16318:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4559,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"16295:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16295:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"16278:112:15"},{"assignments":[4570],"declarations":[{"constant":false,"id":4570,"mutability":"mutable","name":"signer","nameLocation":"16408:6:15","nodeType":"VariableDeclaration","scope":4604,"src":"16400:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4569,"name":"address","nodeType":"ElementaryTypeName","src":"16400:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4576,"initialValue":{"arguments":[{"id":4573,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4558,"src":"16431:6:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4574,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4513,"src":"16439:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4571,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"16417:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$1904_$","typeString":"type(library ECDSA)"}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16423:7:15","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":1660,"src":"16417:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16417:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16400:49:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4578,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"16467:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4579,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"16477:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16490:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"16477:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16467:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16502:19:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":4577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16459:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16459:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4584,"nodeType":"ExpressionStatement","src":"16459:63:15"},{"expression":{"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16533:39:15","subExpression":{"baseExpression":{"id":4585,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3190,"src":"16533:12:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":4588,"indexExpression":{"expression":{"id":4586,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"16546:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16559:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"16546:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16533:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4590,"nodeType":"ExpressionStatement","src":"16533:39:15"},{"expression":{"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4591,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"16583:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16596:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"16583:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4594,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"16605:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16624:6:15","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"16605:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"16583:47:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"id":4597,"nodeType":"ExpressionStatement","src":"16583:47:15"},{"eventCall":{"arguments":[{"id":4599,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"16666:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4600,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4518,"src":"16682:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16695:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"16682:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4598,"name":"SubscriptionResumed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"16646:19:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16646:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4603,"nodeType":"EmitStatement","src":"16641:65:15"}]},"functionSelector":"77bef003","id":4605,"implemented":true,"kind":"function","modifiers":[],"name":"resumeSubscription","nameLocation":"15778:18:15","nodeType":"FunctionDefinition","parameters":{"id":4514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4511,"mutability":"mutable","name":"subscriptionId","nameLocation":"15805:14:15","nodeType":"VariableDeclaration","scope":4605,"src":"15797:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15797:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4513,"mutability":"mutable","name":"signature","nameLocation":"15836:9:15","nodeType":"VariableDeclaration","scope":4605,"src":"15821:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4512,"name":"bytes","nodeType":"ElementaryTypeName","src":"15821:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15796:50:15"},"returnParameters":{"id":4515,"nodeType":"ParameterList","parameters":[],"src":"15856:0:15"},"scope":5149,"src":"15769:944:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4671,"nodeType":"Block","src":"16780:654:15","statements":[{"assignments":[4612],"declarations":[{"constant":false,"id":4612,"mutability":"mutable","name":"subscription","nameLocation":"16811:12:15","nodeType":"VariableDeclaration","scope":4671,"src":"16790:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":4611,"nodeType":"UserDefinedTypeName","pathNode":{"id":4610,"name":"Subscription","nameLocations":["16790:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"16790:12:15"},"referencedDeclaration":3156,"src":"16790:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"id":4616,"initialValue":{"baseExpression":{"id":4613,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"16826:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":4615,"indexExpression":{"id":4614,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"16840:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16826:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16790:65:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4618,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"16874:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16887:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"16874:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16909:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16901:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4620,"name":"address","nodeType":"ElementaryTypeName","src":"16901:7:15","typeDescriptions":{}}},"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16901:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16874:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e20646f6573206e6f74206578697374","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16913:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""},"value":"Subscription does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ea8c3a2126f8291e7f4f230e30c20ec183d8d0cdfab1f0cc07175281cfdc05c","typeString":"literal_string \"Subscription does not exist\""}],"id":4617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16866:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16866:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4627,"nodeType":"ExpressionStatement","src":"16866:77:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4629,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16961:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16965:6:15","memberName":"sender","nodeType":"MemberAccess","src":"16961:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4631,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"16975:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16988:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"16975:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16961:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920737562736372696265722063616e2063616e63656c","id":4634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17000:28:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_105c9859ab8f90f317032d2b34c49114ac5f96ec6f5c796a0e41caaa2567194a","typeString":"literal_string \"Only subscriber can cancel\""},"value":"Only subscriber can cancel"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_105c9859ab8f90f317032d2b34c49114ac5f96ec6f5c796a0e41caaa2567194a","typeString":"literal_string \"Only subscriber can cancel\""}],"id":4628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16953:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16953:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4636,"nodeType":"ExpressionStatement","src":"16953:76:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4638,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"17060:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17073:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"17060:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4640,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"17083:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17102:6:15","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":3127,"src":"17083:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"17060:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4643,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"17112:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17125:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"17112:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4645,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"17135:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17154:6:15","memberName":"PAUSED","nodeType":"MemberAccess","referencedDeclaration":3128,"src":"17135:25:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"17112:48:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"17060:100:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e2063616e6e6f742062652063616e63656c6c6564","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17174:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ccba4b6c817c643855ed23264a6c28950fc3d1524a0f43483fe4401854b09881","typeString":"literal_string \"Subscription cannot be cancelled\""},"value":"Subscription cannot be cancelled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccba4b6c817c643855ed23264a6c28950fc3d1524a0f43483fe4401854b09881","typeString":"literal_string \"Subscription cannot be cancelled\""}],"id":4637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17039:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17039:179:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4651,"nodeType":"ExpressionStatement","src":"17039:179:15"},{"expression":{"arguments":[{"id":4653,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"17251:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4652,"name":"_decrementActiveCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"17229:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17229:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4655,"nodeType":"ExpressionStatement","src":"17229:37:15"},{"expression":{"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4656,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"17276:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"17289:6:15","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3155,"src":"17276:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4659,"name":"SubscriptionStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"17298:18:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_SubscriptionStatus_$3132_$","typeString":"type(enum SubscriptionManager.SubscriptionStatus)"}},"id":4660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17317:9:15","memberName":"CANCELLED","nodeType":"MemberAccess","referencedDeclaration":3129,"src":"17298:28:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"src":"17276:50:15","typeDescriptions":{"typeIdentifier":"t_enum$_SubscriptionStatus_$3132","typeString":"enum SubscriptionManager.SubscriptionStatus"}},"id":4662,"nodeType":"ExpressionStatement","src":"17276:50:15"},{"eventCall":{"arguments":[{"id":4664,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4607,"src":"17364:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4665,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"17380:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17393:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"17380:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4667,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"17405:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17418:8:15","memberName":"merchant","nodeType":"MemberAccess","referencedDeclaration":3136,"src":"17405:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4663,"name":"SubscriptionCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"17342:21:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17342:85:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4670,"nodeType":"EmitStatement","src":"17337:90:15"}]},"functionSelector":"d21f1ffc","id":4672,"implemented":true,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"16728:18:15","nodeType":"FunctionDefinition","parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4607,"mutability":"mutable","name":"subscriptionId","nameLocation":"16755:14:15","nodeType":"VariableDeclaration","scope":4672,"src":"16747:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16747:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16746:24:15"},"returnParameters":{"id":4609,"nodeType":"ParameterList","parameters":[],"src":"16780:0:15"},"scope":5149,"src":"16719:715:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4707,"nodeType":"Block","src":"17527:459:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":4683,"name":"SUBSCRIPTION_INTENT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"17595:28:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4684,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"17641:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent memory"}},"id":4685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17648:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3158,"src":"17641:17:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4686,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"17676:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent memory"}},"id":4687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17683:8:15","memberName":"merchant","nodeType":"MemberAccess","referencedDeclaration":3160,"src":"17676:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4688,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"17709:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent memory"}},"id":4689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17716:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3162,"src":"17709:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4690,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"17740:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent memory"}},"id":4691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17747:8:15","memberName":"interval","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"17740:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4692,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"17773:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent memory"}},"id":4693,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17780:9:15","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":3166,"src":"17773:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4694,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"17807:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent memory"}},"id":4695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17814:11:15","memberName":"maxPayments","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"17807:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4696,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"17843:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent memory"}},"id":4697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17850:14:15","memberName":"maxTotalAmount","nodeType":"MemberAccess","referencedDeclaration":3170,"src":"17843:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4698,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"17882:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent memory"}},"id":4699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17889:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":3172,"src":"17882:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4700,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"17913:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent memory"}},"id":4701,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17920:5:15","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":3174,"src":"17913:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4702,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"17943:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent memory"}},"id":4703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17950:5:15","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":3176,"src":"17943:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4681,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17567:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17571:6:15","memberName":"encode","nodeType":"MemberAccess","src":"17567:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17567:402:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4680,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"17544:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17544:435:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4679,"id":4706,"nodeType":"Return","src":"17537:442:15"}]},"id":4708,"implemented":true,"kind":"function","modifiers":[],"name":"_hashIntent","nameLocation":"17449:11:15","nodeType":"FunctionDefinition","parameters":{"id":4676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4675,"mutability":"mutable","name":"intent","nameLocation":"17487:6:15","nodeType":"VariableDeclaration","scope":4708,"src":"17461:32:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_memory_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent"},"typeName":{"id":4674,"nodeType":"UserDefinedTypeName","pathNode":{"id":4673,"name":"SubscriptionIntent","nameLocations":["17461:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"17461:18:15"},"referencedDeclaration":3177,"src":"17461:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_storage_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent"}},"visibility":"internal"}],"src":"17460:34:15"},"returnParameters":{"id":4679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4708,"src":"17518:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4677,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17518:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17517:9:15"},"scope":5149,"src":"17440:546:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4715,"nodeType":"Block","src":"18054:40:15","statements":[{"expression":{"id":4713,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"18071:16:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4712,"id":4714,"nodeType":"Return","src":"18064:23:15"}]},"id":4716,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"18001:18:15","nodeType":"FunctionDefinition","parameters":{"id":4709,"nodeType":"ParameterList","parameters":[],"src":"18019:2:15"},"returnParameters":{"id":4712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4716,"src":"18045:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18045:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18044:9:15"},"scope":5149,"src":"17992:102:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4752,"nodeType":"Block","src":"18176:305:15","statements":[{"assignments":[4725],"declarations":[{"constant":false,"id":4725,"mutability":"mutable","name":"subscription","nameLocation":"18207:12:15","nodeType":"VariableDeclaration","scope":4752,"src":"18186:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":4724,"nodeType":"UserDefinedTypeName","pathNode":{"id":4723,"name":"Subscription","nameLocations":["18186:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"18186:12:15"},"referencedDeclaration":3156,"src":"18186:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"id":4729,"initialValue":{"baseExpression":{"id":4726,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"18222:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":4728,"indexExpression":{"id":4727,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18236:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18222:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18186:65:15"},{"assignments":[4731],"declarations":[{"constant":false,"id":4731,"mutability":"mutable","name":"paymentsExecuted","nameLocation":"18269:16:15","nodeType":"VariableDeclaration","scope":4752,"src":"18261:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"18261:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4735,"initialValue":{"baseExpression":{"id":4732,"name":"executedPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"18288:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4734,"indexExpression":{"id":4733,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4718,"src":"18305:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18288:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18261:59:15"},{"assignments":[4737],"declarations":[{"constant":false,"id":4737,"mutability":"mutable","name":"nextPaymentTime","nameLocation":"18338:15:15","nodeType":"VariableDeclaration","scope":4752,"src":"18330:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4736,"name":"uint256","nodeType":"ElementaryTypeName","src":"18330:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4746,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4738,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"18356:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18369:9:15","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":3142,"src":"18356:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4740,"name":"paymentsExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"18382:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4741,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"18401:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18414:8:15","memberName":"interval","nodeType":"MemberAccess","referencedDeclaration":3140,"src":"18401:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18382:40:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18381:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18356:67:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18330:93:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4747,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18440:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18446:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"18440:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4749,"name":"nextPaymentTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"18459:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18440:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4722,"id":4751,"nodeType":"Return","src":"18433:41:15"}]},"id":4753,"implemented":true,"kind":"function","modifiers":[],"name":"_isPaymentDue","nameLocation":"18109:13:15","nodeType":"FunctionDefinition","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4718,"mutability":"mutable","name":"subscriptionId","nameLocation":"18131:14:15","nodeType":"VariableDeclaration","scope":4753,"src":"18123:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18123:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18122:24:15"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4753,"src":"18170:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4720,"name":"bool","nodeType":"ElementaryTypeName","src":"18170:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18169:6:15"},"scope":5149,"src":"18100:381:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4851,"nodeType":"Block","src":"18583:879:15","statements":[{"assignments":[4764],"declarations":[{"constant":false,"id":4764,"mutability":"mutable","name":"subscription","nameLocation":"18614:12:15","nodeType":"VariableDeclaration","scope":4851,"src":"18593:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":4763,"nodeType":"UserDefinedTypeName","pathNode":{"id":4762,"name":"Subscription","nameLocations":["18593:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"18593:12:15"},"referencedDeclaration":3156,"src":"18593:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"}],"id":4768,"initialValue":{"baseExpression":{"id":4765,"name":"subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"18629:13:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Subscription_$3156_storage_$","typeString":"mapping(bytes32 => struct SubscriptionManager.Subscription storage ref)"}},"id":4767,"indexExpression":{"id":4766,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"18643:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18629:29:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage","typeString":"struct SubscriptionManager.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"18593:65:15"},{"assignments":[4770],"declarations":[{"constant":false,"id":4770,"mutability":"mutable","name":"paymentsExecuted","nameLocation":"18676:16:15","nodeType":"VariableDeclaration","scope":4851,"src":"18668:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4769,"name":"uint256","nodeType":"ElementaryTypeName","src":"18668:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4774,"initialValue":{"baseExpression":{"id":4771,"name":"executedPayments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"18695:16:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":4773,"indexExpression":{"id":4772,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"18712:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18695:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18668:59:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4775,"name":"paymentsExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"18742:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":4776,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"18762:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4777,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18775:11:15","memberName":"maxPayments","nodeType":"MemberAccess","referencedDeclaration":3144,"src":"18762:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18742:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4782,"nodeType":"IfStatement","src":"18738:87:15","trueBody":{"id":4781,"nodeType":"Block","src":"18788:37:15","statements":[{"expression":{"hexValue":"66616c7365","id":4779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18809:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4761,"id":4780,"nodeType":"Return","src":"18802:12:15"}]}},{"assignments":[4784],"declarations":[{"constant":false,"id":4784,"mutability":"mutable","name":"totalPaidSoFar","nameLocation":"18843:14:15","nodeType":"VariableDeclaration","scope":4851,"src":"18835:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"18835:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4789,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4785,"name":"paymentsExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4770,"src":"18860:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4786,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"18879:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18892:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"18879:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18860:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18835:63:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4790,"name":"totalPaidSoFar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4784,"src":"18912:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":4791,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"18929:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18942:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"18929:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18912:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4794,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"18951:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18964:14:15","memberName":"maxTotalAmount","nodeType":"MemberAccess","referencedDeclaration":3146,"src":"18951:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18912:66:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4800,"nodeType":"IfStatement","src":"18908:109:15","trueBody":{"id":4799,"nodeType":"Block","src":"18980:37:15","statements":[{"expression":{"hexValue":"66616c7365","id":4797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19001:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4761,"id":4798,"nodeType":"Return","src":"18994:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4801,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"19031:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19048:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19040:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4802,"name":"address","nodeType":"ElementaryTypeName","src":"19040:7:15","typeDescriptions":{}}},"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19040:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19031:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4810,"nodeType":"IfStatement","src":"19027:61:15","trueBody":{"id":4809,"nodeType":"Block","src":"19052:36:15","statements":[{"expression":{"hexValue":"74727565","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19073:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4761,"id":4808,"nodeType":"Return","src":"19066:11:15"}]}},{"assignments":[4813],"declarations":[{"constant":false,"id":4813,"mutability":"mutable","name":"paymentToken","nameLocation":"19105:12:15","nodeType":"VariableDeclaration","scope":4851,"src":"19098:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":4812,"nodeType":"UserDefinedTypeName","pathNode":{"id":4811,"name":"IERC20","nameLocations":["19098:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"19098:6:15"},"referencedDeclaration":967,"src":"19098:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"}],"id":4817,"initialValue":{"arguments":[{"id":4815,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"19127:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4814,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"19120:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19120:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"19098:35:15"},{"assignments":[4819],"declarations":[{"constant":false,"id":4819,"mutability":"mutable","name":"totalRequired","nameLocation":"19151:13:15","nodeType":"VariableDeclaration","scope":4851,"src":"19143:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4818,"name":"uint256","nodeType":"ElementaryTypeName","src":"19143:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4822,"initialValue":{"expression":{"id":4820,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"19167:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19180:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"19167:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19143:43:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4825,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"19224:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19237:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"19224:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4823,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"19201:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19214:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"19201:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19201:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4828,"name":"totalRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"19251:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19201:63:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4833,"nodeType":"IfStatement","src":"19197:106:15","trueBody":{"id":4832,"nodeType":"Block","src":"19266:37:15","statements":[{"expression":{"hexValue":"66616c7365","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19287:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4761,"id":4831,"nodeType":"Return","src":"19280:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4836,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4764,"src":"19340:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19353:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"19340:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4840,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19373:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionManager_$5149","typeString":"contract SubscriptionManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionManager_$5149","typeString":"contract SubscriptionManager"}],"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19365:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4838,"name":"address","nodeType":"ElementaryTypeName","src":"19365:7:15","typeDescriptions":{}}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19365:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4834,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4813,"src":"19317:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19330:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"19317:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19317:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4843,"name":"totalRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"19382:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19317:78:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4848,"nodeType":"IfStatement","src":"19313:121:15","trueBody":{"id":4847,"nodeType":"Block","src":"19397:37:15","statements":[{"expression":{"hexValue":"66616c7365","id":4845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19418:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4761,"id":4846,"nodeType":"Return","src":"19411:12:15"}]}},{"expression":{"hexValue":"74727565","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19451:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4761,"id":4850,"nodeType":"Return","src":"19444:11:15"}]},"id":4852,"implemented":true,"kind":"function","modifiers":[],"name":"_canExecutePayment","nameLocation":"18496:18:15","nodeType":"FunctionDefinition","parameters":{"id":4758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4755,"mutability":"mutable","name":"subscriptionId","nameLocation":"18523:14:15","nodeType":"VariableDeclaration","scope":4852,"src":"18515:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18515:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4757,"mutability":"mutable","name":"token","nameLocation":"18547:5:15","nodeType":"VariableDeclaration","scope":4852,"src":"18539:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4756,"name":"address","nodeType":"ElementaryTypeName","src":"18539:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18514:39:15"},"returnParameters":{"id":4761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4852,"src":"18577:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4759,"name":"bool","nodeType":"ElementaryTypeName","src":"18577:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18576:6:15"},"scope":5149,"src":"18487:975:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4912,"nodeType":"Block","src":"19555:518:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4859,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"19573:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19580:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":3172,"src":"19573:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4861,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"19589:5:15","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19595:9:15","memberName":"timestamp","nodeType":"MemberAccess","src":"19589:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19573:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537562736372697074696f6e20696e74656e742065787069726564","id":4864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19606:29:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e44fe4310e274ca863c40b50796a4b85cb2fa3a7958041048ac56fdf9f1b09e","typeString":"literal_string \"Subscription intent expired\""},"value":"Subscription intent expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e44fe4310e274ca863c40b50796a4b85cb2fa3a7958041048ac56fdf9f1b09e","typeString":"literal_string \"Subscription intent expired\""}],"id":4858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19565:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19565:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4866,"nodeType":"ExpressionStatement","src":"19565:71:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4868,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"19654:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19661:9:15","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":3166,"src":"19654:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":4870,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"19674:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19681:6:15","memberName":"expiry","nodeType":"MemberAccess","referencedDeclaration":3172,"src":"19674:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19654:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746172742074696d65206d757374206265206265666f726520657870697279","id":4873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19689:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1136cea7640b7a9ac25b47e5499d259c41df4ecc697b0e5f3ade9045bdc46a6","typeString":"literal_string \"Start time must be before expiry\""},"value":"Start time must be before expiry"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e1136cea7640b7a9ac25b47e5499d259c41df4ecc697b0e5f3ade9045bdc46a6","typeString":"literal_string \"Start time must be before expiry\""}],"id":4867,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19646:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19646:78:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4875,"nodeType":"ExpressionStatement","src":"19646:78:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4877,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"19742:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19749:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3162,"src":"19742:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19742:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416d6f756e74206d7573742062652067726561746572207468616e207a65726f","id":4881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19761:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""},"value":"Amount must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887","typeString":"literal_string \"Amount must be greater than zero\""}],"id":4876,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19734:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19734:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4883,"nodeType":"ExpressionStatement","src":"19734:62:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4885,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"19814:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19821:8:15","memberName":"interval","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"19814:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19814:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e74657276616c206d7573742062652067726561746572207468616e207a65726f","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19835:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9217a3d4a5c4490401b5086467ee3afe5e86ecc37f92fee4d81a430ad9fb0613","typeString":"literal_string \"Interval must be greater than zero\""},"value":"Interval must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9217a3d4a5c4490401b5086467ee3afe5e86ecc37f92fee4d81a430ad9fb0613","typeString":"literal_string \"Interval must be greater than zero\""}],"id":4884,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19806:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19806:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4891,"nodeType":"ExpressionStatement","src":"19806:66:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4893,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"19890:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19897:11:15","memberName":"maxPayments","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"19890:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19911:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19890:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178207061796d656e7473206d7573742062652067726561746572207468616e207a65726f","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19914:40:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca98f89d596df2ac1098e8de4104b8b2a3df8f14826ef7cd1ba10b93c017e553","typeString":"literal_string \"Max payments must be greater than zero\""},"value":"Max payments must be greater than zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca98f89d596df2ac1098e8de4104b8b2a3df8f14826ef7cd1ba10b93c017e553","typeString":"literal_string \"Max payments must be greater than zero\""}],"id":4892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19882:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19882:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4899,"nodeType":"ExpressionStatement","src":"19882:73:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4901,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"19973:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19980:14:15","memberName":"maxTotalAmount","nodeType":"MemberAccess","referencedDeclaration":3170,"src":"19973:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4903,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"19998:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20005:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3162,"src":"19998:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":4905,"name":"intent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"20014:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent calldata"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20021:11:15","memberName":"maxPayments","nodeType":"MemberAccess","referencedDeclaration":3168,"src":"20014:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19998:34:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19973:59:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d617820746f74616c20616d6f756e7420696e73756666696369656e74","id":4909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20034:31:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a248a56f4269692fae76144929fade0d863f36a62cb9cc4539aa62a499820bd","typeString":"literal_string \"Max total amount insufficient\""},"value":"Max total amount insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a248a56f4269692fae76144929fade0d863f36a62cb9cc4539aa62a499820bd","typeString":"literal_string \"Max total amount insufficient\""}],"id":4900,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"19965:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19965:101:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4911,"nodeType":"ExpressionStatement","src":"19965:101:15"}]},"id":4913,"implemented":true,"kind":"function","modifiers":[],"name":"_validateSubscriptionParams","nameLocation":"19477:27:15","nodeType":"FunctionDefinition","parameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"intent","nameLocation":"19533:6:15","nodeType":"VariableDeclaration","scope":4913,"src":"19505:34:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_calldata_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent"},"typeName":{"id":4854,"nodeType":"UserDefinedTypeName","pathNode":{"id":4853,"name":"SubscriptionIntent","nameLocations":["19505:18:15"],"nodeType":"IdentifierPath","referencedDeclaration":3177,"src":"19505:18:15"},"referencedDeclaration":3177,"src":"19505:18:15","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionIntent_$3177_storage_ptr","typeString":"struct SubscriptionManager.SubscriptionIntent"}},"visibility":"internal"}],"src":"19504:36:15"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[],"src":"19555:0:15"},"scope":5149,"src":"19468:605:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":5039,"nodeType":"Block","src":"20290:1243:15","statements":[{"assignments":[4931],"declarations":[{"constant":false,"id":4931,"mutability":"mutable","name":"paymentToken","nameLocation":"20307:12:15","nodeType":"VariableDeclaration","scope":5039,"src":"20300:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"},"typeName":{"id":4930,"nodeType":"UserDefinedTypeName","pathNode":{"id":4929,"name":"IERC20","nameLocations":["20300:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":967,"src":"20300:6:15"},"referencedDeclaration":967,"src":"20300:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"visibility":"internal"}],"id":4935,"initialValue":{"arguments":[{"id":4933,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4918,"src":"20329:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4932,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"20322:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20322:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"20300:35:15"},{"assignments":[4937],"declarations":[{"constant":false,"id":4937,"mutability":"mutable","name":"totalRequired","nameLocation":"20354:13:15","nodeType":"VariableDeclaration","scope":5039,"src":"20346:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"20346:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4940,"initialValue":{"expression":{"id":4938,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"20370:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20383:6:15","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":3138,"src":"20370:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20346:43:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4943,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"20426:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20439:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"20426:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4941,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"20403:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20416:9:15","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":924,"src":"20403:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20403:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4946,"name":"totalRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"20453:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20403:63:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4953,"nodeType":"IfStatement","src":"20399:144:15","trueBody":{"id":4952,"nodeType":"Block","src":"20468:75:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20490:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"496e73756666696369656e742062616c616e636520666f72207061796d656e74","id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20497:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b681ffebf19d52c08d18725765581b173addb2d0b591b70d24b374c0edf3bb0","typeString":"literal_string \"Insufficient balance for payment\""},"value":"Insufficient balance for payment"}],"id":4950,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20489:43:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_3b681ffebf19d52c08d18725765581b173addb2d0b591b70d24b374c0edf3bb0_$","typeString":"tuple(bool,literal_string \"Insufficient balance for payment\")"}},"functionReturnParameters":4928,"id":4951,"nodeType":"Return","src":"20482:50:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":4956,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"20580:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4957,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20593:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"20580:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4960,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20613:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SubscriptionManager_$5149","typeString":"contract SubscriptionManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SubscriptionManager_$5149","typeString":"contract SubscriptionManager"}],"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20605:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4958,"name":"address","nodeType":"ElementaryTypeName","src":"20605:7:15","typeDescriptions":{}}},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20605:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4954,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"20557:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20570:9:15","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":944,"src":"20557:22:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20557:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4963,"name":"totalRequired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"20622:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20557:78:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4970,"nodeType":"IfStatement","src":"20553:161:15","trueBody":{"id":4969,"nodeType":"Block","src":"20637:77:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20659:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"496e73756666696369656e7420616c6c6f77616e636520666f72207061796d656e74","id":4966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20666:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4076d588da9f971943b74ce968627a0029ec81ae37cad227ddcf12cc4092aaf2","typeString":"literal_string \"Insufficient allowance for payment\""},"value":"Insufficient allowance for payment"}],"id":4967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"20658:45:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_4076d588da9f971943b74ce968627a0029ec81ae37cad227ddcf12cc4092aaf2_$","typeString":"tuple(bool,literal_string \"Insufficient allowance for payment\")"}},"functionReturnParameters":4928,"id":4968,"nodeType":"Return","src":"20651:52:15"}]}},{"assignments":[4972],"declarations":[{"constant":false,"id":4972,"mutability":"mutable","name":"transferData","nameLocation":"20737:12:15","nodeType":"VariableDeclaration","scope":5039,"src":"20724:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4971,"name":"bytes","nodeType":"ElementaryTypeName","src":"20724:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4984,"initialValue":{"arguments":[{"expression":{"expression":{"id":4975,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"20788:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20795:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":966,"src":"20788:19:15","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.transferFrom(address,address,uint256) returns (bool)"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20808:8:15","memberName":"selector","nodeType":"MemberAccess","src":"20788:28:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"expression":{"id":4978,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"20830:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20843:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"20830:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4980,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"20867:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":4981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20880:8:15","memberName":"merchant","nodeType":"MemberAccess","referencedDeclaration":3136,"src":"20867:21:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4982,"name":"merchantAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"20902:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4973,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20752:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20756:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"20752:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20752:174:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"20724:202:15"},{"assignments":[4986],"declarations":[{"constant":false,"id":4986,"mutability":"mutable","name":"merchantTransferSuccess","nameLocation":"20942:23:15","nodeType":"VariableDeclaration","scope":5039,"src":"20937:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4985,"name":"bool","nodeType":"ElementaryTypeName","src":"20937:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4994,"initialValue":{"arguments":[{"arguments":[{"id":4990,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"20987:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20979:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4988,"name":"address","nodeType":"ElementaryTypeName","src":"20979:7:15","typeDescriptions":{}}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20979:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4992,"name":"transferData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4972,"src":"21002:12:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4987,"name":"_callToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"20968:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes memory) returns (bool)"}},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20968:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"20937:78:15"},{"condition":{"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21029:24:15","subExpression":{"id":4995,"name":"merchantTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4986,"src":"21030:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5002,"nodeType":"IfStatement","src":"21025:97:15","trueBody":{"id":5001,"nodeType":"Block","src":"21055:67:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":4997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21077:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"4d65726368616e74207472616e73666572206661696c6564","id":4998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21084:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_e1a6bb4f428fd5e045df0d74b1e013b7152c1b824c7e4ea5869371a5f55429a8","typeString":"literal_string \"Merchant transfer failed\""},"value":"Merchant transfer failed"}],"id":4999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21076:35:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_e1a6bb4f428fd5e045df0d74b1e013b7152c1b824c7e4ea5869371a5f55429a8_$","typeString":"tuple(bool,literal_string \"Merchant transfer failed\")"}},"functionReturnParameters":4928,"id":5000,"nodeType":"Return","src":"21069:42:15"}]}},{"assignments":[5004],"declarations":[{"constant":false,"id":5004,"mutability":"mutable","name":"feeTransferData","nameLocation":"21145:15:15","nodeType":"VariableDeclaration","scope":5039,"src":"21132:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5003,"name":"bytes","nodeType":"ElementaryTypeName","src":"21132:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5016,"initialValue":{"arguments":[{"expression":{"expression":{"id":5007,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"21199:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$967_$","typeString":"type(contract IERC20)"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21206:12:15","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":966,"src":"21199:19:15","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function IERC20.transferFrom(address,address,uint256) returns (bool)"}},"id":5009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21219:8:15","memberName":"selector","nodeType":"MemberAccess","src":"21199:28:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"expression":{"id":5010,"name":"subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"21241:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription storage pointer"}},"id":5011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21254:10:15","memberName":"subscriber","nodeType":"MemberAccess","referencedDeclaration":3134,"src":"21241:23:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":5012,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21278:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21282:6:15","memberName":"sender","nodeType":"MemberAccess","src":"21278:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5014,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4922,"src":"21302:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5005,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21163:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21167:18:15","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"21163:22:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21163:152:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"21132:183:15"},{"assignments":[5018],"declarations":[{"constant":false,"id":5018,"mutability":"mutable","name":"feeTransferSuccess","nameLocation":"21331:18:15","nodeType":"VariableDeclaration","scope":5039,"src":"21326:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5017,"name":"bool","nodeType":"ElementaryTypeName","src":"21326:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5026,"initialValue":{"arguments":[{"arguments":[{"id":5022,"name":"paymentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"21371:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$967","typeString":"contract IERC20"}],"id":5021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21363:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5020,"name":"address","nodeType":"ElementaryTypeName","src":"21363:7:15","typeDescriptions":{}}},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21363:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5024,"name":"feeTransferData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5004,"src":"21386:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5019,"name":"_callToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"21352:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,bytes memory) returns (bool)"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21352:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"21326:76:15"},{"condition":{"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21416:19:15","subExpression":{"id":5027,"name":"feeTransferSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5018,"src":"21417:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5034,"nodeType":"IfStatement","src":"21412:87:15","trueBody":{"id":5033,"nodeType":"Block","src":"21437:62:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21459:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"466565207472616e73666572206661696c6564","id":5030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21466:21:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"id":5031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21458:30:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56_$","typeString":"tuple(bool,literal_string \"Fee transfer failed\")"}},"functionReturnParameters":4928,"id":5032,"nodeType":"Return","src":"21451:37:15"}]}},{"expression":{"components":[{"hexValue":"74727565","id":5035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21517:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"","id":5036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21523:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":5037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21516:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_$","typeString":"tuple(bool,literal_string \"\")"}},"functionReturnParameters":4928,"id":5038,"nodeType":"Return","src":"21509:17:15"}]},"id":5040,"implemented":true,"kind":"function","modifiers":[],"name":"_attemptPayment","nameLocation":"20088:15:15","nodeType":"FunctionDefinition","parameters":{"id":4923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4916,"mutability":"mutable","name":"subscription","nameLocation":"20134:12:15","nodeType":"VariableDeclaration","scope":5040,"src":"20113:33:15","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"},"typeName":{"id":4915,"nodeType":"UserDefinedTypeName","pathNode":{"id":4914,"name":"Subscription","nameLocations":["20113:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":3156,"src":"20113:12:15"},"referencedDeclaration":3156,"src":"20113:12:15","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$3156_storage_ptr","typeString":"struct SubscriptionManager.Subscription"}},"visibility":"internal"},{"constant":false,"id":4918,"mutability":"mutable","name":"token","nameLocation":"20164:5:15","nodeType":"VariableDeclaration","scope":5040,"src":"20156:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4917,"name":"address","nodeType":"ElementaryTypeName","src":"20156:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4920,"mutability":"mutable","name":"merchantAmount","nameLocation":"20187:14:15","nodeType":"VariableDeclaration","scope":5040,"src":"20179:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"20179:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4922,"mutability":"mutable","name":"fee","nameLocation":"20219:3:15","nodeType":"VariableDeclaration","scope":5040,"src":"20211:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4921,"name":"uint256","nodeType":"ElementaryTypeName","src":"20211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20103:125:15"},"returnParameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4925,"mutability":"mutable","name":"success","nameLocation":"20252:7:15","nodeType":"VariableDeclaration","scope":5040,"src":"20247:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4924,"name":"bool","nodeType":"ElementaryTypeName","src":"20247:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4927,"mutability":"mutable","name":"failureReason","nameLocation":"20275:13:15","nodeType":"VariableDeclaration","scope":5040,"src":"20261:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4926,"name":"string","nodeType":"ElementaryTypeName","src":"20261:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20246:43:15"},"scope":5149,"src":"20079:1454:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5080,"nodeType":"Block","src":"21617:255:15","statements":[{"assignments":[5050,5052],"declarations":[{"constant":false,"id":5050,"mutability":"mutable","name":"success","nameLocation":"21633:7:15","nodeType":"VariableDeclaration","scope":5080,"src":"21628:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5049,"name":"bool","nodeType":"ElementaryTypeName","src":"21628:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5052,"mutability":"mutable","name":"returndata","nameLocation":"21655:10:15","nodeType":"VariableDeclaration","scope":5080,"src":"21642:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5051,"name":"bytes","nodeType":"ElementaryTypeName","src":"21642:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5057,"initialValue":{"arguments":[{"id":5055,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5044,"src":"21680:4:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":5053,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"21669:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21675:4:15","memberName":"call","nodeType":"MemberAccess","src":"21669:10:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21669:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"21627:58:15"},{"condition":{"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21699:8:15","subExpression":{"id":5058,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5050,"src":"21700:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5063,"nodeType":"IfStatement","src":"21695:51:15","trueBody":{"id":5062,"nodeType":"Block","src":"21709:37:15","statements":[{"expression":{"hexValue":"66616c7365","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21730:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":5048,"id":5061,"nodeType":"Return","src":"21723:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5064,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"21759:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21770:6:15","memberName":"length","nodeType":"MemberAccess","src":"21759:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21780:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21759:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5071,"nodeType":"IfStatement","src":"21755:64:15","trueBody":{"id":5070,"nodeType":"Block","src":"21783:36:15","statements":[{"expression":{"hexValue":"74727565","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"21804:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":5048,"id":5069,"nodeType":"Return","src":"21797:11:15"}]}},{"expression":{"arguments":[{"id":5074,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"21846:10:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":5076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21859:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":5075,"name":"bool","nodeType":"ElementaryTypeName","src":"21859:4:15","typeDescriptions":{}}}],"id":5077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21858:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":5072,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21835:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21839:6:15","memberName":"decode","nodeType":"MemberAccess","src":"21835:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21835:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5048,"id":5079,"nodeType":"Return","src":"21828:37:15"}]},"id":5081,"implemented":true,"kind":"function","modifiers":[],"name":"_callToken","nameLocation":"21548:10:15","nodeType":"FunctionDefinition","parameters":{"id":5045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5042,"mutability":"mutable","name":"token","nameLocation":"21567:5:15","nodeType":"VariableDeclaration","scope":5081,"src":"21559:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5041,"name":"address","nodeType":"ElementaryTypeName","src":"21559:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5044,"mutability":"mutable","name":"data","nameLocation":"21587:4:15","nodeType":"VariableDeclaration","scope":5081,"src":"21574:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5043,"name":"bytes","nodeType":"ElementaryTypeName","src":"21574:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21558:34:15"},"returnParameters":{"id":5048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5081,"src":"21611:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5046,"name":"bool","nodeType":"ElementaryTypeName","src":"21611:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21610:6:15"},"scope":5149,"src":"21539:333:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5122,"nodeType":"Block","src":"21954:290:15","statements":[{"expression":{"arguments":[{"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"21972:23:15","subExpression":{"baseExpression":{"id":5089,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"21973:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5091,"indexExpression":{"id":5090,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"21989:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21973:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c726561647920737570706f72746564","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21997:25:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944","typeString":"literal_string \"Token already supported\""},"value":"Token already supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36c0791b70813b3a93a100c1e20df4ec3ef1e183d6665e015c959f068d323944","typeString":"literal_string \"Token already supported\""}],"id":5088,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"21964:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21964:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5095,"nodeType":"ExpressionStatement","src":"21964:59:15"},{"expression":{"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5096,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"22033:15:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":5098,"indexExpression":{"id":5097,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"22049:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22033:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"22058:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"22033:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5101,"nodeType":"ExpressionStatement","src":"22033:29:15"},{"expression":{"arguments":[{"id":5105,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"22096:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5102,"name":"supportedTokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"22072:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22091:4:15","memberName":"push","nodeType":"MemberAccess","src":"22072:23:15","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22072:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5107,"nodeType":"ExpressionStatement","src":"22072:30:15"},{"expression":{"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5108,"name":"supportedTokenIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"22112:19:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5110,"indexExpression":{"id":5109,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"22132:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22112:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5111,"name":"supportedTokenList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"22141:18:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"22160:6:15","memberName":"length","nodeType":"MemberAccess","src":"22141:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22112:54:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5114,"nodeType":"ExpressionStatement","src":"22112:54:15"},{"condition":{"id":5115,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5085,"src":"22180:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5121,"nodeType":"IfStatement","src":"22176:62:15","trueBody":{"id":5120,"nodeType":"Block","src":"22191:47:15","statements":[{"eventCall":{"arguments":[{"id":5117,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5083,"src":"22221:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5116,"name":"TokenAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"22210:10:15","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22210:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5119,"nodeType":"EmitStatement","src":"22205:22:15"}]}}]},"id":5123,"implemented":true,"kind":"function","modifiers":[],"name":"_addSupportedTokenInternal","nameLocation":"21887:26:15","nodeType":"FunctionDefinition","parameters":{"id":5086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"token","nameLocation":"21922:5:15","nodeType":"VariableDeclaration","scope":5123,"src":"21914:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5082,"name":"address","nodeType":"ElementaryTypeName","src":"21914:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5085,"mutability":"mutable","name":"emitEvent","nameLocation":"21934:9:15","nodeType":"VariableDeclaration","scope":5123,"src":"21929:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5084,"name":"bool","nodeType":"ElementaryTypeName","src":"21929:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21913:31:15"},"returnParameters":{"id":5087,"nodeType":"ParameterList","parameters":[],"src":"21954:0:15"},"scope":5149,"src":"21878:366:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":5147,"nodeType":"Block","src":"22314:177:15","statements":[{"assignments":[5129],"declarations":[{"constant":false,"id":5129,"mutability":"mutable","name":"token","nameLocation":"22332:5:15","nodeType":"VariableDeclaration","scope":5147,"src":"22324:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5128,"name":"address","nodeType":"ElementaryTypeName","src":"22324:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5133,"initialValue":{"baseExpression":{"id":5130,"name":"subscriptionToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"22340:17:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":5132,"indexExpression":{"id":5131,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5125,"src":"22358:14:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22340:33:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"22324:49:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5134,"name":"activeSubscriptionCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"22387:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5136,"indexExpression":{"id":5135,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"22412:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"22387:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22421:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22387:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5146,"nodeType":"IfStatement","src":"22383:102:15","trueBody":{"id":5145,"nodeType":"Block","src":"22424:61:15","statements":[{"expression":{"id":5143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5139,"name":"activeSubscriptionCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"22438:24:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":5141,"indexExpression":{"id":5140,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5129,"src":"22463:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"22438:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":5142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22473:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22438:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5144,"nodeType":"ExpressionStatement","src":"22438:36:15"}]}}]},"id":5148,"implemented":true,"kind":"function","modifiers":[],"name":"_decrementActiveCount","nameLocation":"22259:21:15","nodeType":"FunctionDefinition","parameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"subscriptionId","nameLocation":"22289:14:15","nodeType":"VariableDeclaration","scope":5148,"src":"22281:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5124,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22281:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22280:24:15"},"returnParameters":{"id":5127,"nodeType":"ParameterList","parameters":[],"src":"22314:0:15"},"scope":5149,"src":"22250:241:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":5150,"src":"323:22170:15","usedErrors":[13,18,1501,1567,1572,1577],"usedEvents":[24,3256,3262,3268,3276,3294,3306,3310,3314]}],"src":"32:22462:15"},"id":15}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}]},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the address provided by the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":8,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"approveAndCall(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"approveAndCall(address,uint256,bytes)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.","params":{"data":"Additional data with no specified format, sent in call to `spender`.","spender":"The address which will spend the funds.","value":"The amount of tokens to be spent."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferAndCall(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferAndCall(address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFromAndCall(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}},"transferFromAndCall(address,address,uint256,bytes)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.","params":{"data":"Additional data with no specified format, sent in call to `to`.","from":"The address which you want to send tokens from.","to":"The address which you want to transfer to.","value":"The amount of tokens to be transferred."},"returns":{"_0":"A boolean value indicating whether the operation succeeded unless throwing."}}},"title":"IERC1363","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"devdoc":{"details":"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.","errors":{"ERC1155InsufficientBalance(address,uint256,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC1155InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC1155InvalidArrayLength(uint256,uint256)":[{"details":"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.","params":{"idsLength":"Length of the array of token identifiers","valuesLength":"Length of the array of token amounts"}}],"ERC1155InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC1155InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC1155InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC1155MissingApprovalForAll(address,address)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","owner":"Address of the current owner of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"devdoc":{"details":"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"devdoc":{"details":"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.","errors":{"ERC721IncorrectOwner(address,uint256,address)":[{"details":"Indicates an error related to the ownership over a particular token. Used in transfers.","params":{"owner":"Address of the current owner of a token.","sender":"Address whose tokens are being transferred.","tokenId":"Identifier number of a token."}}],"ERC721InsufficientApproval(address,uint256)":[{"details":"Indicates a failure with the `operator`’s approval. Used in transfers.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner.","tokenId":"Identifier number of a token."}}],"ERC721InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC721InvalidOperator(address)":[{"details":"Indicates a failure with the `operator` to be approved. Used in approvals.","params":{"operator":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC721InvalidOwner(address)":[{"details":"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.","params":{"owner":"Address of the current owner of a token."}}],"ERC721InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC721InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC721NonexistentToken(uint256)":[{"details":"Indicates a `tokenId` whose `owner` is the zero address.","params":{"tokenId":"Identifier number of a token."}}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.","errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"constructor":{"details":"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":397,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":403,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":405,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":407,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":409,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC-20 standard as defined in the ERC.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC-20 standard.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"devdoc":{"details":"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","errors":{"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)":[{"details":"Indicates a failed `decreaseAllowance` request."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC-20 token failed."}]},"kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122000c1a6d9842ee6abf04a44841678decb039abd5426024661eb22116247ae423264736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xC1 0xA6 0xD9 DUP5 0x2E 0xE6 0xAB CREATE BLOBBASEFEE PREVRANDAO DUP5 AND PUSH25 0xDECB039ABD5426024661EB22116247AE423264736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"698:9376:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122000c1a6d9842ee6abf04a44841678decb039abd5426024661eb22116247ae423264736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xC1 0xA6 0xD9 DUP5 0x2E 0xE6 0xAB CREATE BLOBBASEFEE PREVRANDAO DUP5 AND PUSH25 0xDECB039ABD5426024661EB22116247AE423264736F6C634300 ADDMOD SHR STOP CALLER ","sourceMap":"698:9376:8:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","_callOptionalReturnBool(contract IERC20,bytes memory)":"infinite","approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","forceApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite","transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)":"infinite","transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)":"infinite","trySafeTransfer(contract IERC20,address,uint256)":"infinite","trySafeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","errors":{"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1498,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","errors":{"ECDSAInvalidSignature()":[{"details":"The signature derives the `address(0)`."}],"ECDSAInvalidSignatureLength(uint256)":[{"details":"The signature has an invalid length."}],"ECDSAInvalidSignatureS(bytes32)":[{"details":"The signature has an S value that is in the upper half order."}]},"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122054b7174f864a43e2e3037df1ab4a0604b6c29dedaa1492849e855d05a90a18c564736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xB7 OR 0x4F DUP7 BLOBBASEFEE NUMBER 0xE2 0xE3 SUB PUSH30 0xF1AB4A0604B6C29DEDAA1492849E855D05A90A18C564736F6C634300081C STOP CALLER ","sourceMap":"344:7470:11:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122054b7174f864a43e2e3037df1ab4a0604b6c29dedaa1492849e855d05a90a18c564736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xB7 OR 0x4F DUP7 BLOBBASEFEE NUMBER 0xE2 0xE3 SUB PUSH30 0xF1AB4A0604B6C29DEDAA1492849E855D05A90A18C564736F6C634300081C STOP CALLER ","sourceMap":"344:7470:11:-:0;;"},"gasEstimates":{"creation":{"codeDepositCost":"11600","executionCost":"infinite","totalCost":"infinite"},"internal":{"_throwError(enum ECDSA.RecoverError,bytes32)":"infinite","recover(bytes32,bytes memory)":"infinite","recover(bytes32,bytes32,bytes32)":"infinite","recover(bytes32,uint8,bytes32,bytes32)":"infinite","tryRecover(bytes32,bytes memory)":"infinite","tryRecover(bytes32,bytes32,bytes32)":"infinite","tryRecover(bytes32,uint8,bytes32,bytes32)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MockPYUSD.sol":{"MockPYUSD":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"forceFailOnTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bool","name":"fail","type":"bool"}],"name":"setForceFailOnTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bool","name":"failing","type":"bool"}],"name":"setTransferFailing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"transferFailing","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"ERC20InsufficientAllowance(address,uint256,uint256)":[{"details":"Indicates a failure with the `spender`’s `allowance`. Used in transfers.","params":{"allowance":"Amount of tokens a `spender` is allowed to operate with.","needed":"Minimum amount required to perform a transfer.","spender":"Address that may be allowed to operate on tokens without being their owner."}}],"ERC20InsufficientBalance(address,uint256,uint256)":[{"details":"Indicates an error related to the current `balance` of a `sender`. Used in transfers.","params":{"balance":"Current balance for the interacting account.","needed":"Minimum amount required to perform a transfer.","sender":"Address whose tokens are being transferred."}}],"ERC20InvalidApprover(address)":[{"details":"Indicates a failure with the `approver` of a token to be approved. Used in approvals.","params":{"approver":"Address initiating an approval operation."}}],"ERC20InvalidReceiver(address)":[{"details":"Indicates a failure with the token `receiver`. Used in transfers.","params":{"receiver":"Address to which tokens are being transferred."}}],"ERC20InvalidSender(address)":[{"details":"Indicates a failure with the token `sender`. Used in transfers.","params":{"sender":"Address whose tokens are being transferred."}}],"ERC20InvalidSpender(address)":[{"details":"Indicates a failure with the `spender` to be approved. Used in approvals.","params":{"spender":"Address that may be allowed to operate on tokens without being their owner."}}]},"events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"Returns the value of tokens in existence."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052346103ba57604080519060009082016001600160401b038111838210176102cb576040908152600a83526914185e54185b081554d160b21b60208401528051919082016001600160401b038111838210176102cb57604052600582526414165554d160da1b602083015282516001600160401b0381116102cb57600354600181811c911680156103b0575b60208210146102ad57601f811161034d575b506020601f82116001146102ea578293948293926102df575b50508160011b916000199060031b1c1916176003555b81516001600160401b0381116102cb57600454600181811c911680156102c1575b60208210146102ad57601f811161024a575b50602092601f82116001146101e8579282938293926101dd575b50508160011b916000199060031b1c1916176004555b600660ff19600554161760055550600033156101c95760025464e8d4a5100081018091116101b557600255338152806020526040812064e8d4a5100081540190556040519064e8d4a5100082527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a36040516109db90816103c08239f35b634e487b7160e01b82526011600452602482fd5b63ec442f0560e01b81526004819052602490fd5b01519050388061011d565b601f198216936004845280842091845b8681106102325750836001959610610219575b505050811b01600455610133565b015160001960f88460031b161c1916905538808061020b565b919260206001819286850151815501940192016101f8565b600483527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106102a3575b601f0160051c01905b8181106102985750610103565b83815560010161028b565b9091508190610282565b634e487b7160e01b83526022600452602483fd5b90607f16906100f1565b634e487b7160e01b82526041600452602482fd5b0151905038806100ba565b6003835280832090601f198316845b8181106103355750958360019596971061031c575b505050811b016003556100d0565b015160001960f88460031b161c1916905538808061030e565b9192602060018192868b0151815501940192016102f9565b600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106103a6575b601f0160051c01905b81811061039b57506100a1565b83815560010161038e565b9091508190610385565b90607f169061008f565b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461057657508063095ea7b3146104c457806318160ddd146104a65780631e0f867c1461046757806323b872dd14610438578063313ce5671461041757806340c10f19146103f257806370a08231146103b857806395d89b41146102975780639dc29fac14610272578063a6290fff1461023a578063a9059cbb14610209578063c0bd8085146101bb578063d5b8b5be14610195578063dd62ed3e146101445763e30443bc146100cf57600080fd5b3461013f57604036600319011261013f576100e8610692565b6001600160a01b0381166000908152602081905260409020546024359190808311156101235761011b90610121936107dd565b90610800565b005b80831061012c57005b61012192610139916107dd565b90610875565b600080fd5b3461013f57604036600319011261013f5761015d610692565b6101656106a8565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b3461013f57600036600319011261013f57602060ff60055460081c166040519015158152f35b3461013f57604036600319011261013f576101d4610692565b6024359081151580920361013f5760018060a01b0316600052600660205260406000209060ff80198354169116179055600080f35b3461013f57604036600319011261013f576020610230610227610692565b6024359061079f565b6040519015158152f35b3461013f57602036600319011261013f5760043580151580910361013f5761ff006005549160081b169061ff00191617600555600080f35b3461013f57604036600319011261013f5761012161028e610692565b60243590610875565b3461013f57600036600319011261013f5760405160006004548060011c906001811680156103ae575b60208310811461039a5782855290811561037e5750600114610327575b50819003601f01601f191681019067ffffffffffffffff8211818310176103115761030d82918260405282610649565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b828210610368575060209150820101826102dd565b6001816020925483858801015201910190610353565b90506020925060ff191682840152151560051b820101826102dd565b634e487b7160e01b84526022600452602484fd5b91607f16916102c0565b3461013f57602036600319011261013f576001600160a01b036103d9610692565b1660005260006020526020604060002054604051908152f35b3461013f57604036600319011261013f5761012161040e610692565b60243590610800565b3461013f57600036600319011261013f57602060ff60055416604051908152f35b3461013f57606036600319011261013f576020610230610456610692565b61045e6106a8565b604435916106be565b3461013f57602036600319011261013f576001600160a01b03610488610692565b166000526006602052602060ff604060002054166040519015158152f35b3461013f57600036600319011261013f576020600254604051908152f35b3461013f57604036600319011261013f576104dd610692565b602435903315610560576001600160a01b031690811561054a57336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b3461013f57600036600319011261013f5760006003548060011c9060018116801561063f575b60208310811461039a5782855290811561037e57506001146105e85750819003601f01601f191681019067ffffffffffffffff8211818310176103115761030d82918260405282610649565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b828210610629575060209150820101826102dd565b6001816020925483858801015201910190610614565b91607f169161059c565b91909160208152825180602083015260005b81811061067c575060409293506000838284010152601f8019910116010190565b806020809287010151604082860101520161065b565b600435906001600160a01b038216820361013f57565b602435906001600160a01b038216820361013f57565b919060ff60055460081c16801561077d575b610775576001600160a01b03831660008181526001602090815260408083203384529091529020549093906000198110610715575b50610710935061090c565b600190565b83811061075857841561056057331561054a57610710946000526001602052604060002060018060a01b0333166000526020528360406000209103905538610705565b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b505050600090565b506001600160a01b03831660009081526006602052604090205460ff166106d0565b9060ff60055460081c1680156107c5575b6107be57610710913361090c565b5050600090565b5033600052600660205260ff604060002054166107b0565b919082039182116107ea57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b031690811561085f576002548181018091116107ea576002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b63ec442f0560e01b600052600060045260246000fd5b6001600160a01b031680156108f6576000918183528260205260408320548181106108dd57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b6064939263391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b6001600160a01b03169081156108f6576001600160a01b031691821561085f57600082815280602052604081205482811061098b5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fdfea2646970667358221220661b49a34917a40f108d5be77a50c0ec8cb41cef359644b643f53dcaf555a66164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3BA JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 PUSH1 0x0 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2CB JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0xA DUP4 MSTORE PUSH10 0x14185E54185B081554D1 PUSH1 0xB2 SHL PUSH1 0x20 DUP5 ADD MSTORE DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2CB JUMPI PUSH1 0x40 MSTORE PUSH1 0x5 DUP3 MSTORE PUSH5 0x14165554D1 PUSH1 0xDA SHL PUSH1 0x20 DUP4 ADD MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2CB JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x3B0 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2AD JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x34D JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2EA JUMPI DUP3 SWAP4 SWAP5 DUP3 SWAP4 SWAP3 PUSH2 0x2DF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2CB JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x2C1 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2AD JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x24A JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1E8 JUMPI SWAP3 DUP3 SWAP4 DUP3 SWAP4 SWAP3 PUSH2 0x1DD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x6 PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE POP PUSH1 0x0 CALLER ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x2 SLOAD PUSH5 0xE8D4A51000 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B5 JUMPI PUSH1 0x2 SSTORE CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH5 0xE8D4A51000 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH5 0xE8D4A51000 DUP3 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0x9DB SWAP1 DUP2 PUSH2 0x3C0 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x11D JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x4 DUP5 MSTORE DUP1 DUP5 KECCAK256 SWAP2 DUP5 JUMPDEST DUP7 DUP2 LT PUSH2 0x232 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x219 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x133 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20B JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x4 DUP4 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x2A3 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x298 JUMPI POP PUSH2 0x103 JUMP JUMPDEST DUP4 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28B JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x282 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xF1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xBA JUMP JUMPDEST PUSH1 0x3 DUP4 MSTORE DUP1 DUP4 KECCAK256 SWAP1 PUSH1 0x1F NOT DUP4 AND DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0x335 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x31C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xD0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x30E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2F9 JUMP JUMPDEST PUSH1 0x3 DUP4 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x3A6 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x39B JUMPI POP PUSH2 0xA1 JUMP JUMPDEST DUP4 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x38E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x8F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x576 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x1E0F867C EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xA6290FFF EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xC0BD8085 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xD5B8B5BE EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x144 JUMPI PUSH4 0xE30443BC EQ PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0xE8 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP1 DUP4 GT ISZERO PUSH2 0x123 JUMPI PUSH2 0x11B SWAP1 PUSH2 0x121 SWAP4 PUSH2 0x7DD JUMP JUMPDEST SWAP1 PUSH2 0x800 JUMP JUMPDEST STOP JUMPDEST DUP1 DUP4 LT PUSH2 0x12C JUMPI STOP JUMPDEST PUSH2 0x121 SWAP3 PUSH2 0x139 SWAP2 PUSH2 0x7DD JUMP JUMPDEST SWAP1 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0x15D PUSH2 0x692 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0x1D4 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x13F JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x20 PUSH2 0x230 PUSH2 0x227 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x13F JUMPI PUSH2 0xFF00 PUSH1 0x5 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0x5 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0x121 PUSH2 0x28E PUSH2 0x692 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x875 JUMP JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x3AE JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x39A JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x37E JUMPI POP PUSH1 0x1 EQ PUSH2 0x327 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x311 JUMPI PUSH2 0x30D DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x649 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x368 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x2DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2C0 JUMP JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3D9 PUSH2 0x692 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0x121 PUSH2 0x40E PUSH2 0x692 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x800 JUMP JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x20 PUSH2 0x230 PUSH2 0x456 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x45E PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x6BE JUMP JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x488 PUSH2 0x692 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0x4DD PUSH2 0x692 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x560 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x54A JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x63F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x39A JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x37E JUMPI POP PUSH1 0x1 EQ PUSH2 0x5E8 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x311 JUMPI PUSH2 0x30D DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x629 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x614 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x59C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x67C JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x65B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x13F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x13F JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND DUP1 ISZERO PUSH2 0x77D JUMPI JUMPDEST PUSH2 0x775 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x0 NOT DUP2 LT PUSH2 0x715 JUMPI JUMPDEST POP PUSH2 0x710 SWAP4 POP PUSH2 0x90C JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x758 JUMPI DUP5 ISZERO PUSH2 0x560 JUMPI CALLER ISZERO PUSH2 0x54A JUMPI PUSH2 0x710 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE PUSH2 0x705 JUMP JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6D0 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND DUP1 ISZERO PUSH2 0x7C5 JUMPI JUMPDEST PUSH2 0x7BE JUMPI PUSH2 0x710 SWAP2 CALLER PUSH2 0x90C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x7B0 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x7EA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x85F JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x7EA JUMPI PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x8DD JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x98B JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x1B49A34917A40F LT DUP14 JUMPDEST 0xE7 PUSH27 0x50C0EC8CB41CEF359644B643F53DCAF555A66164736F6C63430008 SHR STOP CALLER ","sourceMap":"114:1684:13:-:0;;;;;;;;;;-1:-1:-1;;114:1684:13;;-1:-1:-1;;;;;114:1684:13;;;;;;;;;;;;;;;-1:-1:-1;;;114:1684:13;;;;;;;;;;-1:-1:-1;;;;;114:1684:13;;;;;;;;;;;;;-1:-1:-1;;;114:1684:13;;;;;;-1:-1:-1;;;;;114:1684:13;;;;1648:13:5;114:1684:13;;;;;;;;;;;-1:-1:-1;114:1684:13;;;;;;;;;;;-1:-1:-1;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:5;114:1684:13;;;;;1648:13:5;114:1684:13;;;;-1:-1:-1;;;;;114:1684:13;;;;1671:17:5;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:5;114:1684:13;;;;;1671:17:5;114:1684:13;;333:1;114:1684;;;;;;;;;-1:-1:-1;350:10:13;7432:21:5;7428:91;;6137:21;114:1684:13;;;;;;;;;6137:21:5;114:1684:13;350:10;114:1684;;;;;;;;;;;;;;;;;;;;6987:25:5;114:1684:13;350:10;6987:25:5;;114:1684:13;;;;;;;;;;-1:-1:-1;;;114:1684:13;;;1671:17:5;114:1684:13;;;;7428:91:5;-1:-1:-1;;;7476:32:5;;1671:17;114:1684:13;;;;;7476:32:5;114:1684:13;;;;-1:-1:-1;114:1684:13;;;;;;;;;;1671:17:5;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:5;114:1684:13;;;;;;;;;;1648:13:5;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:5;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:1684:13;;;;;-1:-1:-1;;;114:1684:13;;;1671:17:5;114:1684:13;;;;;;;;;;;;-1:-1:-1;;;114:1684:13;;;1671:17:5;114:1684:13;;;;;;;;-1:-1:-1;114:1684:13;;;;;1648:13:5;114:1684:13;;;;;;-1:-1:-1;;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:5;114:1684:13;;;;;;;;;;1648:13:5;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:5;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:1684:13;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1682,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_4444":{"entryPoint":1704,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":1609,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":2013,"id":null,"parameterSlots":2,"returnSlots":1},"fun_burn":{"entryPoint":2165,"id":762,"parameterSlots":2,"returnSlots":0},"fun_mint":{"entryPoint":2048,"id":729,"parameterSlots":2,"returnSlots":0},"fun_transfer":{"entryPoint":2316,"id":619,"parameterSlots":3,"returnSlots":0},"fun_transferFrom":{"entryPoint":1726,"id":2104,"parameterSlots":3,"returnSlots":1},"fun_transfer_2075":{"entryPoint":1951,"id":2075,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461057657508063095ea7b3146104c457806318160ddd146104a65780631e0f867c1461046757806323b872dd14610438578063313ce5671461041757806340c10f19146103f257806370a08231146103b857806395d89b41146102975780639dc29fac14610272578063a6290fff1461023a578063a9059cbb14610209578063c0bd8085146101bb578063d5b8b5be14610195578063dd62ed3e146101445763e30443bc146100cf57600080fd5b3461013f57604036600319011261013f576100e8610692565b6001600160a01b0381166000908152602081905260409020546024359190808311156101235761011b90610121936107dd565b90610800565b005b80831061012c57005b61012192610139916107dd565b90610875565b600080fd5b3461013f57604036600319011261013f5761015d610692565b6101656106a8565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b3461013f57600036600319011261013f57602060ff60055460081c166040519015158152f35b3461013f57604036600319011261013f576101d4610692565b6024359081151580920361013f5760018060a01b0316600052600660205260406000209060ff80198354169116179055600080f35b3461013f57604036600319011261013f576020610230610227610692565b6024359061079f565b6040519015158152f35b3461013f57602036600319011261013f5760043580151580910361013f5761ff006005549160081b169061ff00191617600555600080f35b3461013f57604036600319011261013f5761012161028e610692565b60243590610875565b3461013f57600036600319011261013f5760405160006004548060011c906001811680156103ae575b60208310811461039a5782855290811561037e5750600114610327575b50819003601f01601f191681019067ffffffffffffffff8211818310176103115761030d82918260405282610649565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b828210610368575060209150820101826102dd565b6001816020925483858801015201910190610353565b90506020925060ff191682840152151560051b820101826102dd565b634e487b7160e01b84526022600452602484fd5b91607f16916102c0565b3461013f57602036600319011261013f576001600160a01b036103d9610692565b1660005260006020526020604060002054604051908152f35b3461013f57604036600319011261013f5761012161040e610692565b60243590610800565b3461013f57600036600319011261013f57602060ff60055416604051908152f35b3461013f57606036600319011261013f576020610230610456610692565b61045e6106a8565b604435916106be565b3461013f57602036600319011261013f576001600160a01b03610488610692565b166000526006602052602060ff604060002054166040519015158152f35b3461013f57600036600319011261013f576020600254604051908152f35b3461013f57604036600319011261013f576104dd610692565b602435903315610560576001600160a01b031690811561054a57336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b3461013f57600036600319011261013f5760006003548060011c9060018116801561063f575b60208310811461039a5782855290811561037e57506001146105e85750819003601f01601f191681019067ffffffffffffffff8211818310176103115761030d82918260405282610649565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b828210610629575060209150820101826102dd565b6001816020925483858801015201910190610614565b91607f169161059c565b91909160208152825180602083015260005b81811061067c575060409293506000838284010152601f8019910116010190565b806020809287010151604082860101520161065b565b600435906001600160a01b038216820361013f57565b602435906001600160a01b038216820361013f57565b919060ff60055460081c16801561077d575b610775576001600160a01b03831660008181526001602090815260408083203384529091529020549093906000198110610715575b50610710935061090c565b600190565b83811061075857841561056057331561054a57610710946000526001602052604060002060018060a01b0333166000526020528360406000209103905538610705565b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b505050600090565b506001600160a01b03831660009081526006602052604090205460ff166106d0565b9060ff60055460081c1680156107c5575b6107be57610710913361090c565b5050600090565b5033600052600660205260ff604060002054166107b0565b919082039182116107ea57565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b031690811561085f576002548181018091116107ea576002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602060009284845283825260408420818154019055604051908152a3565b63ec442f0560e01b600052600060045260246000fd5b6001600160a01b031680156108f6576000918183528260205260408320548181106108dd57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b6064939263391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b6001600160a01b03169081156108f6576001600160a01b031691821561085f57600082815280602052604081205482811061098b5791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fdfea2646970667358221220661b49a34917a40f108d5be77a50c0ec8cb41cef359644b643f53dcaf555a66164736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x576 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x1E0F867C EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3F2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xA6290FFF EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xC0BD8085 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0xD5B8B5BE EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x144 JUMPI PUSH4 0xE30443BC EQ PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0xE8 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP1 DUP4 GT ISZERO PUSH2 0x123 JUMPI PUSH2 0x11B SWAP1 PUSH2 0x121 SWAP4 PUSH2 0x7DD JUMP JUMPDEST SWAP1 PUSH2 0x800 JUMP JUMPDEST STOP JUMPDEST DUP1 DUP4 LT PUSH2 0x12C JUMPI STOP JUMPDEST PUSH2 0x121 SWAP3 PUSH2 0x139 SWAP2 PUSH2 0x7DD JUMP JUMPDEST SWAP1 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0x15D PUSH2 0x692 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0x1D4 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x13F JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x20 PUSH2 0x230 PUSH2 0x227 PUSH2 0x692 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x79F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x13F JUMPI PUSH2 0xFF00 PUSH1 0x5 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR PUSH1 0x5 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0x121 PUSH2 0x28E PUSH2 0x692 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x875 JUMP JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x3AE JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x39A JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x37E JUMPI POP PUSH1 0x1 EQ PUSH2 0x327 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x311 JUMPI PUSH2 0x30D DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x649 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x368 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x353 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x2DD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2C0 JUMP JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3D9 PUSH2 0x692 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0x121 PUSH2 0x40E PUSH2 0x692 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x800 JUMP JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x20 PUSH2 0x230 PUSH2 0x456 PUSH2 0x692 JUMP JUMPDEST PUSH2 0x45E PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x6BE JUMP JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x488 PUSH2 0x692 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH2 0x4DD PUSH2 0x692 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x560 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x54A JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x13F JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x63F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x39A JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x37E JUMPI POP PUSH1 0x1 EQ PUSH2 0x5E8 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x311 JUMPI PUSH2 0x30D DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x649 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x629 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x614 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x59C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x67C JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x65B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x13F JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x13F JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND DUP1 ISZERO PUSH2 0x77D JUMPI JUMPDEST PUSH2 0x775 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 SWAP1 PUSH1 0x0 NOT DUP2 LT PUSH2 0x715 JUMPI JUMPDEST POP PUSH2 0x710 SWAP4 POP PUSH2 0x90C JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x758 JUMPI DUP5 ISZERO PUSH2 0x560 JUMPI CALLER ISZERO PUSH2 0x54A JUMPI PUSH2 0x710 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE CODESIZE PUSH2 0x705 JUMP JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x6D0 JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x5 SLOAD PUSH1 0x8 SHR AND DUP1 ISZERO PUSH2 0x7C5 JUMPI JUMPDEST PUSH2 0x7BE JUMPI PUSH2 0x710 SWAP2 CALLER PUSH2 0x90C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x7B0 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x7EA JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x85F JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x7EA JUMPI PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x0 SWAP2 DUP2 DUP4 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP2 DUP2 LT PUSH2 0x8DD JUMPI DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 PUSH1 0x20 SWAP3 DUP6 DUP8 MSTORE DUP7 DUP5 MSTORE SUB PUSH1 0x40 DUP7 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST PUSH1 0x64 SWAP4 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x85F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x98B JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x1B49A34917A40F LT DUP14 JUMPDEST 0xE7 PUSH27 0x50C0EC8CB41CEF359644B643F53DCAF555A66164736F6C63430008 SHR STOP CALLER ","sourceMap":"114:1684:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;;;:::i;:::-;-1:-1:-1;;;;;114:1684:13;;;;;;;;;;;;;;;;;;842:23;;;;;;896;;;;;:::i;:::-;;;:::i;:::-;114:1684;838:192;941:23;;;937:93;;114:1684;937:93;995:23;;;;;:::i;:::-;;;:::i;114:1684::-;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;;;177:27;114:1684;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1220:19;114:1684;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;;;;;;;;;;;;1103:25;114:1684;;;;;;;;;;1103:25;114:1684;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;693:6;114:1684;;:::i;:::-;;;693:6;;:::i;114:1684::-;;;;;;-1:-1:-1;;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:1684:13;;;;;-1:-1:-1;;114:1684:13;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;114:1684:13;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;-1:-1:-1;;;;;114:1684:13;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;598:6;114:1684;;:::i;:::-;;;598:6;;:::i;114:1684::-;;;;;;-1:-1:-1;;114:1684:13;;;;;;505:9;114:1684;;;;;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;114:1684:13;;;;-1:-1:-1;;;;;114:1684:13;;:::i;:::-;;;;210:51;114:1684;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;;2881:12:5;114:1684:13;;;;;;;;;;;;;-1:-1:-1;;114:1684:13;;;;;;:::i;:::-;;;735:10:9;;9717:19:5;9713:89;;-1:-1:-1;;;;;114:1684:13;;9815:21:5;;9811:90;;735:10:9;114:1684:13;;;;;;;;;-1:-1:-1;114:1684:13;;;;;-1:-1:-1;114:1684:13;;;;;;;9989:31:5;114:1684:13;735:10:9;9989:31:5;;114:1684:13;;;;;;;9811:90:5;9859:31;;;114:1684:13;9859:31:5;114:1684:13;;;;;9859:31:5;9713:89;9759:32;;;114:1684:13;9759:32:5;114:1684:13;;;;;9759:32:5;114:1684:13;;;;;;-1:-1:-1;;114:1684:13;;;;;1837:5:5;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;114:1684:13;;;;;-1:-1:-1;;114:1684:13;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:5;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;114:1684:13;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;114:1684:13;;;;;;:::o;1545:251::-;;;114:1684;1654:15;114:1684;;;;1654:44;;;;1545:251;1650:87;;-1:-1:-1;;;;;114:1684:13;;;;;;;;;;;;;;;735:10:9;114:1684:13;;;;;;;;;;;-1:-1:-1;;10484:36:5;;10480:309;;1545:251:13;4890:5:5;;;;;:::i;:::-;3561:11;1545:251:13;:::o;10480:309:5:-;10540:24;;;10536:130;;9717:19;;9713:89;;735:10:9;9815:21:5;9811:90;;4890:5;114:1684:13;;;3561:11:5;114:1684:13;;;;;;;;;;735:10:9;114:1684:13;-1:-1:-1;114:1684:13;;;;;-1:-1:-1;114:1684:13;;;;;10480:309:5;;;10536:130;10591:60;;;;;114:1684:13;10591:60:5;735:10:9;10591:60:5;114:1684:13;;;;;;;10591:60:5;1650:87:13;1714:12;;;114:1684;1714:12;:::o;1654:44::-;-1:-1:-1;;;;;;114:1684:13;;;;;;1673:19;114:1684;;;;;;;;1654:44;;1268:271;;114:1684;1359:15;114:1684;;;;1359:50;;;;1268:271;1355:135;;3388:5:5;735:10:9;;3388:5:5;:::i;1355:135:13:-;1425:12;;114:1684;1425:12;:::o;1359:50::-;1398:10;;114:1684;;1378:19;114:1684;;;;;;;;1359:50;;114:1684;;;;;;;;;;:::o;:::-;;;;;;;;;;;;7362:208:5;-1:-1:-1;;;;;114:1684:13;;7432:21:5;;7428:91;;6137:21;114:1684:13;;;;;;;;;6137:21:5;114:1684:13;6987:25:5;114:1684:13;7451:1:5;114:1684:13;;;;;;;;;;;;;;;;;;;;;6987:25:5;7362:208::o;7428:91::-;7476:32;;;7451:1;7476:32;7451:1;7476:32;114:1684:13;;7451:1:5;7476:32;7888:206;-1:-1:-1;;;;;114:1684:13;7958:21:5;;7954:89;;7977:1;114:1684:13;;;;;;;;;;;6244:19:5;;;6240:115;;114:1684:13;6987:25:5;114:1684:13;;;;;;;;;;;;;;;6714:21:5;114:1684:13;;6714:21:5;114:1684:13;;;;;;6987:25:5;7888:206::o;6240:115::-;114:1684:13;6290:50:5;;;;;;;;114:1684:13;;;;;6290:50:5;7954:89;8002:30;;;7977:1;8002:30;7977:1;8002:30;114:1684:13;;7977:1:5;8002:30;5297:300;-1:-1:-1;;;;;114:1684:13;;5380:18:5;;5376:86;;-1:-1:-1;;;;;114:1684:13;;5475:16:5;;5471:86;;5396:1;114:1684:13;;;;;;;;;;6244:19:5;;;6240:115;;114:1684:13;;;;6987:25:5;114:1684:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:25:5;5297:300::o;6240:115::-;6290:50;114:1684:13;6290:50:5;;;;;;;;114:1684:13;;;;;6290:50:5"},"gasEstimates":{"creation":{"codeDepositCost":"504600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"2883","approve(address,uint256)":"24330","balanceOf(address)":"2563","burn(address,uint256)":"50839","decimals()":"2374","forceFailOnTransfer(address)":"2487","mint(address,uint256)":"50713","name()":"infinite","setBalance(address,uint256)":"53280","setForceFailOnTransfer(address,bool)":"24825","setTransferFailing(bool)":"24630","symbol()":"infinite","totalSupply()":"2302","transfer(address,uint256)":"55384","transferFailing()":"2562","transferFrom(address,address,uint256)":"79963"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","decimals()":"313ce567","forceFailOnTransfer(address)":"1e0f867c","mint(address,uint256)":"40c10f19","name()":"06fdde03","setBalance(address,uint256)":"e30443bc","setForceFailOnTransfer(address,bool)":"c0bd8085","setTransferFailing(bool)":"a6290fff","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFailing()":"d5b8b5be","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"forceFailOnTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"fail\",\"type\":\"bool\"}],\"name\":\"setForceFailOnTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"failing\",\"type\":\"bool\"}],\"name\":\"setTransferFailing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFailing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockPYUSD.sol\":\"MockPYUSD\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\\npragma solidity >=0.8.4;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /// @inheritdoc IERC20\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/MockPYUSD.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.28;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract MockPYUSD is ERC20 {\\n    uint8 private _decimals;\\n    bool public transferFailing;\\n    mapping(address => bool) public forceFailOnTransfer;\\n\\n    constructor() ERC20(\\\"PayPal USD\\\", \\\"PYUSD\\\") {\\n        _decimals = 6;\\n        _mint(msg.sender, 1000000 * 10**_decimals); // 1m pyusd for testing\\n    }\\n\\n    function decimals() public view virtual override returns (uint8) {\\n        return _decimals;\\n    }\\n\\n    function mint(address to, uint256 amount) external {\\n        _mint(to, amount);\\n    }\\n\\n    function burn(address from, uint256 amount) external {\\n        _burn(from, amount);\\n    }\\n\\n    function setBalance(address account, uint256 amount) external {\\n        uint256 currentBalance = balanceOf(account);\\n        if (amount > currentBalance) {\\n            _mint(account, amount - currentBalance);\\n        } else if (amount < currentBalance) {\\n            _burn(account, currentBalance - amount);\\n        }\\n    }\\n\\n    function setTransferFailing(bool failing) external {\\n        transferFailing = failing;\\n    }\\n\\n    function setForceFailOnTransfer(address account, bool fail) external {\\n        forceFailOnTransfer[account] = fail;\\n    }\\n\\n    function transfer(address to, uint256 amount) public override returns (bool) {\\n        if (transferFailing || forceFailOnTransfer[msg.sender]) {\\n            return false; // simulate transfer failures for testing\\n        }\\n        return super.transfer(to, amount);\\n    }\\n\\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\\n        if (transferFailing || forceFailOnTransfer[from]) {\\n            return false;\\n        }\\n        return super.transferFrom(from, to, amount);\\n    }\\n}\",\"keccak256\":\"0x70ca3353f7f1595a5025206386ae2cd978ba57459be7541732faedcc7271b564\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":397,"contract":"contracts/MockPYUSD.sol:MockPYUSD","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":403,"contract":"contracts/MockPYUSD.sol:MockPYUSD","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":405,"contract":"contracts/MockPYUSD.sol:MockPYUSD","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":407,"contract":"contracts/MockPYUSD.sol:MockPYUSD","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":409,"contract":"contracts/MockPYUSD.sol:MockPYUSD","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":1923,"contract":"contracts/MockPYUSD.sol:MockPYUSD","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"},{"astId":1925,"contract":"contracts/MockPYUSD.sol:MockPYUSD","label":"transferFailing","offset":1,"slot":"5","type":"t_bool"},{"astId":1929,"contract":"contracts/MockPYUSD.sol:MockPYUSD","label":"forceFailOnTransfer","offset":0,"slot":"6","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RelayerRegistry.sol":{"RelayerRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"_pyusdAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"EmergencySlash","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"},{"indexed":false,"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"ExecutionRecorded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"stakedAmount","type":"uint256"}],"name":"RelayerRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newStake","type":"uint256"}],"name":"RelayerRestaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"slashAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"remainingStake","type":"uint256"}],"name":"RelayerSlashed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"returnedStake","type":"uint256"}],"name":"RelayerUnregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"slashAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"failureThreshold","type":"uint256"}],"name":"SlashingParametersUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"relayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"requestTime","type":"uint256"}],"name":"WithdrawalRequested","type":"event"},{"inputs":[],"name":"CONSECUTIVE_FAILURES_THRESHOLD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINIMUM_STAKE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PYUSD_ADDRESS","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SLASHING_COOLDOWN","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SLASH_AMOUNT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WITHDRAWAL_DELAY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayerAddress","type":"address"}],"name":"canExecute","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"consecutiveFailures","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayerAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"emergencySlash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"relayerAddress","type":"address"}],"name":"emergencyUnslash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"failureThresholdConfig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayerAddress","type":"address"}],"name":"getConsecutiveFailures","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayerAddress","type":"address"}],"name":"getRelayerInfo","outputs":[{"components":[{"internalType":"uint256","name":"stakedAmount","type":"uint256"},{"internalType":"uint256","name":"successfulExecutions","type":"uint256"},{"internalType":"uint256","name":"failedExecutions","type":"uint256"},{"internalType":"uint256","name":"totalFeesEarned","type":"uint256"},{"internalType":"uint256","name":"withdrawalRequestTime","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"withdrawalRequested","type":"bool"}],"internalType":"struct RelayerRegistry.Relayer","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayerAddress","type":"address"}],"name":"getRelayerStats","outputs":[{"internalType":"uint256","name":"stakedAmount","type":"uint256"},{"internalType":"uint256","name":"successfulExecutions","type":"uint256"},{"internalType":"uint256","name":"failedExecutions","type":"uint256"},{"internalType":"uint256","name":"totalFeesEarned","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayerAddress","type":"address"}],"name":"getTimeUntilSlashCooldown","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayerAddress","type":"address"}],"name":"isRelayerActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isSlashed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lastSlashTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"relayerAddress","type":"address"},{"internalType":"bool","name":"success","type":"bool"},{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"name":"recordExecution","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"stakeAmount","type":"uint256"}],"name":"registerRelayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"relayers","outputs":[{"internalType":"uint256","name":"stakedAmount","type":"uint256"},{"internalType":"uint256","name":"successfulExecutions","type":"uint256"},{"internalType":"uint256","name":"failedExecutions","type":"uint256"},{"internalType":"uint256","name":"totalFeesEarned","type":"uint256"},{"internalType":"uint256","name":"withdrawalRequestTime","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"withdrawalRequested","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestWithdrawal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"restakeAfterSlash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_subscriptionManager","type":"address"}],"name":"setSubscriptionManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slashAmountConfig","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"subscriptionManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unregisterRelayer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"slashAmount","type":"uint256"},{"internalType":"uint256","name":"failureThreshold","type":"uint256"}],"name":"updateSlashingParameters","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"errors":{"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}],"SafeERC20FailedOperation(address)":[{"details":"An operation with an ERC-20 token failed."}]},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60a03461013f57601f6118cc38819003918201601f19168301916001600160401b038311848410176101445780849260209460405283398101031261013f57516001600160a01b03811680820361013f57600160005533156101295760018054336001600160a01b0319821681179092556040519291906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36305f5e1006003556003600455156100e75750608052604051611771908161015b82396080518181816101b2015281816104f6015281816106730152610b100152f35b62461bcd60e51b815260206004820152601560248201527f496e76616c6964205059555344206164647265737300000000000000000000006044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c8062359015146112e857806306bfd20b146111f057806308dbbb03146111d15780630ebb172a146111b357806315d397541461119557806320e732cd146110fe57806337720606146110df5780635300f8411461105c578063546b83ad146103f75780636272430614610ff1578063715018a614610f945780637f20265414610f5a57806383a9f7fc14610f1857806385c99e2b14610e9b578063894f8c7214610bfe5780638ce37cc414610ab35780638da5cb5b14610a8a578063ab576cb514610a6c578063b4bb6c0d14610a50578063b63f3b8a14610953578063b799036c14610914578063bf158fd2146108eb578063c05b358514610830578063ceb88df814610812578063d53f8a631461076f578063dbaf2145146106a2578063e2b025761461065d578063e6d1b24014610431578063efdac37c146103f7578063f2fde38b1461036d5763f5855d161461017057600080fd5b346103685760203660031901126103685760043561018c6115b4565b33600052600260205260406000205461032357633b9aca0081106102de576101df8130337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166115d6565b6040516101eb8161139e565b81815260208101600081526005604083019260008452606081016000815260808201906000825260a08301956001875260c084019560008752336000526002602052604060002094518555516001850155516002840155516003830155516004820155019151151560ff8019845416911617825551151561ff0082549160081b169061ff00191617905533600052600660205260006040812055336000526007602052604060002060ff198154169055336000526005602052600060408120556040519081527f193a79fd17752d71da6eaba98e99be182b006d3e3178dd96b26a52f905e23e7d60203392a26001600055005b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e74207374616b6520616d6f756e74000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f52656c6179657220616c726561647920726567697374657265640000000000006044820152606490fd5b600080fd5b3461036857602036600319011261036857610386611313565b61038e61158b565b6001600160a01b031680156103e157600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b34610368576020366003190112610368576001600160a01b03610418611313565b1660005260066020526020604060002054604051908152f35b346103685760003660031901126103685761044a6115b4565b33600052600260205260406000206005810190815461046b60ff8216611479565b815492610479841515611434565b60ff8260081c1615610618576004830191825462093a8081018091116106025742106105bd576000809433825260076020526104bc60ff604084205416156114ba565b5561ffff191690555560405163a9059cbb60e01b602082015233602482015260448082018390528152610523906104f46064826113d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166116d4565b6040519081527f1febc9d304fb99c3cd8bc5ffe8b9219d7676ffad2aa8cfa3a8286ea93092244c60203392a2336000526002602052600060056040822082815582600182015582600282015582600382015582600482015501553360005260066020526000604081205533600052600560205260006040812055336000526007602052604060002060ff1981541690556001600055600080f35b60405162461bcd60e51b815260206004820152601860248201527f5769746864726177616c2064656c6179206e6f74206d657400000000000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601d60248201527f4d7573742072657175657374207769746864726177616c2066697273740000006044820152606490fd5b34610368576000366003190112610368576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346103685760003660031901126103685733600052600260205260406000206005810180546106d360ff8216611479565b6106df83541515611434565b60ff8160081c1661072a576101009061ff0019161790556004429101556040514281527fe670e4e82118d22a1f9ee18920455ebc958bae26a90a05d31d3378788b1b0e4460203392a2005b60405162461bcd60e51b815260206004820152601c60248201527f5769746864726177616c20616c726561647920726571756573746564000000006044820152606490fd5b346103685760403660031901126103685760043560243561078e61158b565b610799821515611507565b80156107d957816040917fcaf538385e067c71f144fcab1890f637fa60fb1ab456f6a023a4c9427df9deb7936003558060045582519182526020820152a1005b60405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081d1a1c995cda1bdb19607a1b6044820152606490fd5b34610368576000366003190112610368576020600454604051908152f35b3461036857602036600319011261036857610849611313565b61085161158b565b6001600160a01b031680156108b4576008546001600160a01b038116610881576001600160a01b03191617600855005b60405162461bcd60e51b815260206004820152600b60248201526a105b1c9958591e481cd95d60aa1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b34610368576000366003190112610368576008546040516001600160a01b039091168152602090f35b34610368576020366003190112610368576001600160a01b03610935611313565b166000526007602052602060ff604060002054166040519015158152f35b346103685760603660031901126103685761096c611313565b60243560443567ffffffffffffffff8111610368573660238201121561036857806004013567ffffffffffffffff8111610368573660248284010111610368577fb29f077e0f1bff1879b3429feea103b77c429db336ffc4f31154f266038a5c9c926060916109d961158b565b6109e4821515611507565b610a1c8260018060a01b03881697886000526002602052610a17604060002054610a108482101561154a565b1515611434565b611621565b80602460405195869485526040602086015282604086015201848401376000828201840152601f01601f19168101030190a2005b3461036857600036600319011261036857602060405160038152f35b34610368576000366003190112610368576020604051620151808152f35b34610368576000366003190112610368576001546040516001600160a01b039091168152602090f35b3461036857602036600319011261036857600435610acf6115b4565b336000526007602052610ae960ff604060002054166113f2565b8015610bc857336000526002602052610b086040600020541515611434565b610b3d8130337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166115d6565b3360005260026020526040600020633b9aca00610b5b838354611329565b8083551015610b9e575b5460405191825260208201527f610e5fc0d3114f2abb2801d5c0fdd8f3db27b0fbbf30da68155090bb63a1778560403392a26001600055005b60058101600160ff19825416179055336000526007602052604060002060ff198154169055610b65565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b3461036857606036600319011261036857610c17611313565b602435801515908181036103685760085460443591906001600160a01b03163303610e565760018060a01b03841693846000526002602052604060002091610c6183541515611434565b610c7160ff600585015416611479565b856000526007602052610c8c60ff60406000205416156114ba565b15610cf557509160409160038460017fc799a6e963130dbc0f01e269475a49a5da606f63b2f40ae03f66e7af420762959601610cc881546114f8565b905501610cd6828254611329565b90558460005260066020526000838120555b82519182526020820152a2005b90600201610d0381546114f8565b90558360005260066020526040600020610d1d81546114f8565b90558360005260066020526040600020546004541115610d63575b507fc799a6e963130dbc0f01e269475a49a5da606f63b2f40ae03f66e7af4207629591604091610ce8565b91600354918460005260026020528260406000205410610e1157846000526005602052604060002054620151808101809111610602574210610dd457610dcc6040937fc799a6e963130dbc0f01e269475a49a5da606f63b2f40ae03f66e7af4207629595611621565b915091610d38565b60405162461bcd60e51b8152602060048201526015602482015274536c61736820636f6f6c646f776e2061637469766560581b6044820152606490fd5b60405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e74207374616b6520746f20736c61736800000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c7920537562736372697074696f6e4d616e6167657200000000000000006044820152606490fd5b346103685760203660031901126103685760206001600160a01b03610ebe611313565b168060005260028252604060002060ff6005820154169182610efd575b5081610eed575b506040519015158152f35b633b9aca00915054101582610ee2565b9091506000526007825260ff60406000205416159083610edb565b34610368576020366003190112610368576001600160a01b03610f39611313565b166000526002602052602060ff600560406000200154166040519015158152f35b34610368576020366003190112610368576001600160a01b03610f7b611313565b1660005260056020526020604060002054604051908152f35b3461036857600036600319011261036857610fad61158b565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610368576020366003190112610368576001600160a01b03611012611313565b16600052600260205260a06040600020805490600181015490600281015460ff60056003840154930154169260405194855260208501526040840152606083015215156080820152f35b34610368576020366003190112610368576001600160a01b0361107d611313565b16600052600260205260e0604060002060ff815491600181015490600281015460038201549060056004840154930154936040519687526020870152604086015260608501526080840152818116151560a084015260081c16151560c0820152f35b346103685760003660031901126103685760206040516305f5e1008152f35b3461036857602036600319011261036857611117611313565b61111f61158b565b6001600160a01b03166000818152600760205260409020546111439060ff166113f2565b806000526007602052604060002060ff1981541690558060005260066020526000604081205560005260026020526040600020633b9aca008154101561118557005b600501805460ff19166001179055005b34610368576000366003190112610368576020600354604051908152f35b3461036857600036600319011261036857602060405162093a808152f35b34610368576000366003190112610368576020604051633b9aca008152f35b3461036857602036600319011261036857611209611313565b600060c06040516112198161139e565b8281528260208201528260408201528260608201528260808201528260a0820152015260018060a01b0316600052600260205260e06040600020604051906112608261139e565b805491828152600182015491602082019283526002810154604083019081526003820154906060840191825260056004840154936080860194855201549460ff60c060a087019682891615158852019660081c161515865260405196875251602087015251604086015251606085015251608084015251151560a083015251151560c0820152f35b3461036857602036600319011261036857602061130b611306611313565b611343565b604051908152f35b600435906001600160a01b038216820361036857565b9190820180921161060257565b9190820391821161060257565b6001600160a01b03166000818152600560205260409020546201518081019081106106025742101561139857600052600560205260406000205462015180810180911161060257611395904290611336565b90565b50600090565b60e0810190811067ffffffffffffffff8211176113ba57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176113ba57604052565b156113f957565b60405162461bcd60e51b815260206004820152601360248201527214995b185e595c881b9bdd081cdb185cda1959606a1b6044820152606490fd5b1561143b57565b60405162461bcd60e51b815260206004820152601660248201527514995b185e595c881b9bdd081c9959da5cdd195c995960521b6044820152606490fd5b1561148057565b60405162461bcd60e51b815260206004820152601260248201527152656c61796572206e6f742061637469766560701b6044820152606490fd5b156114c157565b60405162461bcd60e51b815260206004820152600f60248201526e14995b185e595c881cdb185cda1959608a1b6044820152606490fd5b60001981146106025760010190565b1561150e57565b60405162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081cdb185cda08185b5bdd5b9d60621b6044820152606490fd5b1561155157565b60405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74207374616b6560701b6044820152606490fd5b6001546001600160a01b0316330361159f57565b63118cdaa760e01b6000523360045260246000fd5b6002600054146115c5576002600055565b633ee5aeb560e01b60005260046000fd5b6040516323b872dd60e01b60208201526001600160a01b03928316602482015292909116604483015260648083019390935291815261161f9161161a6084836113d0565b6116d4565b565b60407f4ccd10aa8a641e19c262018438ab4cbaa91e683a875ddd178515bc2cc6869ec69160018060a01b03169283600052600260205281600020611668828254101561154a565b846000526005602052428360002055611682828254611336565b8155600085815260076020908152848220805460ff191660011790556006905283812055805490633b9aca0082106116c3575b5082519182526020820152a2565b600501805460ff19169055386116b5565b906000602091828151910182855af11561172f576000513d61172657506001600160a01b0381163b155b6117055750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b600114156116fe565b6040513d6000823e3d90fdfea2646970667358221220ef7541d85590776545047ce5f13c1e4a2a7e03a4cf51b7c2ae327bd28bfd240a64736f6c634300081c0033","opcodes":"PUSH1 0xA0 CALLVALUE PUSH2 0x13F JUMPI PUSH1 0x1F PUSH2 0x18CC CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x144 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x13F JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP1 DUP3 SUB PUSH2 0x13F JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE CALLER ISZERO PUSH2 0x129 JUMPI PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH4 0x5F5E100 PUSH1 0x3 SSTORE PUSH1 0x3 PUSH1 0x4 SSTORE ISZERO PUSH2 0xE7 JUMPI POP PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1771 SWAP1 DUP2 PUSH2 0x15B DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x1B2 ADD MSTORE DUP2 DUP2 PUSH2 0x4F6 ADD MSTORE DUP2 DUP2 PUSH2 0x673 ADD MSTORE PUSH2 0xB10 ADD MSTORE RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420505955534420616464726573730000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x359015 EQ PUSH2 0x12E8 JUMPI DUP1 PUSH4 0x6BFD20B EQ PUSH2 0x11F0 JUMPI DUP1 PUSH4 0x8DBBB03 EQ PUSH2 0x11D1 JUMPI DUP1 PUSH4 0xEBB172A EQ PUSH2 0x11B3 JUMPI DUP1 PUSH4 0x15D39754 EQ PUSH2 0x1195 JUMPI DUP1 PUSH4 0x20E732CD EQ PUSH2 0x10FE JUMPI DUP1 PUSH4 0x37720606 EQ PUSH2 0x10DF JUMPI DUP1 PUSH4 0x5300F841 EQ PUSH2 0x105C JUMPI DUP1 PUSH4 0x546B83AD EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x62724306 EQ PUSH2 0xFF1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF94 JUMPI DUP1 PUSH4 0x7F202654 EQ PUSH2 0xF5A JUMPI DUP1 PUSH4 0x83A9F7FC EQ PUSH2 0xF18 JUMPI DUP1 PUSH4 0x85C99E2B EQ PUSH2 0xE9B JUMPI DUP1 PUSH4 0x894F8C72 EQ PUSH2 0xBFE JUMPI DUP1 PUSH4 0x8CE37CC4 EQ PUSH2 0xAB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA8A JUMPI DUP1 PUSH4 0xAB576CB5 EQ PUSH2 0xA6C JUMPI DUP1 PUSH4 0xB4BB6C0D EQ PUSH2 0xA50 JUMPI DUP1 PUSH4 0xB63F3B8A EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xB799036C EQ PUSH2 0x914 JUMPI DUP1 PUSH4 0xBF158FD2 EQ PUSH2 0x8EB JUMPI DUP1 PUSH4 0xC05B3585 EQ PUSH2 0x830 JUMPI DUP1 PUSH4 0xCEB88DF8 EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0xD53F8A63 EQ PUSH2 0x76F JUMPI DUP1 PUSH4 0xDBAF2145 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xE2B02576 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xE6D1B240 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xEFDAC37C EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x36D JUMPI PUSH4 0xF5855D16 EQ PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x18C PUSH2 0x15B4 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x323 JUMPI PUSH4 0x3B9ACA00 DUP2 LT PUSH2 0x2DE JUMPI PUSH2 0x1DF DUP2 ADDRESS CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB DUP2 PUSH2 0x139E JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x0 DUP5 MSTORE PUSH1 0x60 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0xA0 DUP4 ADD SWAP6 PUSH1 0x1 DUP8 MSTORE PUSH1 0xC0 DUP5 ADD SWAP6 PUSH1 0x0 DUP8 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 MLOAD DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP2 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP5 SLOAD AND SWAP2 AND OR DUP3 SSTORE MLOAD ISZERO ISZERO PUSH2 0xFF00 DUP3 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x193A79FD17752D71DA6EABA98E99BE182B006D3E3178DD96B26A52F905E23E7D PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B6520616D6F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656C6179657220616C72656164792072656769737465726564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x386 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x38E PUSH2 0x158B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x418 PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x44A PUSH2 0x15B4 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP2 ADD SWAP1 DUP2 SLOAD PUSH2 0x46B PUSH1 0xFF DUP3 AND PUSH2 0x1479 JUMP JUMPDEST DUP2 SLOAD SWAP3 PUSH2 0x479 DUP5 ISZERO ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO PUSH2 0x618 JUMPI PUSH1 0x4 DUP4 ADD SWAP2 DUP3 SLOAD PUSH3 0x93A80 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x602 JUMPI TIMESTAMP LT PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 SWAP5 CALLER DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x4BC PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x14BA JUMP JUMPDEST SSTORE PUSH2 0xFFFF NOT AND SWAP1 SSTORE SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 MSTORE PUSH2 0x523 SWAP1 PUSH2 0x4F4 PUSH1 0x64 DUP3 PUSH2 0x13D0 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x1FEBC9D304FB99C3CD8BC5FFE8B9219D7676FFAD2AA8CFA3A8286EA93092244C PUSH1 0x20 CALLER SWAP3 LOG2 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x5 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C2064656C6179206E6F74206D65740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742072657175657374207769746864726177616C206669727374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0x6D3 PUSH1 0xFF DUP3 AND PUSH2 0x1479 JUMP JUMPDEST PUSH2 0x6DF DUP4 SLOAD ISZERO ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH2 0x72A JUMPI PUSH2 0x100 SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x4 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xE670E4E82118D22A1F9EE18920455EBC958BAE26A90A05D31D3378788B1B0E44 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616C72656164792072657175657374656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x78E PUSH2 0x158B JUMP JUMPDEST PUSH2 0x799 DUP3 ISZERO ISZERO PUSH2 0x1507 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D9 JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH32 0xCAF538385E067C71F144FCAB1890F637FA60FB1AB456F6A023A4C9427DF9DEB7 SWAP4 PUSH1 0x3 SSTORE DUP1 PUSH1 0x4 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081D1A1C995CDA1BDB19 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x849 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x851 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x881 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x8 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x105B1C9958591E481CD95D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x935 PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x96C PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x368 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x368 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x368 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x368 JUMPI PUSH32 0xB29F077E0F1BFF1879B3429FEEA103B77C429DB336FFC4F31154F266038A5C9C SWAP3 PUSH1 0x60 SWAP2 PUSH2 0x9D9 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x9E4 DUP3 ISZERO ISZERO PUSH2 0x1507 JUMP JUMPDEST PUSH2 0xA1C DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP8 DUP9 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xA17 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA10 DUP5 DUP3 LT ISZERO PUSH2 0x154A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x1621 JUMP JUMPDEST DUP1 PUSH1 0x24 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 MSTORE PUSH1 0x40 PUSH1 0x20 DUP7 ADD MSTORE DUP3 PUSH1 0x40 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xACF PUSH2 0x15B4 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xAE9 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x13F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC8 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xB08 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH2 0xB3D DUP2 ADDRESS CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D6 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH4 0x3B9ACA00 PUSH2 0xB5B DUP4 DUP4 SLOAD PUSH2 0x1329 JUMP JUMPDEST DUP1 DUP4 SSTORE LT ISZERO PUSH2 0xB9E JUMPI JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x610E5FC0D3114F2ABB2801D5C0FDD8F3DB27B0FBBF30DA68155090BB63A17785 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x5 DUP2 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0xC17 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SWAP1 DUP2 DUP2 SUB PUSH2 0x368 JUMPI PUSH1 0x8 SLOAD PUSH1 0x44 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE56 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xC61 DUP4 SLOAD ISZERO ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH2 0xC71 PUSH1 0xFF PUSH1 0x5 DUP6 ADD SLOAD AND PUSH2 0x1479 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xC8C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x14BA JUMP JUMPDEST ISZERO PUSH2 0xCF5 JUMPI POP SWAP2 PUSH1 0x40 SWAP2 PUSH1 0x3 DUP5 PUSH1 0x1 PUSH32 0xC799A6E963130DBC0F01E269475A49A5DA606F63B2F40AE03F66E7AF42076295 SWAP7 ADD PUSH2 0xCC8 DUP2 SLOAD PUSH2 0x14F8 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0xCD6 DUP3 DUP3 SLOAD PUSH2 0x1329 JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 DUP4 DUP2 KECCAK256 SSTORE JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST SWAP1 PUSH1 0x2 ADD PUSH2 0xD03 DUP2 SLOAD PUSH2 0x14F8 JUMP JUMPDEST SWAP1 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xD1D DUP2 SLOAD PUSH2 0x14F8 JUMP JUMPDEST SWAP1 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 SLOAD GT ISZERO PUSH2 0xD63 JUMPI JUMPDEST POP PUSH32 0xC799A6E963130DBC0F01E269475A49A5DA606F63B2F40AE03F66E7AF42076295 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xCE8 JUMP JUMPDEST SWAP2 PUSH1 0x3 SLOAD SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0xE11 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x602 JUMPI TIMESTAMP LT PUSH2 0xDD4 JUMPI PUSH2 0xDCC PUSH1 0x40 SWAP4 PUSH32 0xC799A6E963130DBC0F01E269475A49A5DA606F63B2F40AE03F66E7AF42076295 SWAP6 PUSH2 0x1621 JUMP JUMPDEST SWAP2 POP SWAP2 PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x536C61736820636F6F6C646F776E20616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B6520746F20736C6173680000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920537562736372697074696F6E4D616E616765720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEBE PUSH2 0x1313 JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x5 DUP3 ADD SLOAD AND SWAP2 DUP3 PUSH2 0xEFD JUMPI JUMPDEST POP DUP2 PUSH2 0xEED JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x3B9ACA00 SWAP2 POP SLOAD LT ISZERO DUP3 PUSH2 0xEE2 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP1 DUP4 PUSH2 0xEDB JUMP JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF39 PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF7B PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0xFAD PUSH2 0x158B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1012 PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x5 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x107D PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x1117 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x111F PUSH2 0x158B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1143 SWAP1 PUSH1 0xFF AND PUSH2 0x13F2 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH4 0x3B9ACA00 DUP2 SLOAD LT ISZERO PUSH2 0x1185 JUMPI STOP JUMPDEST PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x3B9ACA00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x1209 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 PUSH1 0x40 MLOAD PUSH2 0x1219 DUP2 PUSH2 0x139E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1260 DUP3 PUSH2 0x139E JUMP JUMPDEST DUP1 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x60 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP7 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP5 PUSH1 0xFF PUSH1 0xC0 PUSH1 0xA0 DUP8 ADD SWAP7 DUP3 DUP10 AND ISZERO ISZERO DUP9 MSTORE ADD SWAP7 PUSH1 0x8 SHR AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE MLOAD PUSH1 0x20 DUP8 ADD MSTORE MLOAD PUSH1 0x40 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH2 0x130B PUSH2 0x1306 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x368 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x602 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x602 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD SWAP1 DUP2 LT PUSH2 0x602 JUMPI TIMESTAMP LT ISZERO PUSH2 0x1398 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x602 JUMPI PUSH2 0x1395 SWAP1 TIMESTAMP SWAP1 PUSH2 0x1336 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x13BA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x13BA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x13F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14995B185E595C881B9BDD081CDB185CDA1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x143B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995B185E595C881B9BDD081C9959DA5CDD195C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1480 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x52656C61796572206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x14C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14995B185E595C881CDB185CDA1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x602 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x150E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081CDB185CDA08185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1551 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E74207374616B65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x159F JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x15C5 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x161F SWAP2 PUSH2 0x161A PUSH1 0x84 DUP4 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x16D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 PUSH32 0x4CCD10AA8A641E19C262018438AB4CBAA91E683A875DDD178515BC2CC6869EC6 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 KECCAK256 PUSH2 0x1668 DUP3 DUP3 SLOAD LT ISZERO PUSH2 0x154A JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE TIMESTAMP DUP4 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x1682 DUP3 DUP3 SLOAD PUSH2 0x1336 JUMP JUMPDEST DUP2 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SWAP1 MSTORE DUP4 DUP2 KECCAK256 SSTORE DUP1 SLOAD SWAP1 PUSH4 0x3B9ACA00 DUP3 LT PUSH2 0x16C3 JUMPI JUMPDEST POP DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 JUMP JUMPDEST PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CODESIZE PUSH2 0x16B5 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x172F JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x1726 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1705 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF PUSH22 0x41D85590776545047CE5F13C1E4A2A7E03A4CF51B7C2 0xAE ORIGIN PUSH28 0xD28BFD240A64736F6C634300081C0033000000000000000000000000 ","sourceMap":"294:10469:14:-:0;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;-1:-1:-1;;;;;294:10469:14;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;294:10469:14;;;;;;;1857:1:10;-1:-1:-1;798:5:14;2427:10;1273:26:0;1269:95;;1857:1:10;294:10469:14;;2427:10;-1:-1:-1;;;;;;294:10469:14;;;;;;;;;;;2427:10;-1:-1:-1;;;;;294:10469:14;3052:40:0;-1:-1:-1;;3052:40:0;798:5:14;965:12;798:5;965:12;1023:30;798:5;2457:27;866:1;;2520:29;;;294:10469;;;;;;;;2520:29;294:10469;;;;;;;;;;;;;;;;;;;;;866:1;-1:-1:-1;;;866:1:14;;294:10469;1023:30;866:1;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;294:10469:14;;-1:-1:-1;1322:31:0;294:10469:14;-1:-1:-1;294:10469:14;;;;;;-1:-1:-1;294:10469:14;;;;;-1:-1:-1;294:10469:14"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4883,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_uint256":{"entryPoint":4905,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":4918,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":5072,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_20922":{"entryPoint":5022,"id":null,"parameterSlots":1,"returnSlots":0},"fun_applySlash":{"entryPoint":5665,"id":3114,"parameterSlots":2,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":5844,"id":1415,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":5515,"id":84,"parameterSlots":0,"returnSlots":0},"fun_getTimeUntilSlashCooldown":{"entryPoint":4931,"id":2783,"parameterSlots":1,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":5556,"id":1536,"parameterSlots":0,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":5590,"id":1065,"parameterSlots":4,"returnSlots":0},"increment_uint256":{"entryPoint":5368,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":5450,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0b3f":{"entryPoint":5383,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5b40":{"entryPoint":5172,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5f38":{"entryPoint":5306,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e07c":{"entryPoint":5241,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e986":{"entryPoint":5106,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"2174":[{"length":32,"start":434},{"length":32,"start":1270},{"length":32,"start":1651},{"length":32,"start":2832}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x359015 EQ PUSH2 0x12E8 JUMPI DUP1 PUSH4 0x6BFD20B EQ PUSH2 0x11F0 JUMPI DUP1 PUSH4 0x8DBBB03 EQ PUSH2 0x11D1 JUMPI DUP1 PUSH4 0xEBB172A EQ PUSH2 0x11B3 JUMPI DUP1 PUSH4 0x15D39754 EQ PUSH2 0x1195 JUMPI DUP1 PUSH4 0x20E732CD EQ PUSH2 0x10FE JUMPI DUP1 PUSH4 0x37720606 EQ PUSH2 0x10DF JUMPI DUP1 PUSH4 0x5300F841 EQ PUSH2 0x105C JUMPI DUP1 PUSH4 0x546B83AD EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0x62724306 EQ PUSH2 0xFF1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF94 JUMPI DUP1 PUSH4 0x7F202654 EQ PUSH2 0xF5A JUMPI DUP1 PUSH4 0x83A9F7FC EQ PUSH2 0xF18 JUMPI DUP1 PUSH4 0x85C99E2B EQ PUSH2 0xE9B JUMPI DUP1 PUSH4 0x894F8C72 EQ PUSH2 0xBFE JUMPI DUP1 PUSH4 0x8CE37CC4 EQ PUSH2 0xAB3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA8A JUMPI DUP1 PUSH4 0xAB576CB5 EQ PUSH2 0xA6C JUMPI DUP1 PUSH4 0xB4BB6C0D EQ PUSH2 0xA50 JUMPI DUP1 PUSH4 0xB63F3B8A EQ PUSH2 0x953 JUMPI DUP1 PUSH4 0xB799036C EQ PUSH2 0x914 JUMPI DUP1 PUSH4 0xBF158FD2 EQ PUSH2 0x8EB JUMPI DUP1 PUSH4 0xC05B3585 EQ PUSH2 0x830 JUMPI DUP1 PUSH4 0xCEB88DF8 EQ PUSH2 0x812 JUMPI DUP1 PUSH4 0xD53F8A63 EQ PUSH2 0x76F JUMPI DUP1 PUSH4 0xDBAF2145 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xE2B02576 EQ PUSH2 0x65D JUMPI DUP1 PUSH4 0xE6D1B240 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xEFDAC37C EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x36D JUMPI PUSH4 0xF5855D16 EQ PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x18C PUSH2 0x15B4 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x323 JUMPI PUSH4 0x3B9ACA00 DUP2 LT PUSH2 0x2DE JUMPI PUSH2 0x1DF DUP2 ADDRESS CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB DUP2 PUSH2 0x139E JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x0 DUP5 MSTORE PUSH1 0x60 DUP2 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 PUSH1 0x0 DUP3 MSTORE PUSH1 0xA0 DUP4 ADD SWAP6 PUSH1 0x1 DUP8 MSTORE PUSH1 0xC0 DUP5 ADD SWAP6 PUSH1 0x0 DUP8 MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP5 MLOAD DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 DUP3 ADD SSTORE ADD SWAP2 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP5 SLOAD AND SWAP2 AND OR DUP3 SSTORE MLOAD ISZERO ISZERO PUSH2 0xFF00 DUP3 SLOAD SWAP2 PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x193A79FD17752D71DA6EABA98E99BE182B006D3E3178DD96B26A52F905E23E7D PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B6520616D6F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x52656C6179657220616C72656164792072656769737465726564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x386 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x38E PUSH2 0x158B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3E1 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x418 PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x44A PUSH2 0x15B4 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP2 ADD SWAP1 DUP2 SLOAD PUSH2 0x46B PUSH1 0xFF DUP3 AND PUSH2 0x1479 JUMP JUMPDEST DUP2 SLOAD SWAP3 PUSH2 0x479 DUP5 ISZERO ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND ISZERO PUSH2 0x618 JUMPI PUSH1 0x4 DUP4 ADD SWAP2 DUP3 SLOAD PUSH3 0x93A80 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x602 JUMPI TIMESTAMP LT PUSH2 0x5BD JUMPI PUSH1 0x0 DUP1 SWAP5 CALLER DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x4BC PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x14BA JUMP JUMPDEST SSTORE PUSH2 0xFFFF NOT AND SWAP1 SSTORE SSTORE PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 MSTORE PUSH2 0x523 SWAP1 PUSH2 0x4F4 PUSH1 0x64 DUP3 PUSH2 0x13D0 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x16D4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x1FEBC9D304FB99C3CD8BC5FFE8B9219D7676FFAD2AA8CFA3A8286EA93092244C PUSH1 0x20 CALLER SWAP3 LOG2 CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x5 PUSH1 0x40 DUP3 KECCAK256 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C2064656C6179206E6F74206D65740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742072657175657374207769746864726177616C206669727374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH2 0x6D3 PUSH1 0xFF DUP3 AND PUSH2 0x1479 JUMP JUMPDEST PUSH2 0x6DF DUP4 SLOAD ISZERO ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND PUSH2 0x72A JUMPI PUSH2 0x100 SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE PUSH1 0x4 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE PUSH32 0xE670E4E82118D22A1F9EE18920455EBC958BAE26A90A05D31D3378788B1B0E44 PUSH1 0x20 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177616C20616C72656164792072657175657374656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0x78E PUSH2 0x158B JUMP JUMPDEST PUSH2 0x799 DUP3 ISZERO ISZERO PUSH2 0x1507 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D9 JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH32 0xCAF538385E067C71F144FCAB1890F637FA60FB1AB456F6A023A4C9427DF9DEB7 SWAP4 PUSH1 0x3 SSTORE DUP1 PUSH1 0x4 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081D1A1C995CDA1BDB19 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x849 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x851 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x881 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x8 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x105B1C9958591E481CD95D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x935 PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x96C PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x368 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x368 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x368 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 DUP5 ADD ADD GT PUSH2 0x368 JUMPI PUSH32 0xB29F077E0F1BFF1879B3429FEEA103B77C429DB336FFC4F31154F266038A5C9C SWAP3 PUSH1 0x60 SWAP2 PUSH2 0x9D9 PUSH2 0x158B JUMP JUMPDEST PUSH2 0x9E4 DUP3 ISZERO ISZERO PUSH2 0x1507 JUMP JUMPDEST PUSH2 0xA1C DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP8 DUP9 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xA17 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xA10 DUP5 DUP3 LT ISZERO PUSH2 0x154A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH2 0x1621 JUMP JUMPDEST DUP1 PUSH1 0x24 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 MSTORE PUSH1 0x40 PUSH1 0x20 DUP7 ADD MSTORE DUP3 PUSH1 0x40 DUP7 ADD MSTORE ADD DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SUB ADD SWAP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x15180 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xACF PUSH2 0x15B4 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xAE9 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x13F2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBC8 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0xB08 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH2 0xB3D DUP2 ADDRESS CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15D6 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH4 0x3B9ACA00 PUSH2 0xB5B DUP4 DUP4 SLOAD PUSH2 0x1329 JUMP JUMPDEST DUP1 DUP4 SSTORE LT ISZERO PUSH2 0xB9E JUMPI JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x610E5FC0D3114F2ABB2801D5C0FDD8F3DB27B0FBBF30DA68155090BB63A17785 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x5 DUP2 ADD PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0xB65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0xC17 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SWAP1 DUP2 DUP2 SUB PUSH2 0x368 JUMPI PUSH1 0x8 SLOAD PUSH1 0x44 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE56 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xC61 DUP4 SLOAD ISZERO ISZERO PUSH2 0x1434 JUMP JUMPDEST PUSH2 0xC71 PUSH1 0xFF PUSH1 0x5 DUP6 ADD SLOAD AND PUSH2 0x1479 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0xC8C PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x14BA JUMP JUMPDEST ISZERO PUSH2 0xCF5 JUMPI POP SWAP2 PUSH1 0x40 SWAP2 PUSH1 0x3 DUP5 PUSH1 0x1 PUSH32 0xC799A6E963130DBC0F01E269475A49A5DA606F63B2F40AE03F66E7AF42076295 SWAP7 ADD PUSH2 0xCC8 DUP2 SLOAD PUSH2 0x14F8 JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0xCD6 DUP3 DUP3 SLOAD PUSH2 0x1329 JUMP JUMPDEST SWAP1 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 DUP4 DUP2 KECCAK256 SSTORE JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST SWAP1 PUSH1 0x2 ADD PUSH2 0xD03 DUP2 SLOAD PUSH2 0x14F8 JUMP JUMPDEST SWAP1 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xD1D DUP2 SLOAD PUSH2 0x14F8 JUMP JUMPDEST SWAP1 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x4 SLOAD GT ISZERO PUSH2 0xD63 JUMPI JUMPDEST POP PUSH32 0xC799A6E963130DBC0F01E269475A49A5DA606F63B2F40AE03F66E7AF42076295 SWAP2 PUSH1 0x40 SWAP2 PUSH2 0xCE8 JUMP JUMPDEST SWAP2 PUSH1 0x3 SLOAD SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD LT PUSH2 0xE11 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x602 JUMPI TIMESTAMP LT PUSH2 0xDD4 JUMPI PUSH2 0xDCC PUSH1 0x40 SWAP4 PUSH32 0xC799A6E963130DBC0F01E269475A49A5DA606F63B2F40AE03F66E7AF42076295 SWAP6 PUSH2 0x1621 JUMP JUMPDEST SWAP2 POP SWAP2 PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x536C61736820636F6F6C646F776E20616374697665 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74207374616B6520746F20736C6173680000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920537562736372697074696F6E4D616E616765720000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xEBE PUSH2 0x1313 JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x5 DUP3 ADD SLOAD AND SWAP2 DUP3 PUSH2 0xEFD JUMPI JUMPDEST POP DUP2 PUSH2 0xEED JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x3B9ACA00 SWAP2 POP SLOAD LT ISZERO DUP3 PUSH2 0xEE2 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x7 DUP3 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP1 DUP4 PUSH2 0xEDB JUMP JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF39 PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF7B PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0xFAD PUSH2 0x158B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1012 PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xA0 PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x5 PUSH1 0x3 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x107D PUSH2 0x1313 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x5F5E100 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x1117 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x111F PUSH2 0x158B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1143 SWAP1 PUSH1 0xFF AND PUSH2 0x13F2 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH4 0x3B9ACA00 DUP2 SLOAD LT ISZERO PUSH2 0x1185 JUMPI STOP JUMPDEST PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH4 0x3B9ACA00 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH2 0x1209 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 PUSH1 0x40 MLOAD PUSH2 0x1219 DUP2 PUSH2 0x139E JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1260 DUP3 PUSH2 0x139E JUMP JUMPDEST DUP1 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x60 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP7 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP5 PUSH1 0xFF PUSH1 0xC0 PUSH1 0xA0 DUP8 ADD SWAP7 DUP3 DUP10 AND ISZERO ISZERO DUP9 MSTORE ADD SWAP7 PUSH1 0x8 SHR AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE MLOAD PUSH1 0x20 DUP8 ADD MSTORE MLOAD PUSH1 0x40 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x368 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x368 JUMPI PUSH1 0x20 PUSH2 0x130B PUSH2 0x1306 PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x1343 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x368 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x602 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x602 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD SWAP1 DUP2 LT PUSH2 0x602 JUMPI TIMESTAMP LT ISZERO PUSH2 0x1398 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x15180 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x602 JUMPI PUSH2 0x1395 SWAP1 TIMESTAMP SWAP1 PUSH2 0x1336 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x13BA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x13BA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x13F9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14995B185E595C881B9BDD081CDB185CDA1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x143B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995B185E595C881B9BDD081C9959DA5CDD195C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1480 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x52656C61796572206E6F7420616374697665 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x14C1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x14995B185E595C881CDB185CDA1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x602 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x150E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081CDB185CDA08185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1551 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E73756666696369656E74207374616B65 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x159F JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x15C5 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x161F SWAP2 PUSH2 0x161A PUSH1 0x84 DUP4 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x16D4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 PUSH32 0x4CCD10AA8A641E19C262018438AB4CBAA91E683A875DDD178515BC2CC6869EC6 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 KECCAK256 PUSH2 0x1668 DUP3 DUP3 SLOAD LT ISZERO PUSH2 0x154A JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE TIMESTAMP DUP4 PUSH1 0x0 KECCAK256 SSTORE PUSH2 0x1682 DUP3 DUP3 SLOAD PUSH2 0x1336 JUMP JUMPDEST DUP2 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP5 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x6 SWAP1 MSTORE DUP4 DUP2 KECCAK256 SSTORE DUP1 SLOAD SWAP1 PUSH4 0x3B9ACA00 DUP3 LT PUSH2 0x16C3 JUMPI JUMPDEST POP DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 JUMP JUMPDEST PUSH1 0x5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CODESIZE PUSH2 0x16B5 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x172F JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x1726 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1705 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEF PUSH22 0x41D85590776545047CE5F13C1E4A2A7E03A4CF51B7C2 0xAE ORIGIN PUSH28 0xD28BFD240A64736F6C634300081C0033000000000000000000000000 ","sourceMap":"294:10469:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;2466:103:10;;:::i;:::-;2942:10:14;294:10469;;2933:8;294:10469;;;;;;;;733:6;3020:28;;294:10469;;3284:11;3277:4;;2942:10;3210:13;-1:-1:-1;;;;;294:10469:14;3284:11;:::i;:::-;294:10469;;;;;:::i;:::-;;;;;3330:266;;294:10469;;;;;3330:266;;294:10469;;;;3330:266;;;294:10469;;;3330:266;;;294:10469;;;;3330:266;;;294:10469;;;;3330:266;;;294:10469;;;;2942:10;294:10469;;2933:8;294:10469;;;;;;;;;;;;;;;2933:8;294:10469;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2942:10;294:10469;;3606:19;294:10469;;;;;;;2942:10;294:10469;;3651:9;294:10469;;;;;;;;;;;;2942:10;294:10469;;;;;;;;;;;;;;;3735:42;294:10469;2942:10;3735:42;;294:10469;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;294:10469:14;2627:22:0;;2623:91;;3004:6;294:10469:14;;-1:-1:-1;;;;;;294:10469:14;;;;;;;-1:-1:-1;;;;;294:10469:14;3052:40:0;-1:-1:-1;;3052:40:0;294:10469:14;2623:91:0;2672:31;;;294:10469:14;2672:31:0;294:10469:14;;;;;2672:31:0;294:10469:14;;;;;;-1:-1:-1;;294:10469:14;;;;-1:-1:-1;;;;;294:10469:14;;:::i;:::-;;;;1114:54;294:10469;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;2466:103:10;;:::i;:::-;4364:10:14;294:10469;;4355:8;294:10469;;;;;4393:16;;;294:10469;;;4385:47;294:10469;;;4385:47;:::i;:::-;294:10469;;4450:24;4442:59;4450:24;;;4442:59;:::i;:::-;294:10469;;;;;;;;;4630:29;;294:10469;;;1265:6;294:10469;;;;;;;4611:15;:67;294:10469;;;4364:10;;;294:10469;;4747:9;294:10469;;4738:50;294:10469;;;;;;4746:22;4738:50;:::i;:::-;294:10469;-1:-1:-1;;294:10469:14;;;;;;-1:-1:-1;;;294:10469:14;1328:43:8;;;4364:10:14;1328:43:8;;;294:10469:14;;;;;;;;1328:43:8;;;;;;294:10469:14;1328:43:8;:::i;:::-;5074:13:14;-1:-1:-1;;;;;294:10469:14;1328:43:8;:::i;:::-;294:10469:14;;;;;5144:46;294:10469;4364:10;5144:46;;4364:10;294:10469;;4355:8;294:10469;;;4393:16;294:10469;;;;;;;;;;;;4355:8;294:10469;;;;;;;;;;;;;;;4364:10;294:10469;;5245:19;294:10469;;;;;;;4364:10;294:10469;;4393:16;294:10469;;;;;;;4364:10;294:10469;;4747:9;294:10469;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;1277:38;-1:-1:-1;;;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;3873:10;294:10469;;3864:8;294:10469;;;;;3902:16;;;294:10469;;3894:47;294:10469;;;3894:47;:::i;:::-;3951:59;294:10469;;3959:24;;3951:59;:::i;:::-;294:10469;;;;;;;;;;;;;;;;4176:15;4144:29;;294:10469;;;4176:15;294:10469;;4207:48;294:10469;3873:10;4207:48;;294:10469;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;;;1500:62:0;;:::i;:::-;9517:48:14;9525:15;;;9517:48;:::i;:::-;9583:20;;294:10469;;;;;9734:56;294:10469;9636:31;294:10469;;;;;;;;;;;;;9734:56;294:10469;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;294:10469:14;2661:34;;294:10469;;2733:19;294:10469;-1:-1:-1;;;;;294:10469:14;;;;-1:-1:-1;;;;;;294:10469:14;;2733:19;294:10469;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;1321:34;294:10469;;;-1:-1:-1;;;;;294:10469:14;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;-1:-1:-1;;;;;294:10469:14;;:::i;:::-;;;;1174:41;294:10469;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8945:46;1500:62:0;294:10469:14;1500:62:0;;;:::i;:::-;8639:43:14;8647:10;;;8639:43;:::i;:::-;8922:6;294:10469;;;;;;;;;;;;8718:8;294:10469;;8824:59;294:10469;;;;8752:61;8760:30;;;;8752:61;:::i;:::-;8832:24;;8824:59;:::i;:::-;8922:6;:::i;:::-;294:10469;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;8945:46;;;;294:10469;;;;;;;-1:-1:-1;;294:10469:14;;;;;;;866:1;294:10469;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;;917:6;294:10469;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;;;-1:-1:-1;;;;;294:10469:14;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;2466:103:10;;:::i;:::-;7947:10:14;294:10469;;7937:9;294:10469;;7929:53;294:10469;;;;;;7929:53;:::i;:::-;8000:10;;294:10469;;7947:10;294:10469;;8047:8;294:10469;;8039:72;294:10469;;;;8047:37;;8039:72;:::i;:::-;8188:6;8181:4;;7947:10;8129:13;-1:-1:-1;;;;;294:10469:14;8188:6;:::i;:::-;7947:10;294:10469;;8047:8;294:10469;;;;;733:6;8262:30;294:10469;;;8262:30;:::i;:::-;294:10469;;;8307:37;;8303:134;;294:10469;;;;;;;;;;;8452:57;294:10469;7947:10;8452:57;;294:10469;;;;8303:134;8360:16;;;294:10469;;;;;;;;;7947:10;294:10469;;7937:9;294:10469;;;;;;;;;;;;8303:134;;294:10469;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;:::i;:::-;;;;;;;;;;;;2312:19;294:10469;;;;;-1:-1:-1;;;;;294:10469:14;2298:10;:33;294:10469;;;;;;;;;;;;;5550:8;294:10469;;;;;;5584:59;294:10469;;5592:24;;5584:59;:::i;:::-;5653:47;294:10469;5661:16;;;294:10469;;5653:47;:::i;:::-;294:10469;;;5719:9;294:10469;;5710:54;294:10469;;;;;;5718:26;5710:54;:::i;:::-;5825:440;;;5852:28;;294:10469;5852:28;5896:23;5852:28;294:10469;6280:53;5852:28;;:30;294:10469;;5852:30;:::i;:::-;294:10469;;5896:23;:36;294:10469;;;5896:36;:::i;:::-;294:10469;;;;;5946:19;294:10469;;;;;;;5825:440;294:10469;;;;;;;;;6280:53;294:10469;5825:440;6016:24;5550:8;6016:24;:26;294:10469;;6016:26;:::i;:::-;294:10469;;;;;6056:19;294:10469;;;;;6056:37;294:10469;;6056:37;:::i;:::-;294:10469;;;;;6056:19;294:10469;;;;;;;;-1:-1:-1;6111:61:14;6107:148;;5825:440;;6280:53;5825:440;294:10469;5825:440;;;6107:148;294:10469;6222:17;294:10469;;;;;5550:8;294:10469;;;;;;;9953:30;294:10469;;;;;5661:16;294:10469;;;;;;917:6;294:10469;;;;;;;10033:15;:68;294:10469;;10166:6;294:10469;10166:6;6280:53;10166:6;;:::i;:::-;6107:148;;;;;294:10469;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;-1:-1:-1;;;;;294:10469:14;;:::i;:::-;;;;;7254:8;294:10469;;;;;;7295:16;;;294:10469;;7295:46;;;;294:10469;7295:87;;;;294:10469;;;;;;;;;;7295:87;733:6;294:10469;;;7345:37;;7295:87;;;:46;294:10469;;;;;7316:9;294:10469;;;;;;;;7315:26;7295:46;;;;294:10469;;;;;;-1:-1:-1;;294:10469:14;;;;-1:-1:-1;;;;;294:10469:14;;:::i;:::-;;;;6441:8;294:10469;;;;6441:33;294:10469;;;6441:33;294:10469;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;-1:-1:-1;;;;;294:10469:14;;:::i;:::-;;;;1060:48;294:10469;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;1500:62:0;;:::i;:::-;3004:6;294:10469:14;;-1:-1:-1;;;;;;294:10469:14;;;;;;;-1:-1:-1;;;;;294:10469:14;3052:40:0;294:10469:14;;3052:40:0;294:10469:14;;;;;;;-1:-1:-1;;294:10469:14;;;;-1:-1:-1;;;;;294:10469:14;;:::i;:::-;;;;6759:8;294:10469;;;;;;;;6848:28;;;;294:10469;6890:24;6759:8;6890:24;;294:10469;;6965:16;6928:23;;;294:10469;6965:16;;294:10469;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;-1:-1:-1;;;;;294:10469:14;;:::i;:::-;;;;644:43;294:10469;;;;;;;;;644:43;;;;294:10469;644:43;;;;294:10469;644:43;;;294:10469;644:43;;294:10469;644:43;;294:10469;644:43;;294:10469;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;;798:5;294:10469;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;294:10469:14;;;;;9091:9;294:10469;;;;;;9083:57;;294:10469;;9083:57;:::i;:::-;294:10469;;;9091:9;294:10469;;;;;;;;;;;;;;;9194:19;294:10469;;;;;;;;;9270:8;294:10469;;;;;733:6;294:10469;;9308:37;;9304:91;;294:10469;9304:91;9361:16;;294:10469;;-1:-1:-1;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;930:47;294:10469;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;;1265:6;294:10469;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;;733:6;294:10469;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7108:8;294:10469;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;7108:8;294:10469;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;294:10469:14;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;7548:300::-;-1:-1:-1;;;;;294:10469:14;;;;;7672:13;294:10469;;;;;;917:6;294:10469;;;;-1:-1:-1;294:10469:14;;7653:15;:68;;7649:107;;294:10469;;7672:13;294:10469;;;;;;917:6;294:10469;;;;;;;7772:69;7653:15;;7772:69;;:::i;:::-;7548:300;:::o;7649:107::-;7737:8;294:10469;7737:8;:::o;294:10469::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;294:10469:14;;;;;-1:-1:-1;294:10469:14;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;-1:-1:-1;;294:10469:14;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;294:10469:14;;;;;;;;;;;;-1:-1:-1;;;294:10469:14;;;;;;;1796:162:0;294:10469:14;;-1:-1:-1;;;;;294:10469:14;735:10:9;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:9;1901:40:0;294:10469:14;;-1:-1:-1;1901:40:0;2575:307:10;1899:1;2702:7;294:10469:14;2702:18:10;2698:86;;1899:1;2702:7;294:10469:14;2575:307:10:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;1618:188:8;294:10469:14;;-1:-1:-1;;;1745:53:8;;;;-1:-1:-1;;;;;294:10469:14;;;1745:53:8;;;294:10469:14;;;;;;;;;;;;;;;;;1745:53:8;;;;;;;294:10469:14;1745:53:8;:::i;:::-;;:::i;:::-;1618:188::o;10186:575:14:-;294:10469;10694:60;10186:575;294:10469;;;;;;;;-1:-1:-1;294:10469:14;10292:8;294:10469;;;-1:-1:-1;294:10469:14;10326:61;294:10469;;;10334:30;;10326:61;:::i;:::-;294:10469;-1:-1:-1;294:10469:14;10398:13;294:10469;;10430:15;294:10469;-1:-1:-1;294:10469:14;;10456:30;294:10469;;;10456:30;:::i;:::-;294:10469;;-1:-1:-1;294:10469:14;;;10496:9;294:10469;;;;;;;;;-1:-1:-1;;294:10469:14;10524:4;294:10469;;;10538:19;294:10469;;;;;;;;;733:6;10592:36;;10588:91;;10186:575;294:10469;;;;;;;;;;10694:60;10186:575::o;10588:91::-;10398:13;10644:16;294:10469;;-1:-1:-1;;294:10469:14;;;10588:91;;;8370:720:8;;-1:-1:-1;8507:421:8;8370:720;8507:421;;;;;;;;;;;;-1:-1:-1;8507:421:8;;8942:15;;-1:-1:-1;;;;;;294:10469:14;;8960:26:8;:31;8942:68;8938:146;;8370:720;:::o;8938:146::-;-1:-1:-1;;;;9033:40:8;;;-1:-1:-1;;;;;294:10469:14;;;;9033:40:8;294:10469:14;;;9033:40:8;8942:68;9009:1;8994:16;;8942:68;;8507:421;;;;-1:-1:-1;8507:421:8;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"1200200","executionCost":"infinite","totalCost":"infinite"},"external":{"CONSECUTIVE_FAILURES_THRESHOLD()":"543","MINIMUM_STAKE()":"191","PYUSD_ADDRESS()":"infinite","SLASHING_COOLDOWN()":"521","SLASH_AMOUNT()":"279","WITHDRAWAL_DELAY()":"213","canExecute(address)":"7079","consecutiveFailures(address)":"3017","emergencySlash(address,uint256,string)":"infinite","emergencyUnslash(address)":"60471","failureThresholdConfig()":"2756","getConsecutiveFailures(address)":"2577","getRelayerInfo(address)":"infinite","getRelayerStats(address)":"11119","getTimeUntilSlashCooldown(address)":"4746","isRelayerActive(address)":"2683","isSlashed(address)":"2853","lastSlashTime(address)":"2643","owner()":"2626","recordExecution(address,bool,uint256)":"64629","registerRelayer(uint256)":"infinite","relayers(address)":"13238","renounceOwnership()":"28275","requestWithdrawal()":"50720","restakeAfterSlash(uint256)":"infinite","setSubscriptionManager(address)":"27144","slashAmountConfig()":"2338","subscriptionManager()":"2736","transferOwnership(address)":"28803","unregisterRelayer()":"infinite","updateSlashingParameters(uint256,uint256)":"48416"},"internal":{"_applySlash(address,uint256)":"infinite","_slashRelayer(address,uint256)":"infinite"}},"methodIdentifiers":{"CONSECUTIVE_FAILURES_THRESHOLD()":"b4bb6c0d","MINIMUM_STAKE()":"08dbbb03","PYUSD_ADDRESS()":"e2b02576","SLASHING_COOLDOWN()":"ab576cb5","SLASH_AMOUNT()":"37720606","WITHDRAWAL_DELAY()":"0ebb172a","canExecute(address)":"85c99e2b","consecutiveFailures(address)":"efdac37c","emergencySlash(address,uint256,string)":"b63f3b8a","emergencyUnslash(address)":"20e732cd","failureThresholdConfig()":"ceb88df8","getConsecutiveFailures(address)":"546b83ad","getRelayerInfo(address)":"06bfd20b","getRelayerStats(address)":"62724306","getTimeUntilSlashCooldown(address)":"00359015","isRelayerActive(address)":"83a9f7fc","isSlashed(address)":"b799036c","lastSlashTime(address)":"7f202654","owner()":"8da5cb5b","recordExecution(address,bool,uint256)":"894f8c72","registerRelayer(uint256)":"f5855d16","relayers(address)":"5300f841","renounceOwnership()":"715018a6","requestWithdrawal()":"dbaf2145","restakeAfterSlash(uint256)":"8ce37cc4","setSubscriptionManager(address)":"c05b3585","slashAmountConfig()":"15d39754","subscriptionManager()":"bf158fd2","transferOwnership(address)":"f2fde38b","unregisterRelayer()":"e6d1b240","updateSlashingParameters(uint256,uint256)":"d53f8a63"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pyusdAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"EmergencySlash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"ExecutionRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"}],\"name\":\"RelayerRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStake\",\"type\":\"uint256\"}],\"name\":\"RelayerRestaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slashAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingStake\",\"type\":\"uint256\"}],\"name\":\"RelayerSlashed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"returnedStake\",\"type\":\"uint256\"}],\"name\":\"RelayerUnregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slashAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"failureThreshold\",\"type\":\"uint256\"}],\"name\":\"SlashingParametersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"name\":\"WithdrawalRequested\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSECUTIVE_FAILURES_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_STAKE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PYUSD_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLASHING_COOLDOWN\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SLASH_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITHDRAWAL_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"}],\"name\":\"canExecute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"consecutiveFailures\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"emergencySlash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"}],\"name\":\"emergencyUnslash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failureThresholdConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"}],\"name\":\"getConsecutiveFailures\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"}],\"name\":\"getRelayerInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"successfulExecutions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"failedExecutions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFeesEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalRequestTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"withdrawalRequested\",\"type\":\"bool\"}],\"internalType\":\"struct RelayerRegistry.Relayer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"}],\"name\":\"getRelayerStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"successfulExecutions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"failedExecutions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFeesEarned\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"}],\"name\":\"getTimeUntilSlashCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"}],\"name\":\"isRelayerActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSlashed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastSlashTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"relayerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"recordExecution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"}],\"name\":\"registerRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"relayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"successfulExecutions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"failedExecutions\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFeesEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalRequestTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"withdrawalRequested\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"restakeAfterSlash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscriptionManager\",\"type\":\"address\"}],\"name\":\"setSubscriptionManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slashAmountConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscriptionManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unregisterRelayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"slashAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"failureThreshold\",\"type\":\"uint256\"}],\"name\":\"updateSlashingParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RelayerRegistry.sol\":\"RelayerRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/RelayerRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.28;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract RelayerRegistry is ReentrancyGuard, Ownable {\\n    using SafeERC20 for IERC20;\\n    struct Relayer {\\n        uint256 stakedAmount;\\n        uint256 successfulExecutions;\\n        uint256 failedExecutions;\\n        uint256 totalFeesEarned;\\n        uint256 withdrawalRequestTime;\\n        bool isActive;\\n        bool withdrawalRequested;\\n    }\\n\\n    mapping(address => Relayer) public relayers;\\n    uint256 public constant MINIMUM_STAKE = 1000e6; // 1000 pyusd\\n    uint256 public constant SLASH_AMOUNT = 100e6;\\n    uint256 public constant CONSECUTIVE_FAILURES_THRESHOLD = 3;\\n    uint256 public constant SLASHING_COOLDOWN = 1 days;\\n\\n    uint256 public slashAmountConfig = SLASH_AMOUNT;\\n    uint256 public failureThresholdConfig = CONSECUTIVE_FAILURES_THRESHOLD;\\n\\n    mapping(address => uint256) public lastSlashTime;\\n    mapping(address => uint256) public consecutiveFailures;\\n    mapping(address => bool) public isSlashed;\\n\\n    uint256 public constant WITHDRAWAL_DELAY = 7 days;\\n    address public immutable PYUSD_ADDRESS;\\n    address public subscriptionManager;\\n\\n    event RelayerRegistered(\\n        address indexed relayer,\\n        uint256 stakedAmount\\n    );\\n\\n    event RelayerUnregistered(\\n        address indexed relayer,\\n        uint256 returnedStake\\n    );\\n\\n    event WithdrawalRequested(\\n        address indexed relayer,\\n        uint256 requestTime\\n    );\\n\\n    event ExecutionRecorded(\\n        address indexed relayer,\\n        bool success,\\n        uint256 feeAmount\\n    );\\n\\n    event RelayerSlashed(\\n        address indexed relayer,\\n        uint256 slashAmount,\\n        uint256 remainingStake\\n    );\\n\\n    event RelayerRestaked(\\n        address indexed relayer,\\n        uint256 amount,\\n        uint256 newStake\\n    );\\n\\n    event SlashingParametersUpdated(\\n        uint256 slashAmount,\\n        uint256 failureThreshold\\n    );\\n\\n    event EmergencySlash(\\n        address indexed relayer,\\n        uint256 amount,\\n        string reason\\n    );\\n\\n    modifier onlySubscriptionManager() {\\n        require(msg.sender == subscriptionManager, \\\"Only SubscriptionManager\\\");\\n        _;\\n    }\\n\\n    constructor(address _pyusdAddress) Ownable(msg.sender) {\\n        require(_pyusdAddress != address(0), \\\"Invalid PYUSD address\\\");\\n        PYUSD_ADDRESS = _pyusdAddress;\\n    }\\n\\n    function setSubscriptionManager(address _subscriptionManager) external onlyOwner {\\n        require(_subscriptionManager != address(0), \\\"Invalid address\\\");\\n        require(subscriptionManager == address(0), \\\"Already set\\\");\\n        subscriptionManager = _subscriptionManager;\\n    }\\n\\n    function registerRelayer(uint256 stakeAmount) external nonReentrant {\\n        require(relayers[msg.sender].stakedAmount == 0, \\\"Relayer already registered\\\");\\n        require(stakeAmount >= MINIMUM_STAKE, \\\"Insufficient stake amount\\\");\\n\\n        // staking remains pyusd-specific while subscriptions may settle in other supported tokens\\n        IERC20 token = IERC20(PYUSD_ADDRESS);\\n        token.safeTransferFrom(msg.sender, address(this), stakeAmount);\\n\\n        relayers[msg.sender] = Relayer({\\n            stakedAmount: stakeAmount,\\n            successfulExecutions: 0,\\n            failedExecutions: 0,\\n            totalFeesEarned: 0,\\n            isActive: true,\\n            withdrawalRequestTime: 0,\\n            withdrawalRequested: false\\n        });\\n        consecutiveFailures[msg.sender] = 0;\\n        isSlashed[msg.sender] = false;\\n        lastSlashTime[msg.sender] = 0;\\n\\n        emit RelayerRegistered(msg.sender, stakeAmount);\\n    }\\n\\n    function requestWithdrawal() external {\\n        Relayer storage relayer = relayers[msg.sender];\\n        require(relayer.isActive, \\\"Relayer not active\\\");\\n        require(relayer.stakedAmount > 0, \\\"Relayer not registered\\\");\\n        require(!relayer.withdrawalRequested, \\\"Withdrawal already requested\\\");\\n\\n        relayer.withdrawalRequested = true;\\n        relayer.withdrawalRequestTime = block.timestamp;\\n\\n        emit WithdrawalRequested(msg.sender, block.timestamp);\\n    }\\n\\n    function unregisterRelayer() external nonReentrant {\\n        Relayer storage relayer = relayers[msg.sender];\\n        require(relayer.isActive, \\\"Relayer not active\\\");\\n        require(relayer.stakedAmount > 0, \\\"Relayer not registered\\\");\\n        require(relayer.withdrawalRequested, \\\"Must request withdrawal first\\\");\\n        require(\\n            block.timestamp >= relayer.withdrawalRequestTime + WITHDRAWAL_DELAY,\\n            \\\"Withdrawal delay not met\\\"\\n        );\\n        require(!isSlashed[msg.sender], \\\"Relayer slashed\\\");\\n\\n\\n        uint256 stakeToReturn = relayer.stakedAmount;\\n        \\n        // clear relayer state before transfer\\n        relayer.isActive = false;\\n        relayer.stakedAmount = 0;\\n        relayer.withdrawalRequested = false;\\n        relayer.withdrawalRequestTime = 0;\\n\\n        IERC20(PYUSD_ADDRESS).safeTransfer(msg.sender, stakeToReturn);\\n\\n        emit RelayerUnregistered(msg.sender, stakeToReturn);\\n\\n        delete relayers[msg.sender];\\n        delete consecutiveFailures[msg.sender];\\n        delete lastSlashTime[msg.sender];\\n        delete isSlashed[msg.sender];\\n    }\\n\\n    function recordExecution(\\n        address relayerAddress,\\n        bool success,\\n        uint256 feeAmount\\n    ) external onlySubscriptionManager {\\n        Relayer storage relayer = relayers[relayerAddress];\\n        require(relayer.stakedAmount > 0, \\\"Relayer not registered\\\");\\n        require(relayer.isActive, \\\"Relayer not active\\\");\\n        require(!isSlashed[relayerAddress], \\\"Relayer slashed\\\");\\n\\n        // track relayer performance and earnings\\n        if (success) {\\n            relayer.successfulExecutions++;\\n            relayer.totalFeesEarned += feeAmount;\\n            consecutiveFailures[relayerAddress] = 0;\\n        } else {\\n            relayer.failedExecutions++;\\n            consecutiveFailures[relayerAddress]++;\\n            if (consecutiveFailures[relayerAddress] >= failureThresholdConfig) {\\n                _slashRelayer(relayerAddress, slashAmountConfig);\\n            }\\n        }\\n\\n        emit ExecutionRecorded(relayerAddress, success, feeAmount);\\n    }\\n\\n    function isRelayerActive(address relayerAddress) external view returns (bool) {\\n        return relayers[relayerAddress].isActive;\\n    }\\n\\n    function getRelayerStats(address relayerAddress) external view returns (\\n        uint256 stakedAmount,\\n        uint256 successfulExecutions,\\n        uint256 failedExecutions,\\n        uint256 totalFeesEarned,\\n        bool isActive\\n    ) {\\n        Relayer storage relayer = relayers[relayerAddress];\\n        return (\\n            relayer.stakedAmount,\\n            relayer.successfulExecutions,\\n            relayer.failedExecutions,\\n            relayer.totalFeesEarned,\\n            relayer.isActive\\n        );\\n    }\\n\\n    function getRelayerInfo(address relayerAddress) external view returns (Relayer memory) {\\n        return relayers[relayerAddress];\\n    }\\n\\n    function canExecute(address relayerAddress) external view returns (bool) {\\n        Relayer storage relayer = relayers[relayerAddress];\\n        return relayer.isActive && !isSlashed[relayerAddress] && relayer.stakedAmount >= MINIMUM_STAKE;\\n    }\\n\\n    function getConsecutiveFailures(address relayerAddress) external view returns (uint256) {\\n        return consecutiveFailures[relayerAddress];\\n    }\\n\\n    function getTimeUntilSlashCooldown(address relayerAddress) external view returns (uint256) {\\n        if (block.timestamp >= lastSlashTime[relayerAddress] + SLASHING_COOLDOWN) {\\n            return 0;\\n        }\\n        return (lastSlashTime[relayerAddress] + SLASHING_COOLDOWN) - block.timestamp;\\n    }\\n\\n    function restakeAfterSlash(uint256 amount) external nonReentrant {\\n        require(isSlashed[msg.sender], \\\"Relayer not slashed\\\");\\n        require(amount > 0, \\\"Invalid amount\\\");\\n        require(relayers[msg.sender].stakedAmount > 0, \\\"Relayer not registered\\\");\\n\\n        IERC20(PYUSD_ADDRESS).safeTransferFrom(msg.sender, address(this), amount);\\n\\n        Relayer storage relayer = relayers[msg.sender];\\n        relayer.stakedAmount += amount;\\n\\n        if (relayer.stakedAmount >= MINIMUM_STAKE) {\\n            relayer.isActive = true;\\n            isSlashed[msg.sender] = false;\\n        }\\n\\n        emit RelayerRestaked(msg.sender, amount, relayer.stakedAmount);\\n    }\\n\\n    function emergencySlash(address relayerAddress, uint256 amount, string calldata reason) external onlyOwner {\\n        require(amount > 0, \\\"Invalid slash amount\\\");\\n        Relayer storage relayer = relayers[relayerAddress];\\n        require(relayer.stakedAmount >= amount, \\\"Insufficient stake\\\");\\n\\n        require(relayer.stakedAmount > 0, \\\"Relayer not registered\\\");\\n\\n        _applySlash(relayerAddress, amount);\\n\\n        emit EmergencySlash(relayerAddress, amount, reason);\\n    }\\n\\n    function emergencyUnslash(address relayerAddress) external onlyOwner {\\n        require(isSlashed[relayerAddress], \\\"Relayer not slashed\\\");\\n\\n        isSlashed[relayerAddress] = false;\\n        consecutiveFailures[relayerAddress] = 0;\\n\\n        Relayer storage relayer = relayers[relayerAddress];\\n        if (relayer.stakedAmount >= MINIMUM_STAKE) {\\n            relayer.isActive = true;\\n        }\\n    }\\n\\n    function updateSlashingParameters(uint256 slashAmount, uint256 failureThreshold) external onlyOwner {\\n        require(slashAmount > 0, \\\"Invalid slash amount\\\");\\n        require(failureThreshold > 0, \\\"Invalid threshold\\\");\\n\\n        slashAmountConfig = slashAmount;\\n        failureThresholdConfig = failureThreshold;\\n\\n        emit SlashingParametersUpdated(slashAmount, failureThreshold);\\n    }\\n\\n    function _slashRelayer(address relayerAddress, uint256 amount) internal {\\n        Relayer storage relayer = relayers[relayerAddress];\\n        require(relayer.stakedAmount >= amount, \\\"Insufficient stake to slash\\\");\\n        require(block.timestamp >= lastSlashTime[relayerAddress] + SLASHING_COOLDOWN, \\\"Slash cooldown active\\\");\\n\\n        _applySlash(relayerAddress, amount);\\n    }\\n\\n    function _applySlash(address relayerAddress, uint256 amount) internal {\\n        Relayer storage relayer = relayers[relayerAddress];\\n        require(relayer.stakedAmount >= amount, \\\"Insufficient stake\\\");\\n\\n        lastSlashTime[relayerAddress] = block.timestamp;\\n\\n        relayer.stakedAmount -= amount;\\n        isSlashed[relayerAddress] = true;\\n        consecutiveFailures[relayerAddress] = 0;\\n\\n        if (relayer.stakedAmount < MINIMUM_STAKE) {\\n            relayer.isActive = false;\\n        }\\n\\n        emit RelayerSlashed(relayerAddress, amount, relayer.stakedAmount);\\n    }\\n}\\n\",\"keccak256\":\"0xb702b778b40e41e66d64ee73b636f427ee504ab2f3f577fb483325ec7522574a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1498,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":8,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"_owner","offset":0,"slot":"1","type":"t_address"},{"astId":2139,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"relayers","offset":0,"slot":"2","type":"t_mapping(t_address,t_struct(Relayer)2134_storage)"},{"astId":2154,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"slashAmountConfig","offset":0,"slot":"3","type":"t_uint256"},{"astId":2157,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"failureThresholdConfig","offset":0,"slot":"4","type":"t_uint256"},{"astId":2161,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"lastSlashTime","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":2165,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"consecutiveFailures","offset":0,"slot":"6","type":"t_mapping(t_address,t_uint256)"},{"astId":2169,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"isSlashed","offset":0,"slot":"7","type":"t_mapping(t_address,t_bool)"},{"astId":2176,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"subscriptionManager","offset":0,"slot":"8","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(Relayer)2134_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct RelayerRegistry.Relayer)","numberOfBytes":"32","value":"t_struct(Relayer)2134_storage"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Relayer)2134_storage":{"encoding":"inplace","label":"struct RelayerRegistry.Relayer","members":[{"astId":2121,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"stakedAmount","offset":0,"slot":"0","type":"t_uint256"},{"astId":2123,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"successfulExecutions","offset":0,"slot":"1","type":"t_uint256"},{"astId":2125,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"failedExecutions","offset":0,"slot":"2","type":"t_uint256"},{"astId":2127,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"totalFeesEarned","offset":0,"slot":"3","type":"t_uint256"},{"astId":2129,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"withdrawalRequestTime","offset":0,"slot":"4","type":"t_uint256"},{"astId":2131,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"isActive","offset":0,"slot":"5","type":"t_bool"},{"astId":2133,"contract":"contracts/RelayerRegistry.sol:RelayerRegistry","label":"withdrawalRequested","offset":1,"slot":"5","type":"t_bool"}],"numberOfBytes":"192"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SubscriptionManager.sol":{"SubscriptionManager":{"abi":[{"inputs":[{"internalType":"address[]","name":"supportedTokenAddresses","type":"address[]"},{"internalType":"address","name":"_relayerRegistry","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"subscriber","type":"address"},{"indexed":true,"internalType":"address","name":"merchant","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"paymentNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"},{"indexed":false,"internalType":"address","name":"relayer","type":"address"}],"name":"PaymentExecuted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"subscriber","type":"address"},{"indexed":true,"internalType":"address","name":"merchant","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"PaymentFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"subscriber","type":"address"},{"indexed":true,"internalType":"address","name":"merchant","type":"address"}],"name":"SubscriptionCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"subscriber","type":"address"},{"indexed":true,"internalType":"address","name":"merchant","type":"address"},{"indexed":false,"internalType":"address","name":"token","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"interval","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxPayments","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxTotalAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"subscriber","type":"address"}],"name":"SubscriptionPaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"subscriber","type":"address"}],"name":"SubscriptionResumed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"}],"name":"TokenAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"}],"name":"TokenRemoved","type":"event"},{"inputs":[],"name":"PAUSE_REQUEST_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PROTOCOL_FEE_BPS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RELAYER_REGISTRY","outputs":[{"internalType":"contract RelayerRegistry","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESUME_REQUEST_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SUBSCRIPTION_INTENT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"activeSubscriptionCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"addSupportedToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"subscriber","type":"address"},{"internalType":"address","name":"merchant","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interval","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"maxPayments","type":"uint256"},{"internalType":"uint256","name":"maxTotalAmount","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"internalType":"struct SubscriptionManager.SubscriptionIntent","name":"intent","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"createSubscription","outputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"currentNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"name":"depositForSubscription","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"ethDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"internalType":"address","name":"relayer","type":"address"}],"name":"executeSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"executedPayments","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_subscriber","type":"address"}],"name":"getNextNonce","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"name":"getNextPaymentTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"name":"getPaymentCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"name":"getSubscription","outputs":[{"components":[{"internalType":"address","name":"subscriber","type":"address"},{"internalType":"address","name":"merchant","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interval","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"maxPayments","type":"uint256"},{"internalType":"uint256","name":"maxTotalAmount","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"enum SubscriptionManager.SubscriptionStatus","name":"status","type":"uint8"}],"internalType":"struct SubscriptionManager.Subscription","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"name":"getSubscriptionToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSupportedTokens","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"name":"isSubscriptionActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"pauseSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"removeSupportedToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"resumeSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"subscriptionToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"subscriptions","outputs":[{"internalType":"address","name":"subscriber","type":"address"},{"internalType":"address","name":"merchant","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interval","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"maxPayments","type":"uint256"},{"internalType":"uint256","name":"maxTotalAmount","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"token","type":"address"},{"internalType":"enum SubscriptionManager.SubscriptionStatus","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"supportedTokens","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"subscriber","type":"address"},{"internalType":"address","name":"merchant","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interval","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"maxPayments","type":"uint256"},{"internalType":"uint256","name":"maxTotalAmount","type":"uint256"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"address","name":"token","type":"address"}],"internalType":"struct SubscriptionManager.SubscriptionIntent","name":"intent","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"verifyIntent","outputs":[{"internalType":"bool","name":"valid","type":"bool"},{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"}],"name":"withdrawUnusedETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"errors":{"ECDSAInvalidSignature()":[{"details":"The signature derives the `address(0)`."}],"ECDSAInvalidSignatureLength(uint256)":[{"details":"The signature has an invalid length."}],"ECDSAInvalidSignatureS(bytes32)":[{"details":"The signature has an S value that is in the upper half order."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"ReentrancyGuardReentrantCall()":[{"details":"Unauthorized reentrant call."}]},"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":1208,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1173,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60c0806040523461049057613458803803809161001c8285610495565b83398101906040818303126104905780516001600160401b0381116104905781019180601f84011215610490578251926001600160401b03841161040a578360051b90604051946100706020840187610495565b855260208086019282010192831161049057602001905b828210610478578461009b602086016104b8565b600160005533156104625760018054336001600160a01b0319821681179092556040519291906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b03169081156104205750608052604051610111604082610495565b6005815264417572756d60d81b602090910152604080517facdbaa2d9365d09420a73f7eac1bfd80ef7f0a52431b7ed44c1d8a8f77e56da8916101549082610495565b600181526020810190603160f81b82525190206040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a081526101b860c082610495565b51902060a0526000805260056020526000805160206134388339815191525460ff1661037557600080526005602052600080516020613438833981519152805460ff191660011790556009546801000000000000000081101561040a5760018101806009558110156103f4576000805160206134188339815191520180546001600160a01b03191690556009546000808052600a6020527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e391909155905b80518210156103c557600582901b810160200151600092906001600160a01b031680156103ba57808452600560205260ff60408520541661037557808452600560205260408420805460ff191660011790556009546801000000000000000081101561036157600181018060095581101561034d576000805160206134188339815191520180546001600160a01b03191682179055600954818552600a60205260408520559192600192907f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a49080a25b0190610276565b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e20616c726561647920737570706f727465640000000000000000006044820152606490fd5b506001919250610346565b604051612f4b90816104cd823960805181818161056e015261201c015260a0518181816110cc0152611db90152f35b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b62461bcd60e51b815260206004820181905260248201527f496e76616c69642072656c6179657220726567697374727920616464726573736044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b60208091610485846104b8565b815201910190610087565b600080fd5b601f909101601f19168101906001600160401b0382119082101761040a57604052565b51906001600160a01b03821682036104905756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80631282a90814611b415780631f32768e146119b057806333e5a1d6146119755780634e504922146117ed5780635adf2d8d146117b25780636437ecfc14610e7357806368c4ac261461177357806369e1fd9a146117345780636c00f051146116225780636d69fcaf146114ca5780636f9569711461023b578063715018a61461146d57806376319190146111d35780637656b44014610de057806377bef003146110035780637b0e3b6214610fc85780637f4a7fd014610ed65780638da5cb5b14610ead57806390193b7c14610e7357806391351c8214610e1457806393db9cc414610de057806394259c6c14610d235780639c9b549d1461059d578063a807db7514610558578063be3782281461053c578063c603ff48146104d3578063d21f1ffc1461036d578063d3c7c2c7146102a1578063d655912014610267578063eaef9f2f1461023b578063ebd9c39c1461020f5763f2fde38b0361000e573461020a57602036600319011261020a57610199611bea565b6101a1612d71565b6001600160a01b031680156101f457600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b3461020a57602036600319011261020a5760043560005260076020526020604060002054604051908152f35b3461020a57602036600319011261020a5760043560005260036020526020604060002054604051908152f35b3461020a57602036600319011261020a576001600160a01b03610288611bea565b1660005260086020526020604060002054604051908152f35b3461020a57600036600319011261020a576040518060206009549283815201809260096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af9060005b81811061034e5750505081610302910382611c61565b6040519182916020830190602084525180915260408301919060005b81811061032c575050500390f35b82516001600160a01b031684528594506020938401939092019160010161031e565b82546001600160a01b03168452602090930192600192830192016102ec565b3461020a57602036600319011261020a57600435600081815260026020526040902080546001600160a01b03166103a5811515611e1d565b330361048e576009810160ff815460a01c16600581101561047857801590811561046d575b5015610429576103d983612942565b805460ff60a01b1916600160a11b1790558054600191909101546001600160a01b03908116929116907f8065a33ad053d617d51579685a263b0f7c6ec05931dbc0280bfda3a784208959600080a4005b606460405162461bcd60e51b815260206004820152602060248201527f537562736372697074696f6e2063616e6e6f742062652063616e63656c6c65646044820152fd5b6001915014846103ca565b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260206004820152601a60248201527f4f6e6c7920737562736372696265722063616e2063616e63656c0000000000006044820152606490fd5b3461020a57602036600319011261020a576020610534600435806000526002835260406000209061050e60018060a01b038354161515611e1d565b6000526003835261052e6040600020546003600484015493015490611f8b565b90611f7e565b604051908152f35b3461020a57600036600319011261020a57602060405160328152f35b3461020a57600036600319011261020a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461020a576105ab36611b9f565b91610100810135906001600160a01b036105c482611d79565b1660005260046020526040600020548203610cee576101208101936001600160a01b036105f086611d79565b16600052600560205260ff6040600020541615610cb357610621610615828685611d8d565b81610c8c575b506127e6565b60e08201359042821115610c4757608083013594828611610c03576040840135938415610bbf576060810135908115610b6f5760a0810135928315610b1b5760c0820135946106708589611f8b565b8610610ad6576106b6604061068d6106883687611c83565b612857565b93838251948592602084019788528484013781016000838201520301601f198101835282611c61565b5190206000818152600260205260409020549098906001600160a01b0316610a9157899789906001600160a01b036106ed8b611d79565b1661098e575b6106fc84611d79565b908888602087019c61070d8e611d79565b9061071790611d79565b966040519561072587611c44565b600160a01b600190031686526020860191600160a01b600190031682528d6040870190815260608701908b82526080880192835260a08801938d855260c0890195865260e08901968752610100890197885261012089019a600160a01b60019003168b5261014089019960008b526000526002602052604060002098600160a01b6001900390600160a01b60019003905116166001600160601b0360a01b8a5416178955600160a01b600190039051166001890190600160a01b60019003166001600160601b0360a01b82541617905551600288015551600387015551600486015551600585015551600684015551600783015551600882015560090191600160a01b6001900390600160a01b60019003905116166001600160601b0360a01b8354161782555190600582101561047857805460ff60a01b191660a09290921b60ff60a01b16919091179055600061087c8a611d79565b89825260066020526040822080546001600160a01b0319166001600160a01b039283161790556108ab8b611d79565b1681526008602052604081208054906001820180921161097a579361093861093261092c8d9a9660209f987fb76f505b43aee5831d9f29bf6332a7aa4e48e7016819fbd63de7dbace080f0499b9760c09b976040925560018060a01b0361091184611d79565b168152602060049052206109258154611fe6565b9055611d79565b9b611d79565b95611d79565b986040519960018060a01b03168a528c8a015260408901526060880152608087015260a086015260018060a01b03169460018060a01b031693a4604051908152f35b634e487b7160e01b83526011600452602483fd5b98505061099b8488611f8b565b6109ed60206001600160a01b036109b18e611d79565b166109bb86611d79565b604051636eb1769f60e11b81526001600160a01b03909116600482015230602482015292839190829081906044820190565b03915afa908115610a8557600091610a53575b5010610a0e57888a986106f3565b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e20616c6c6f77616e6365000000006044820152606490fd5b90506020813d602011610a7d575b81610a6e60209383611c61565b8101031261020a57518c610a00565b3d9150610a61565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601b60248201527f537562736372697074696f6e20616c72656164792065786973747300000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4d617820746f74616c20616d6f756e7420696e73756666696369656e740000006044820152606490fd5b60405162461bcd60e51b815260206004820152602660248201527f4d6178207061796d656e7473206d7573742062652067726561746572207468616044820152656e207a65726f60d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f496e74657276616c206d7573742062652067726561746572207468616e207a65604482015261726f60f01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b606460405162461bcd60e51b815260206004820152602060248201527f53746172742074696d65206d757374206265206265666f7265206578706972796044820152fd5b60405162461bcd60e51b815260206004820152601b60248201527f537562736372697074696f6e20696e74656e74206578706972656400000000006044820152606490fd5b90506001600160a01b03610c9f85611d79565b6001600160a01b039092169116148761061b565b60405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606490fd5b3461020a57602036600319011261020a5760043560005260026020526101606040600020610dde60018060a01b038254169160018060a01b036001820154169060028101546003820154600483015460058401549060068501549260078601549460096008880154970154976040519a8b5260208b015260408a01526060890152608088015260a087015260c086015260e085015261010084015260018060a01b03811661012084015260ff61014084019160a01c16611bdd565bf35b3461020a57602036600319011261020a576004356000526006602052602060018060a01b0360406000205416604051908152f35b3461020a57602036600319011261020a57600435600090815260026020526040902080546001600160a01b0316151580610e56575b6020906040519015158152f35b506009015460a01c60ff1660058110156104785760209015610e49565b3461020a57602036600319011261020a576001600160a01b03610e94611bea565b1660005260046020526020604060002054604051908152f35b3461020a57600036600319011261020a576001546040516001600160a01b039091168152602090f35b602036600319011261020a57600435610eed612920565b80600052600260205260ff60096040600020610f4060018060a01b03825416610f17811515611e1d565b600086815260066020526040902054610f39906001600160a01b031615611e69565b3314611eac565b015460a01c1660058110156104785780610f639115908115610fbd575b50611f32565b3415610f8a5760005260076020526040600020610f81348254611f7e565b90556001600055005b60405162461bcd60e51b815260206004820152600b60248201526a139bc8115512081cd95b9d60aa1b6044820152606490fd5b600191501483610f5d565b3461020a57600036600319011261020a5760206040517fd806147178df513a750f9faa80312ba59509af708425df523403bf058ce4b2448152f35b3461020a5761101136611c14565b9082600052600260205260406000209160018060a01b0383541690611037821515611e1d565b600984019260ff845460a01c1660058110156104785760010361118e576111296111206111389361111a869485600052600460205260406000205460405160208101917fd806147178df513a750f9faa80312ba59509af708425df523403bf058ce4b24483528d60408301526060820152606081526110b7608082611c61565b51902060405161190160f01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006022830152604282019290925261110f81606281015b03601f198101835282611c61565b519020923691611d42565b90612d9a565b90929192612dd6565b6001600160a01b0316146127e6565b6000526004602052604060002061114f8154611fe6565b9055805460ff60a01b19169055546001600160a01b0316907faa36c7b46a257244f7f4be84a7163f464e536b2f812d6c308ef7856c58ba925d600080a3005b60405162461bcd60e51b815260206004820152601760248201527f537562736372697074696f6e206e6f74207061757365640000000000000000006044820152606490fd5b3461020a57602036600319011261020a576111ec611bea565b6111f4612d71565b6001600160a01b031680156114285780600052600560205260ff60406000205416156113ed578060005260086020526040600020546113a857806000526005602052604060002060ff19815416905580600052600a602052604060002054801561136d576009548082036112de575b505060095480156112c8576000190161127b81612826565b81549060018060a01b039060031b1b1916905560095580600052600a602052600060408120557f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3600080a2005b634e487b7160e01b600052603160045260246000fd5b6000198101908111611357576112f390612826565b905460039190911b1c6001600160a01b03166000198201828111611357578161131e61134292612826565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b600052600a6020526040600020558180611263565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526013602482015272746f6b656e20696e646578206d697373696e6760681b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f41637469766520737562736372697074696f6e732070726573656e74000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260136024820152721d1bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f63616e6e6f742072656d6f76652065746820737570706f7274000000000000006044820152606490fd5b3461020a57600036600319011261020a57611486612d71565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461020a57602036600319011261020a576114e3611bea565b6114eb612d71565b6001600160a01b0381169081156115e75781600052600560205260ff604060002054166115a2578160005260056020526040600020600160ff19825416179055600954906801000000000000000082101561158c5761131e8260016115539401600955612826565b60095481600052600a6020526040600020557f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4600080a2005b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e20616c726561647920737570706f727465640000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272195d1a08185b1c9958591e48195b98589b1959606a1b6044820152606490fd5b3461020a5761163036611c14565b82600052600260205260406000209160018060a01b0383541690611655821515611e1d565b600984019260ff845460a01c16600581101561047857611120849261111a6116d8956116846111299515611f32565b85600052600460205260406000205460405160208101917fb4d196c0bbe67585f3497477b08a7dedca34f0794cef101cf570c3e415f6d93983528d60408301526060820152606081526110b7608082611c61565b600052600460205260406000206116ef8154611fe6565b9055805460ff60a01b1916600160a01b179055546001600160a01b0316907fded8d4d23682b33f0e79da6698526d10c5f7ec65705c1903e9ac7f78b5e3a51b600080a3005b3461020a57604036600319011261020a576024356001600160a01b038116810361020a5761176c90611764612920565b600435611ff5565b6001600055005b3461020a57602036600319011261020a576001600160a01b03611794611bea565b166000526005602052602060ff604060002054166040519015158152f35b3461020a57600036600319011261020a5760206040517fb4d196c0bbe67585f3497477b08a7dedca34f0794cef101cf570c3e415f6d9398152f35b3461020a57602036600319011261020a57600435611809612920565b80600052600260205260ff6009604060002061183360018060a01b03825416610f17811515611e1d565b015460a01c16600581101590816104785760028114918215611967575b8215611956575b505015611911578060005260076020526040600020549081156118d7576000808093819382526007602052816040812055335af1611893611eea565b50156118a0576001600055005b60405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f537562736372697074696f6e207374696c6c20616374697665000000000000006044820152606490fd5b909150610478576004148280611857565b506003811491506000611850565b3461020a57600036600319011261020a5760206040517f316f763395dccfb0903cc163e1283e12acbf4ec58e2882ed12c2f13bac9864618152f35b3461020a57602036600319011261020a5760006101406040516119d281611c44565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152015260043560005260026020526040600020604051611a2b81611c44565b60018060a01b03825416815260018060a01b0360018301541691602082019283526002810154604083019081526003820154916060840192835260048101549060808501918252600581015460a08601908152600682015460c0870190815260078301549160e0880192835260096008850154946101008a0195865201549460ff6101208a019660018060a01b038116885260a01c16976101408a019760058a1015610478576101609b610dde9a8a526040519b60018060a01b039051168c5260018060a01b0390511660208c01525160408b01525160608a01525160808901525160a08801525160c08701525160e08601525161010085015260018060a01b0390511661012084015251610140830190611bdd565b3461020a576040611b5a611b5436611b9f565b91611d8d565b825191151582526001600160a01b03166020820152f35b9181601f8401121561020a5782359167ffffffffffffffff831161020a576020838186019501011161020a57565b906003198201610160811261020a576101401361020a57600491610144359067ffffffffffffffff821161020a57611bd991600401611b71565b9091565b9060058210156104785752565b600435906001600160a01b038216820361020a57565b35906001600160a01b038216820361020a57565b90604060031983011261020a57600435916024359067ffffffffffffffff821161020a57611bd991600401611b71565b610160810190811067ffffffffffffffff82111761158c57604052565b90601f8019910116810190811067ffffffffffffffff82111761158c57604052565b91908261014091031261020a57604051610140810181811067ffffffffffffffff82111761158c57604052610120611d21818395611cc081611c00565b8552611cce60208201611c00565b602086015260408101356040860152606081013560608601526080810135608086015260a081013560a086015260c081013560c086015260e081013560e086015261010081013561010086015201611c00565b910152565b67ffffffffffffffff811161158c57601f01601f191660200190565b929192611d4e82611d26565b91611d5c6040519384611c61565b82948184528183011161020a578281602093846000960137010152565b356001600160a01b038116810361020a5790565b90611dfb939261111a611df292611da76106883687611c83565b60405161190160f01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006022830152604282019290925261110f8160628101611101565b90949194612dd6565b6001600160a01b0390611e0d90611d79565b166001600160a01b038316149190565b15611e2457565b60405162461bcd60e51b815260206004820152601b60248201527f537562736372697074696f6e20646f6573206e6f7420657869737400000000006044820152606490fd5b15611e7057565b60405162461bcd60e51b81526020600482015260146024820152732737ba1022aa241039bab139b1b934b83a34b7b760611b6044820152606490fd5b15611eb357565b60405162461bcd60e51b815260206004820152600f60248201526e27b7363c9039bab139b1b934b132b960891b6044820152606490fd5b3d15611f15573d90611efb82611d26565b91611f096040519384611c61565b82523d6000602084013e565b606090565b9081602091031261020a5751801515810361020a5790565b15611f3957565b60405162461bcd60e51b815260206004820152601760248201527f537562736372697074696f6e206e6f74206163746976650000000000000000006044820152606490fd5b9190820180921161135757565b8181029291811591840414171561135757565b9190820391821161135757565b60405190611fba604083611c61565b601882527f4d65726368616e74207472616e73666572206661696c656400000000000000006020830152565b60001981146113575760010190565b90336001600160a01b03909116036127ae576040516385c99e2b60e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691600091602081602481875afa9081156127a3578391612774575b5015612736578082526002602052604082208054612087906001600160a01b03161515611e1d565b600981019360ff855460a01c166005811015612722576120a79015611f32565b828452600660209081526040808620546001600160a01b0316808752600590925285205460ff16156126dd57600783015442116125fc57838552600260205261210d60408620858752600360205261052e60408820546003600484015493015490611f8b565b42106125c15783855260036020526040852054600181018091116125ad576002840190815492603284028481046032148515171561259957612710900493612155828961298d565b156124db5750612166848454611f9e565b8890896060918785156000146124cb57508a825260076020526040822054875411156124235750505060405161219d604082611c61565b601881527f496e73756666696369656e7420455448206465706f73697400000000000000006020820152905b156122e657507f8edd31b1042c3b68388248a57905bb81bd5b2abd7334d9e2cee14b88a479a23d60a08892838b52600360205260408b2061220a8154611fe6565b9055600180831b0389541694600180841b0360018b01541696549060405192835260208301526040820152866060820152336080820152a4813b156122e25784916064839260405194859384926344a7c63960e11b84523360048501526001602485015260448401525af180156122d7579084916122be575b5082905260036020526005604084205491015411156122a157505050565b6122aa90612942565b50805460ff60a01b1916600160a21b179055565b816122c891611c61565b6122d3578238612283565b8280fd5b6040513d86823e3d90fd5b8480fd5b9350505093919495508051156123e5575b60018060a01b03835416926001808060a01b039101541693549060405191825260406020830152805190816040840152875b8281106123cf575050906060818389837f8d07bb7d7ffc0fde6ebc3e0e718c1fdbfac73eb7ea593da5566fa86a1c3c1a309684010152601f80199101168101030190a4803b156123cb578180916064604051809481936344a7c63960e11b83523360048401528160248401528160448401525af180156123c0576123ab575050565b6123b6828092611c61565b6123bd5750565b80fd5b6040513d84823e3d90fd5b5080fd5b8060208092840101516060828701015201612329565b506040516123f4604082611c61565b601881527f5061796d656e7420657865637574696f6e206661696c6564000000000000000060208201526122f7565b60018a0154829182918291906001600160a01b03165af1612442611eea565b506124565750612450611fab565b906121c9565b90508880808088335af1612468611eea565b5015612490578354888a52600760205261248760408b20918254611f9e565b905560016121c9565b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b9250905061245092508389612af2565b9694979850505050507f8d07bb7d7ffc0fde6ebc3e0e718c1fdbfac73eb7ea593da5566fa86a1c3c1a30608060018060a01b03845416936001808060a01b03910154169460405190815260406020820152601d60408201527f457865637574696f6e20636f6e73747261696e7473206e6f74206d65740000006060820152a4803b156123cb578180916064604051809481936344a7c63960e11b83523360048401528160248401528160448401525af180156123c0576123ab575050565b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b815260206004820152601360248201527214185e5b595b9d081b9bdd08191d59481e595d606a1b6044820152606490fd5b50929361260a839293612942565b805460ff60a01b1916600360a01b1790558154600183015460029093015460408051918252602082018190526014908201527314dd589cd8dc9a5c1d1a5bdb88195e1c1a5c995960621b60608201526001600160a01b03938416939190911691907f8d07bb7d7ffc0fde6ebc3e0e718c1fdbfac73eb7ea593da5566fa86a1c3c1a3090608090a4803b156123cb578180916064604051809481936344a7c63960e11b83523360048401528160248401528160448401525af180156123c0576126d0575050565b816126da91611c61565b50565b60405162461bcd60e51b815260206004820152601960248201527f546f6b656e206e6f206c6f6e67657220737570706f72746564000000000000006044820152606490fd5b634e487b7160e01b85526021600452602485fd5b60405162461bcd60e51b815260206004820152601660248201527514995b185e595c881b9bdd08185d5d1a1bdc9a5e995960521b6044820152606490fd5b612796915060203d60201161279c575b61278e8183611c61565b810190611f1a565b3861205f565b503d612784565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f0a4cad8c2f2cae440dad2e6dac2e8c6d60831b6044820152606490fd5b156127ed57565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60095481101561284157600960005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60018060a01b038151169060018060a01b03602082015116906040810151906060810151608082015160a083015160c08401519160e0850151936101008601519561012060018060a01b0391015116966040519860208a019a7f316f763395dccfb0903cc163e1283e12acbf4ec58e2882ed12c2f13bac9864618c5260408b015260608a0152608089015260a088015260c087015260e0860152610100850152610120840152610140830152610160820152610160815261291a61018082611c61565b51902090565b600260005414612931576002600055565b633ee5aeb560e01b60005260046000fd5b600052600660205260018060a01b036040600020541680600052600860205260406000205461296e5750565b6000526008602052604060002080549060001982019182116113575755565b8060005260026020526040600020906000526003602052604060002054916005820154831015612aad576129d16129cc93600284015494858092611f8b565b611f7e565b600683015410612aad576001600160a01b0316908115612aea57546040516370a0823160e01b81526001600160a01b03909116600482018190529190602081602481855afa8015610a85578491600091612ab5575b5010612aad57604051636eb1769f60e11b81526001600160a01b03929092166004830152306024830152602090829060449082905afa908115610a8557600091612a7b575b5010612a7657600190565b600090565b90506020813d602011612aa5575b81612a9660209383611c61565b8101031261020a575138612a6b565b3d9150612a89565b505050600090565b9150506020813d602011612ae2575b81612ad160209383611c61565b8101031261020a5783905138612a26565b3d9150612ac4565b505050600190565b600281015481546040516370a0823160e01b81526001600160a01b039182166004820181905293969594909116939190602081602481885afa8015610a85578291600091612d3c575b5010612cf857604051636eb1769f60e11b81526001600160a01b0384166004820152306024820152602081604481885afa908115610a8557600091612cc6575b5010612c785760018501546040516323b872dd60e01b60208201526001600160a01b039384166024820152921660448301526064820152612bc990612bc38160848101611101565b82612e48565b15612c675791546040516323b872dd60e01b60208201526001600160a01b039091166024820152336044820152606480820192909252908152612c1691612c11608483611c61565b612e48565b15612c3357600190604051612c2c602082611c61565b6000815290565b600090604051612c44604082611c61565b6013815272119959481d1c985b9cd9995c8819985a5b1959606a1b602082015290565b505050600090612c75611fab565b90565b5050505050600090604051612c8e606082611c61565b602281527f496e73756666696369656e7420616c6c6f77616e636520666f72207061796d656020820152611b9d60f21b604082015290565b90506020813d602011612cf0575b81612ce160209383611c61565b8101031261020a575138612b7b565b3d9150612cd4565b505050505050600090604051612d0f604082611c61565b602081527f496e73756666696369656e742062616c616e636520666f72207061796d656e74602082015290565b9150506020813d602011612d69575b81612d5860209383611c61565b8101031261020a5781905138612b3b565b3d9150612d4b565b6001546001600160a01b03163303612d8557565b63118cdaa760e01b6000523360045260246000fd5b8151919060418303612dcb57612dc492506020820151906060604084015193015160001a90612e8c565b9192909190565b505060009160029190565b91909160048110156104785780612dec57509050565b600060018203612e075763f645eedf60e01b60005260046000fd5b5060028103612e25578263fce698f760e01b60005260045260246000fd5b9091600360009214612e35575050565b6335e2f38360e21b825260045260249150fd5b600091829182602083519301915af1612e5f611eea565b9015612e86578051908115612e7f57602080612c75938301019101611f1a565b5050600190565b50600090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612f09579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15610a85576000516001600160a01b03811615612efd5790600090600090565b50600090600190600090565b5050506000916003919056fea2646970667358221220282ed00533d21ab5955f8439b64617497a7e91e1ab1fe67d264628859cb2651a64736f6c634300081c00336e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc","opcodes":"PUSH1 0xC0 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x490 JUMPI PUSH2 0x3458 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH2 0x1C DUP3 DUP6 PUSH2 0x495 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH2 0x490 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x490 JUMPI DUP2 ADD SWAP2 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x490 JUMPI DUP3 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP5 GT PUSH2 0x40A JUMPI DUP4 PUSH1 0x5 SHL SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x70 PUSH1 0x20 DUP5 ADD DUP8 PUSH2 0x495 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x490 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x478 JUMPI DUP5 PUSH2 0x9B PUSH1 0x20 DUP7 ADD PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE CALLER ISZERO PUSH2 0x462 JUMPI PUSH1 0x1 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x420 JUMPI POP PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x111 PUSH1 0x40 DUP3 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x417572756D PUSH1 0xD8 SHL PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0xACDBAA2D9365D09420A73F7EAC1BFD80EF7F0A52431B7ED44C1D8A8F77E56DA8 SWAP2 PUSH2 0x154 SWAP1 DUP3 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP1 PUSH1 0x31 PUSH1 0xF8 SHL DUP3 MSTORE MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP5 MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x1B8 PUSH1 0xC0 DUP3 PUSH2 0x495 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0xA0 MSTORE PUSH1 0x0 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3438 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3438 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x40A JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x9 SSTORE DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3418 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x5 DUP3 SWAP1 SHL DUP2 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x0 SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x3BA JUMPI DUP1 DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP6 KECCAK256 SLOAD AND PUSH2 0x375 JUMPI DUP1 DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x361 JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x9 SSTORE DUP2 LT ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3418 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x9 SLOAD DUP2 DUP6 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SSTORE SWAP2 SWAP3 PUSH1 0x1 SWAP3 SWAP1 PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 SWAP1 DUP1 LOG2 JUMPDEST ADD SWAP1 PUSH2 0x276 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C726561647920737570706F72746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 SWAP3 POP PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F4B SWAP1 DUP2 PUSH2 0x4CD DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x56E ADD MSTORE PUSH2 0x201C ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x10CC ADD MSTORE PUSH2 0x1DB9 ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C69642072656C617965722072656769737472792061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x485 DUP5 PUSH2 0x4B8 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x87 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x40A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x490 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1282A908 EQ PUSH2 0x1B41 JUMPI DUP1 PUSH4 0x1F32768E EQ PUSH2 0x19B0 JUMPI DUP1 PUSH4 0x33E5A1D6 EQ PUSH2 0x1975 JUMPI DUP1 PUSH4 0x4E504922 EQ PUSH2 0x17ED JUMPI DUP1 PUSH4 0x5ADF2D8D EQ PUSH2 0x17B2 JUMPI DUP1 PUSH4 0x6437ECFC EQ PUSH2 0xE73 JUMPI DUP1 PUSH4 0x68C4AC26 EQ PUSH2 0x1773 JUMPI DUP1 PUSH4 0x69E1FD9A EQ PUSH2 0x1734 JUMPI DUP1 PUSH4 0x6C00F051 EQ PUSH2 0x1622 JUMPI DUP1 PUSH4 0x6D69FCAF EQ PUSH2 0x14CA JUMPI DUP1 PUSH4 0x6F956971 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x146D JUMPI DUP1 PUSH4 0x76319190 EQ PUSH2 0x11D3 JUMPI DUP1 PUSH4 0x7656B440 EQ PUSH2 0xDE0 JUMPI DUP1 PUSH4 0x77BEF003 EQ PUSH2 0x1003 JUMPI DUP1 PUSH4 0x7B0E3B62 EQ PUSH2 0xFC8 JUMPI DUP1 PUSH4 0x7F4A7FD0 EQ PUSH2 0xED6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEAD JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0xE73 JUMPI DUP1 PUSH4 0x91351C82 EQ PUSH2 0xE14 JUMPI DUP1 PUSH4 0x93DB9CC4 EQ PUSH2 0xDE0 JUMPI DUP1 PUSH4 0x94259C6C EQ PUSH2 0xD23 JUMPI DUP1 PUSH4 0x9C9B549D EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xA807DB75 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0xBE378228 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xC603FF48 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xD21F1FFC EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD3C7C2C7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xD6559120 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xEAEF9F2F EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xEBD9C39C EQ PUSH2 0x20F JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH2 0x199 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x288 PUSH2 0x1BEA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x9 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x9 PUSH1 0x0 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x34E JUMPI POP POP POP DUP2 PUSH2 0x302 SWAP2 SUB DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x32C JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x31E JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x2EC JUMP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A5 DUP2 ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST CALLER SUB PUSH2 0x48E JUMPI PUSH1 0x9 DUP2 ADD PUSH1 0xFF DUP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x478 JUMPI DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x46D JUMPI JUMPDEST POP ISZERO PUSH2 0x429 JUMPI PUSH2 0x3D9 DUP4 PUSH2 0x2942 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 AND SWAP1 PUSH32 0x8065A33AD053D617D51579685A263B0F7C6EC05931DBC0280BFDA3A784208959 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E2063616E6E6F742062652063616E63656C6C6564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 SWAP2 POP EQ DUP5 PUSH2 0x3CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920737562736372696265722063616E2063616E63656C000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x20 PUSH2 0x534 PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x50E PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH2 0x52E PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH2 0x5AB CALLDATASIZE PUSH2 0x1B9F JUMP JUMPDEST SWAP2 PUSH2 0x100 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5C4 DUP3 PUSH2 0x1D79 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP3 SUB PUSH2 0xCEE JUMPI PUSH2 0x120 DUP2 ADD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5F0 DUP7 PUSH2 0x1D79 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xCB3 JUMPI PUSH2 0x621 PUSH2 0x615 DUP3 DUP7 DUP6 PUSH2 0x1D8D JUMP JUMPDEST DUP2 PUSH2 0xC8C JUMPI JUMPDEST POP PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD CALLDATALOAD SWAP1 TIMESTAMP DUP3 GT ISZERO PUSH2 0xC47 JUMPI PUSH1 0x80 DUP4 ADD CALLDATALOAD SWAP5 DUP3 DUP7 GT PUSH2 0xC03 JUMPI PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 DUP5 ISZERO PUSH2 0xBBF JUMPI PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 DUP2 ISZERO PUSH2 0xB6F JUMPI PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP3 DUP4 ISZERO PUSH2 0xB1B JUMPI PUSH1 0xC0 DUP3 ADD CALLDATALOAD SWAP5 PUSH2 0x670 DUP6 DUP10 PUSH2 0x1F8B JUMP JUMPDEST DUP7 LT PUSH2 0xAD6 JUMPI PUSH2 0x6B6 PUSH1 0x40 PUSH2 0x68D PUSH2 0x688 CALLDATASIZE DUP8 PUSH2 0x1C83 JUMP JUMPDEST PUSH2 0x2857 JUMP JUMPDEST SWAP4 DUP4 DUP3 MLOAD SWAP5 DUP6 SWAP3 PUSH1 0x20 DUP5 ADD SWAP8 DUP9 MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD PUSH1 0x0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1C61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA91 JUMPI DUP10 SWAP8 DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6ED DUP12 PUSH2 0x1D79 JUMP JUMPDEST AND PUSH2 0x98E JUMPI JUMPDEST PUSH2 0x6FC DUP5 PUSH2 0x1D79 JUMP JUMPDEST SWAP1 DUP9 DUP9 PUSH1 0x20 DUP8 ADD SWAP13 PUSH2 0x70D DUP15 PUSH2 0x1D79 JUMP JUMPDEST SWAP1 PUSH2 0x717 SWAP1 PUSH2 0x1D79 JUMP JUMPDEST SWAP7 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x725 DUP8 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND DUP3 MSTORE DUP14 PUSH1 0x40 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 DUP12 DUP3 MSTORE PUSH1 0x80 DUP9 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 DUP14 DUP6 MSTORE PUSH1 0xC0 DUP10 ADD SWAP6 DUP7 MSTORE PUSH1 0xE0 DUP10 ADD SWAP7 DUP8 MSTORE PUSH2 0x100 DUP10 ADD SWAP8 DUP9 MSTORE PUSH2 0x120 DUP10 ADD SWAP11 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND DUP12 MSTORE PUSH2 0x140 DUP10 ADD SWAP10 PUSH1 0x0 DUP12 MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP9 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 MLOAD AND AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP11 SLOAD AND OR DUP10 SSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 MLOAD AND PUSH1 0x1 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP9 ADD SSTORE MLOAD PUSH1 0x3 DUP8 ADD SSTORE MLOAD PUSH1 0x4 DUP7 ADD SSTORE MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0x9 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 MLOAD AND AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 SLOAD AND OR DUP3 SSTORE MLOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x478 JUMPI DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0xA0 SWAP3 SWAP1 SWAP3 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x87C DUP11 PUSH2 0x1D79 JUMP JUMPDEST DUP10 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH2 0x8AB DUP12 PUSH2 0x1D79 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x97A JUMPI SWAP4 PUSH2 0x938 PUSH2 0x932 PUSH2 0x92C DUP14 SWAP11 SWAP7 PUSH1 0x20 SWAP16 SWAP9 PUSH32 0xB76F505B43AEE5831D9F29BF6332A7AA4E48E7016819FBD63DE7DBACE080F049 SWAP12 SWAP8 PUSH1 0xC0 SWAP12 SWAP8 PUSH1 0x40 SWAP3 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x911 DUP5 PUSH2 0x1D79 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 SWAP1 MSTORE KECCAK256 PUSH2 0x925 DUP2 SLOAD PUSH2 0x1FE6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1D79 JUMP JUMPDEST SWAP12 PUSH2 0x1D79 JUMP JUMPDEST SWAP6 PUSH2 0x1D79 JUMP JUMPDEST SWAP9 PUSH1 0x40 MLOAD SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP11 MSTORE DUP13 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP9 POP POP PUSH2 0x99B DUP5 DUP9 PUSH2 0x1F8B JUMP JUMPDEST PUSH2 0x9ED PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9B1 DUP15 PUSH2 0x1D79 JUMP JUMPDEST AND PUSH2 0x9BB DUP7 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA85 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xA53 JUMPI JUMPDEST POP LT PUSH2 0xA0E JUMPI DUP9 DUP11 SWAP9 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E20616C6C6F77616E636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA7D JUMPI JUMPDEST DUP2 PUSH2 0xA6E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20A JUMPI MLOAD DUP13 PUSH2 0xA00 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E20616C7265616479206578697374730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820746F74616C20616D6F756E7420696E73756666696369656E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178207061796D656E7473206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E74657276616C206D7573742062652067726561746572207468616E207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x726F PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D757374206265206265666F726520657870697279 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E20696E74656E7420657870697265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC9F DUP6 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 AND EQ DUP8 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206E6F6E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x160 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xDDE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD SWAP1 PUSH1 0x6 DUP6 ADD SLOAD SWAP3 PUSH1 0x7 DUP7 ADD SLOAD SWAP5 PUSH1 0x9 PUSH1 0x8 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xFF PUSH2 0x140 DUP5 ADD SWAP2 PUSH1 0xA0 SHR AND PUSH2 0x1BDD JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0xE56 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x9 ADD SLOAD PUSH1 0xA0 SHR PUSH1 0xFF AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x20 SWAP1 ISZERO PUSH2 0xE49 JUMP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE94 PUSH2 0x1BEA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xEED PUSH2 0x2920 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xF40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND PUSH2 0xF17 DUP2 ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF39 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1E69 JUMP JUMPDEST CALLER EQ PUSH2 0x1EAC JUMP JUMPDEST ADD SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x478 JUMPI DUP1 PUSH2 0xF63 SWAP2 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xFBD JUMPI JUMPDEST POP PUSH2 0x1F32 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xF81 CALLVALUE DUP3 SLOAD PUSH2 0x1F7E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x139BC8115512081CD95B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP EQ DUP4 PUSH2 0xF5D JUMP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xD806147178DF513A750F9FAA80312BA59509AF708425DF523403BF058CE4B244 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH2 0x1011 CALLDATASIZE PUSH2 0x1C14 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP1 PUSH2 0x1037 DUP3 ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x9 DUP5 ADD SWAP3 PUSH1 0xFF DUP5 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x1 SUB PUSH2 0x118E JUMPI PUSH2 0x1129 PUSH2 0x1120 PUSH2 0x1138 SWAP4 PUSH2 0x111A DUP7 SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0xD806147178DF513A750F9FAA80312BA59509AF708425DF523403BF058CE4B244 DUP4 MSTORE DUP14 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x10B7 PUSH1 0x80 DUP3 PUSH2 0x1C61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x110F DUP2 PUSH1 0x62 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1C61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x1D42 JUMP JUMPDEST SWAP1 PUSH2 0x2D9A JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2DD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x114F DUP2 SLOAD PUSH2 0x1FE6 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xAA36C7B46A257244F7F4BE84A7163F464E536B2F812D6C308EF7856C58BA925D PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E206E6F7420706175736564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH2 0x11EC PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x11F4 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1428 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x13ED JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13A8 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x136D JUMPI PUSH1 0x9 SLOAD DUP1 DUP3 SUB PUSH2 0x12DE JUMPI JUMPDEST POP POP PUSH1 0x9 SLOAD DUP1 ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x127B DUP2 PUSH2 0x2826 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x9 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH32 0x4C910B69FE65A61F7531B9C5042B2329CA7179C77290AA7E2EB3AFA3C8511FD3 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1357 JUMPI PUSH2 0x12F3 SWAP1 PUSH2 0x2826 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 NOT DUP3 ADD DUP3 DUP2 GT PUSH2 0x1357 JUMPI DUP2 PUSH2 0x131E PUSH2 0x1342 SWAP3 PUSH2 0x2826 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL SWAP4 SWAP1 SWAP2 SHL NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP2 DUP1 PUSH2 0x1263 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x746F6B656E20696E646578206D697373696E67 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41637469766520737562736372697074696F6E732070726573656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1D1BDAD95B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742072656D6F76652065746820737570706F727400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH2 0x1486 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH2 0x14E3 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x14EB PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x15E7 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x15A2 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x9 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x158C JUMPI PUSH2 0x131E DUP3 PUSH1 0x1 PUSH2 0x1553 SWAP5 ADD PUSH1 0x9 SSTORE PUSH2 0x2826 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C726561647920737570706F72746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x195D1A08185B1C9958591E48195B98589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH2 0x1630 CALLDATASIZE PUSH2 0x1C14 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP1 PUSH2 0x1655 DUP3 ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x9 DUP5 ADD SWAP3 PUSH1 0xFF DUP5 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH2 0x1120 DUP5 SWAP3 PUSH2 0x111A PUSH2 0x16D8 SWAP6 PUSH2 0x1684 PUSH2 0x1129 SWAP6 ISZERO PUSH2 0x1F32 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0xB4D196C0BBE67585F3497477B08A7DEDCA34F0794CEF101CF570C3E415F6D939 DUP4 MSTORE DUP14 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x10B7 PUSH1 0x80 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x16EF DUP2 SLOAD PUSH2 0x1FE6 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xDED8D4D23682B33F0E79DA6698526D10C5F7EC65705C1903E9AC7F78B5E3A51B PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x20A JUMPI PUSH2 0x176C SWAP1 PUSH2 0x1764 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1794 PUSH2 0x1BEA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xB4D196C0BBE67585F3497477B08A7DEDCA34F0794CEF101CF570C3E415F6D939 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1809 PUSH2 0x2920 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1833 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND PUSH2 0xF17 DUP2 ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST ADD SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x478 JUMPI PUSH1 0x2 DUP2 EQ SWAP2 DUP3 ISZERO PUSH2 0x1967 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x1956 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x1911 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x18D7 JUMPI PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 DUP2 KECCAK256 SSTORE CALLER GAS CALL PUSH2 0x1893 PUSH2 0x1EEA JUMP JUMPDEST POP ISZERO PUSH2 0x18A0 JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x15DA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2045544820746F207769746864726177 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E207374696C6C2061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x478 JUMPI PUSH1 0x4 EQ DUP3 DUP1 PUSH2 0x1857 JUMP JUMPDEST POP PUSH1 0x3 DUP2 EQ SWAP2 POP PUSH1 0x0 PUSH2 0x1850 JUMP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x316F763395DCCFB0903CC163E1283E12ACBF4EC58E2882ED12C2F13BAC986461 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x0 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0x19D2 DUP2 PUSH2 0x1C44 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1A2B DUP2 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x60 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x80 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP4 ADD SLOAD SWAP2 PUSH1 0xE0 DUP9 ADD SWAP3 DUP4 MSTORE PUSH1 0x9 PUSH1 0x8 DUP6 ADD SLOAD SWAP5 PUSH2 0x100 DUP11 ADD SWAP6 DUP7 MSTORE ADD SLOAD SWAP5 PUSH1 0xFF PUSH2 0x120 DUP11 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP9 MSTORE PUSH1 0xA0 SHR AND SWAP8 PUSH2 0x140 DUP11 ADD SWAP8 PUSH1 0x5 DUP11 LT ISZERO PUSH2 0x478 JUMPI PUSH2 0x160 SWAP12 PUSH2 0xDDE SWAP11 DUP11 MSTORE PUSH1 0x40 MLOAD SWAP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND DUP13 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x20 DUP13 ADD MSTORE MLOAD PUSH1 0x40 DUP12 ADD MSTORE MLOAD PUSH1 0x60 DUP11 ADD MSTORE MLOAD PUSH1 0x80 DUP10 ADD MSTORE MLOAD PUSH1 0xA0 DUP9 ADD MSTORE MLOAD PUSH1 0xC0 DUP8 ADD MSTORE MLOAD PUSH1 0xE0 DUP7 ADD MSTORE MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH2 0x120 DUP5 ADD MSTORE MLOAD PUSH2 0x140 DUP4 ADD SWAP1 PUSH2 0x1BDD JUMP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x40 PUSH2 0x1B5A PUSH2 0x1B54 CALLDATASIZE PUSH2 0x1B9F JUMP JUMPDEST SWAP2 PUSH2 0x1D8D JUMP JUMPDEST DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x20A JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x20A JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x20A JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT DUP3 ADD PUSH2 0x160 DUP2 SLT PUSH2 0x20A JUMPI PUSH2 0x140 SGT PUSH2 0x20A JUMPI PUSH1 0x4 SWAP2 PUSH2 0x144 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x20A JUMPI PUSH2 0x1BD9 SWAP2 PUSH1 0x4 ADD PUSH2 0x1B71 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x478 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x20A JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x20A JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x20A JUMPI PUSH2 0x1BD9 SWAP2 PUSH1 0x4 ADD PUSH2 0x1B71 JUMP JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x158C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x158C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH2 0x140 SWAP2 SUB SLT PUSH2 0x20A JUMPI PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x158C JUMPI PUSH1 0x40 MSTORE PUSH2 0x120 PUSH2 0x1D21 DUP2 DUP4 SWAP6 PUSH2 0x1CC0 DUP2 PUSH2 0x1C00 JUMP JUMPDEST DUP6 MSTORE PUSH2 0x1CCE PUSH1 0x20 DUP3 ADD PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP2 ADD CALLDATALOAD PUSH2 0x100 DUP7 ADD MSTORE ADD PUSH2 0x1C00 JUMP JUMPDEST SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x158C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1D4E DUP3 PUSH2 0x1D26 JUMP JUMPDEST SWAP2 PUSH2 0x1D5C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1C61 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x20A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x20A JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1DFB SWAP4 SWAP3 PUSH2 0x111A PUSH2 0x1DF2 SWAP3 PUSH2 0x1DA7 PUSH2 0x688 CALLDATASIZE DUP8 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x110F DUP2 PUSH1 0x62 DUP2 ADD PUSH2 0x1101 JUMP JUMPDEST SWAP1 SWAP5 SWAP2 SWAP5 PUSH2 0x2DD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1E0D SWAP1 PUSH2 0x1D79 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP2 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1E24 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E20646F6573206E6F742065786973740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E70 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA1022AA241039BAB139B1B934B83A34B7B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1EB3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x27B7363C9039BAB139B1B934B132B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1F15 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1EFB DUP3 PUSH2 0x1D26 JUMP JUMPDEST SWAP2 PUSH2 0x1F09 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1C61 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x20A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x20A JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1F39 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E206E6F7420616374697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1357 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1357 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1357 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1FBA PUSH1 0x40 DUP4 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x18 DUP3 MSTORE PUSH32 0x4D65726368616E74207472616E73666572206661696C65640000000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1357 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x27AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x85C99E2B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x27A3 JUMPI DUP4 SWAP2 PUSH2 0x2774 JUMPI JUMPDEST POP ISZERO PUSH2 0x2736 JUMPI DUP1 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH2 0x2087 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x9 DUP2 ADD SWAP4 PUSH1 0xFF DUP6 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2722 JUMPI PUSH2 0x20A7 SWAP1 ISZERO PUSH2 0x1F32 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP8 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP6 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26DD JUMPI PUSH1 0x7 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x25FC JUMPI DUP4 DUP6 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x210D PUSH1 0x40 DUP7 KECCAK256 DUP6 DUP8 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x52E PUSH1 0x40 DUP9 KECCAK256 SLOAD PUSH1 0x3 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP1 PUSH2 0x1F8B JUMP JUMPDEST TIMESTAMP LT PUSH2 0x25C1 JUMPI DUP4 DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x25AD JUMPI PUSH1 0x2 DUP5 ADD SWAP1 DUP2 SLOAD SWAP3 PUSH1 0x32 DUP5 MUL DUP5 DUP2 DIV PUSH1 0x32 EQ DUP6 ISZERO OR ISZERO PUSH2 0x2599 JUMPI PUSH2 0x2710 SWAP1 DIV SWAP4 PUSH2 0x2155 DUP3 DUP10 PUSH2 0x298D JUMP JUMPDEST ISZERO PUSH2 0x24DB JUMPI POP PUSH2 0x2166 DUP5 DUP5 SLOAD PUSH2 0x1F9E JUMP JUMPDEST DUP9 SWAP1 DUP10 PUSH1 0x60 SWAP2 DUP8 DUP6 ISZERO PUSH1 0x0 EQ PUSH2 0x24CB JUMPI POP DUP11 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP8 SLOAD GT ISZERO PUSH2 0x2423 JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x219D PUSH1 0x40 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x496E73756666696369656E7420455448206465706F7369740000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMPDEST ISZERO PUSH2 0x22E6 JUMPI POP PUSH32 0x8EDD31B1042C3B68388248A57905BB81BD5B2ABD7334D9E2CEE14B88A479A23D PUSH1 0xA0 DUP9 SWAP3 DUP4 DUP12 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP12 KECCAK256 PUSH2 0x220A DUP2 SLOAD PUSH2 0x1FE6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 DUP4 SHL SUB DUP10 SLOAD AND SWAP5 PUSH1 0x1 DUP1 DUP5 SHL SUB PUSH1 0x1 DUP12 ADD SLOAD AND SWAP7 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP7 PUSH1 0x60 DUP3 ADD MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE LOG4 DUP2 EXTCODESIZE ISZERO PUSH2 0x22E2 JUMPI DUP5 SWAP2 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x44A7C639 PUSH1 0xE1 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x22D7 JUMPI SWAP1 DUP5 SWAP2 PUSH2 0x22BE JUMPI JUMPDEST POP DUP3 SWAP1 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP2 ADD SLOAD GT ISZERO PUSH2 0x22A1 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x22AA SWAP1 PUSH2 0x2942 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA2 SHL OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH2 0x22C8 SWAP2 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x22D3 JUMPI DUP3 CODESIZE PUSH2 0x2283 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP4 POP POP POP SWAP4 SWAP2 SWAP5 SWAP6 POP DUP1 MLOAD ISZERO PUSH2 0x23E5 JUMPI JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP3 PUSH1 0x1 DUP1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP4 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x40 DUP5 ADD MSTORE DUP8 JUMPDEST DUP3 DUP2 LT PUSH2 0x23CF JUMPI POP POP SWAP1 PUSH1 0x60 DUP2 DUP4 DUP10 DUP4 PUSH32 0x8D07BB7D7FFC0FDE6EBC3E0E718C1FDBFAC73EB7EA593DA5566FA86A1C3C1A30 SWAP7 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 LOG4 DUP1 EXTCODESIZE ISZERO PUSH2 0x23CB JUMPI DUP2 DUP1 SWAP2 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x44A7C639 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE DUP2 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x23C0 JUMPI PUSH2 0x23AB JUMPI POP POP JUMP JUMPDEST PUSH2 0x23B6 DUP3 DUP1 SWAP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x23BD JUMPI POP JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD PUSH1 0x60 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x2329 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x23F4 PUSH1 0x40 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x5061796D656E7420657865637574696F6E206661696C65640000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x1 DUP11 ADD SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x2442 PUSH2 0x1EEA JUMP JUMPDEST POP PUSH2 0x2456 JUMPI POP PUSH2 0x2450 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 PUSH2 0x21C9 JUMP JUMPDEST SWAP1 POP DUP9 DUP1 DUP1 DUP1 DUP9 CALLER GAS CALL PUSH2 0x2468 PUSH2 0x1EEA JUMP JUMPDEST POP ISZERO PUSH2 0x2490 JUMPI DUP4 SLOAD DUP9 DUP11 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x2487 PUSH1 0x40 DUP12 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1F9E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 POP SWAP1 POP PUSH2 0x2450 SWAP3 POP DUP4 DUP10 PUSH2 0x2AF2 JUMP JUMPDEST SWAP7 SWAP5 SWAP8 SWAP9 POP POP POP POP POP PUSH32 0x8D07BB7D7FFC0FDE6EBC3E0E718C1FDBFAC73EB7EA593DA5566FA86A1C3C1A30 PUSH1 0x80 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND SWAP4 PUSH1 0x1 DUP1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x457865637574696F6E20636F6E73747261696E7473206E6F74206D6574000000 PUSH1 0x60 DUP3 ADD MSTORE LOG4 DUP1 EXTCODESIZE ISZERO PUSH2 0x23CB JUMPI DUP2 DUP1 SWAP2 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x44A7C639 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE DUP2 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x23C0 JUMPI PUSH2 0x23AB JUMPI POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14185E5B595B9D081B9BDD08191D59481E595D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP4 PUSH2 0x260A DUP4 SWAP3 SWAP4 PUSH2 0x2942 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x3 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14DD589CD8DC9A5C1D1A5BDB88195E1C1A5C9959 PUSH1 0x62 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH32 0x8D07BB7D7FFC0FDE6EBC3E0E718C1FDBFAC73EB7EA593DA5566FA86A1C3C1A30 SWAP1 PUSH1 0x80 SWAP1 LOG4 DUP1 EXTCODESIZE ISZERO PUSH2 0x23CB JUMPI DUP2 DUP1 SWAP2 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x44A7C639 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE DUP2 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x23C0 JUMPI PUSH2 0x26D0 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x26DA SWAP2 PUSH2 0x1C61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F206C6F6E67657220737570706F7274656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995B185E595C881B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2796 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x279C JUMPI JUMPDEST PUSH2 0x278E DUP2 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F1A JUMP JUMPDEST CODESIZE PUSH2 0x205F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0xA4CAD8C2F2CAE440DAD2E6DAC2E8C6D PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x27ED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2841 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP1 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 PUSH1 0xE0 DUP6 ADD MLOAD SWAP4 PUSH2 0x100 DUP7 ADD MLOAD SWAP6 PUSH2 0x120 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP9 PUSH1 0x20 DUP11 ADD SWAP11 PUSH32 0x316F763395DCCFB0903CC163E1283E12ACBF4EC58E2882ED12C2F13BAC986461 DUP13 MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE PUSH2 0x160 DUP2 MSTORE PUSH2 0x291A PUSH2 0x180 DUP3 PUSH2 0x1C61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x2931 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x296E JUMPI POP JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x1357 JUMPI SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 PUSH1 0x5 DUP3 ADD SLOAD DUP4 LT ISZERO PUSH2 0x2AAD JUMPI PUSH2 0x29D1 PUSH2 0x29CC SWAP4 PUSH1 0x2 DUP5 ADD SLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH2 0x1F8B JUMP JUMPDEST PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x6 DUP4 ADD SLOAD LT PUSH2 0x2AAD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2AEA JUMPI SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xA85 JUMPI DUP5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2AB5 JUMPI JUMPDEST POP LT PUSH2 0x2AAD JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA85 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A7B JUMPI JUMPDEST POP LT PUSH2 0x2A76 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AA5 JUMPI JUMPDEST DUP2 PUSH2 0x2A96 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20A JUMPI MLOAD CODESIZE PUSH2 0x2A6B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2A89 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AE2 JUMPI JUMPDEST DUP2 PUSH2 0x2AD1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20A JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x2A26 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2AC4 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP7 SWAP6 SWAP5 SWAP1 SWAP2 AND SWAP4 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0xA85 JUMPI DUP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2D3C JUMPI JUMPDEST POP LT PUSH2 0x2CF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA85 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2CC6 JUMPI JUMPDEST POP LT PUSH2 0x2C78 JUMPI PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x2BC9 SWAP1 PUSH2 0x2BC3 DUP2 PUSH1 0x84 DUP2 ADD PUSH2 0x1101 JUMP JUMPDEST DUP3 PUSH2 0x2E48 JUMP JUMPDEST ISZERO PUSH2 0x2C67 JUMPI SWAP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE CALLER PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 MSTORE PUSH2 0x2C16 SWAP2 PUSH2 0x2C11 PUSH1 0x84 DUP4 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x2E48 JUMP JUMPDEST ISZERO PUSH2 0x2C33 JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2C2C PUSH1 0x20 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2C44 PUSH1 0x40 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x13 DUP2 MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 PUSH2 0x2C75 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2C8E PUSH1 0x60 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x22 DUP2 MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E636520666F72207061796D65 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1B9D PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2CF0 JUMPI JUMPDEST DUP2 PUSH2 0x2CE1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20A JUMPI MLOAD CODESIZE PUSH2 0x2B7B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2CD4 JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2D0F PUSH1 0x40 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520666F72207061796D656E74 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D69 JUMPI JUMPDEST DUP2 PUSH2 0x2D58 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20A JUMPI DUP2 SWAP1 MLOAD CODESIZE PUSH2 0x2B3B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2D4B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D85 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x2DCB JUMPI PUSH2 0x2DC4 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x2E8C JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x478 JUMPI DUP1 PUSH2 0x2DEC JUMPI POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SUB PUSH2 0x2E07 JUMPI PUSH4 0xF645EEDF PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP2 SUB PUSH2 0x2E25 JUMPI DUP3 PUSH4 0xFCE698F7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x3 PUSH1 0x0 SWAP3 EQ PUSH2 0x2E35 JUMPI POP POP JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP2 GAS CALL PUSH2 0x2E5F PUSH2 0x1EEA JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x2E86 JUMPI DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x2E7F JUMPI PUSH1 0x20 DUP1 PUSH2 0x2C75 SWAP4 DUP4 ADD ADD SWAP2 ADD PUSH2 0x1F1A JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2F09 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH1 0x0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xA85 JUMPI PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2EFD JUMPI SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x2E 0xD0 SDIV CALLER 0xD2 BYTE 0xB5 SWAP6 PUSH0 DUP5 CODECOPY 0xB6 CHAINID OR BLOBHASH PUSH27 0x7E91E1AB1FE67D264628859CB2651A64736F6C634300081C00336E ISZERO BLOCKHASH OR SHL PUSH13 0xC960B71A7020D9F60077F6AF9 BALANCE 0xA8 0xBB CREATE2 SWAP1 0xDA MUL 0x23 0xDA 0xCF PUSH22 0xC7AF05B8CCBB9D4D8FB16EA74CE3C29A41F1B461FBDA SELFDESTRUCT SELFBALANCE EQ LOG0 0xD9 0xA8 0xEB SDIV BLOBHASH SWAP8 CHAINID 0xBC ","sourceMap":"323:22170:15:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1857:1:10;-1:-1:-1;1857:1:10;3648:10:15;1273:26:0;1269:95;;1857:1:10;323:22170:15;;3648:10;-1:-1:-1;;;;;;323:22170:15;;;;;;;;;;;3648:10;-1:-1:-1;;;;;323:22170:15;3052:40:0;-1:-1:-1;;3052:40:0;-1:-1:-1;;;;;323:22170:15;;3682:30;;323:22170;;3760:52;;;323:22170;;;;;;:::i;:::-;;;;-1:-1:-1;;;323:22170:15;;;;;;;;4006:25;;323:22170;;;;:::i;:::-;1857:1:10;323:22170:15;;;;;;-1:-1:-1;;;323:22170:15;;;4049:21;;323:22170;;3865:281;323:22170;3865:281;;323:22170;3893:95;323:22170;;;;;;;;;;4088:13;3760:52;323:22170;;;4127:4;323:22170;;;;;3865:281;;;;;;:::i;:::-;323:22170;3842:314;;323:22170;3823:333;-1:-1:-1;323:22170:15;;;;;-1:-1:-1;;;;;;;;;;;323:22170:15;;;;;-1:-1:-1;323:22170:15;;;;;-1:-1:-1;;;;;;;;;;;323:22170:15;;-1:-1:-1;;323:22170:15;1857:1:10;323:22170:15;;;22072:18;323:22170;;;;;;;1857:1:10;323:22170:15;;;22072:18;323:22170;;;;;;-1:-1:-1;;;;;;;;;;;323:22170:15;;;-1:-1:-1;;;;;;323:22170:15;;;22072:18;323:22170;-1:-1:-1;323:22170:15;;;22112:19;323:22170;;;1857:1:10;;;;-1:-1:-1;4278:3:15;323:22170;;4242:34;;;;;323:22170;;;;;;;;;-1:-1:-1;;323:22170:15;-1:-1:-1;;;;;323:22170:15;4357:19;;4353:66;;323:22170;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;1857:1:10;323:22170:15;;;22072:18;323:22170;;;;;;;1857:1:10;323:22170:15;;;22072:18;323:22170;;;;;;-1:-1:-1;;;;;;;;;;;323:22170:15;;;-1:-1:-1;;;;;;323:22170:15;;;;;22072:18;323:22170;;;;22112:19;323:22170;;;;;1857:1:10;323:22170:15;;1857:1:10;;323:22170:15;22210:17;;323:22170;22210:17;4227:13;323:22170;4227:13;;;323:22170;-1:-1:-1;;;323:22170:15;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;4353:66;4396:8;1857:1:10;4396:8:15;;;;;4242:34;323:22170;;;;;;;;3760:52;323:22170;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;323:22170:15;;;;;-1:-1:-1;323:22170:15;;;;;-1:-1:-1;323:22170:15;;;;;-1:-1:-1;323:22170:15;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;1269:95:0;1322:31;;;-1:-1:-1;1322:31:0;-1:-1:-1;1322:31:0;323:22170:15;;-1:-1:-1;1322:31:0;323:22170:15;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;323:22170:15;;;;;;;-1:-1:-1;;323:22170:15;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;323:22170:15;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7168,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_30035":{"entryPoint":7146,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_bytes":{"entryPoint":7490,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":7962,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes32t_bytes_calldata":{"entryPoint":7188,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_bytes_calldata":{"entryPoint":7025,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_struct_SubscriptionIntent":{"entryPoint":7299,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_struct_SubscriptionIntent_calldatat_bytes_calldata":{"entryPoint":7071,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_address_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_enum_SubscriptionStatus":{"entryPoint":7133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_packed_stringliteral_301a_bytes32_bytes32":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":7462,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":8062,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":8075,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":8094,"id":null,"parameterSlots":2,"returnSlots":1},"copy_literal_to_memory_e1a6bb4f428fd5e045df0d74b1e013b7152c1b824c7e4ea5869371a5f55429a8":{"entryPoint":8107,"id":null,"parameterSlots":0,"returnSlots":1},"extract_returndata":{"entryPoint":7914,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":7265,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_30033":{"entryPoint":7236,"id":null,"parameterSlots":1,"returnSlots":0},"fun_attemptPayment":{"entryPoint":10994,"id":5040,"parameterSlots":4,"returnSlots":2},"fun_callToken":{"entryPoint":11848,"id":5081,"parameterSlots":2,"returnSlots":1},"fun_canExecutePayment":{"entryPoint":10637,"id":4852,"parameterSlots":2,"returnSlots":1},"fun_checkOwner":{"entryPoint":11633,"id":84,"parameterSlots":0,"returnSlots":0},"fun_decrementActiveCount":{"entryPoint":10562,"id":5148,"parameterSlots":1,"returnSlots":0},"fun_executeSubscription_inner":{"entryPoint":8181,"id":null,"parameterSlots":2,"returnSlots":0},"fun_hashIntent":{"entryPoint":10327,"id":4708,"parameterSlots":1,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":10528,"id":1536,"parameterSlots":0,"returnSlots":0},"fun_throwError":{"entryPoint":11734,"id":1903,"parameterSlots":2,"returnSlots":0},"fun_tryRecover":{"entryPoint":11916,"id":1818,"parameterSlots":4,"returnSlots":3},"fun_tryRecover_1630":{"entryPoint":11674,"id":1630,"parameterSlots":2,"returnSlots":3},"fun_verifyIntent":{"entryPoint":7565,"id":3463,"parameterSlots":3,"returnSlots":2},"increment_uint256":{"entryPoint":8166,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":7545,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_0b83":{"entryPoint":7852,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_4f2d":{"entryPoint":10214,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5ea8":{"entryPoint":7709,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ae84":{"entryPoint":7785,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_be76":{"entryPoint":7986,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":10278,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"3216":[{"length":32,"start":1390},{"length":32,"start":8220}],"3221":[{"length":32,"start":4300},{"length":32,"start":7609}]},"linkReferences":{},"object":"6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80631282a90814611b415780631f32768e146119b057806333e5a1d6146119755780634e504922146117ed5780635adf2d8d146117b25780636437ecfc14610e7357806368c4ac261461177357806369e1fd9a146117345780636c00f051146116225780636d69fcaf146114ca5780636f9569711461023b578063715018a61461146d57806376319190146111d35780637656b44014610de057806377bef003146110035780637b0e3b6214610fc85780637f4a7fd014610ed65780638da5cb5b14610ead57806390193b7c14610e7357806391351c8214610e1457806393db9cc414610de057806394259c6c14610d235780639c9b549d1461059d578063a807db7514610558578063be3782281461053c578063c603ff48146104d3578063d21f1ffc1461036d578063d3c7c2c7146102a1578063d655912014610267578063eaef9f2f1461023b578063ebd9c39c1461020f5763f2fde38b0361000e573461020a57602036600319011261020a57610199611bea565b6101a1612d71565b6001600160a01b031680156101f457600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b3461020a57602036600319011261020a5760043560005260076020526020604060002054604051908152f35b3461020a57602036600319011261020a5760043560005260036020526020604060002054604051908152f35b3461020a57602036600319011261020a576001600160a01b03610288611bea565b1660005260086020526020604060002054604051908152f35b3461020a57600036600319011261020a576040518060206009549283815201809260096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af9060005b81811061034e5750505081610302910382611c61565b6040519182916020830190602084525180915260408301919060005b81811061032c575050500390f35b82516001600160a01b031684528594506020938401939092019160010161031e565b82546001600160a01b03168452602090930192600192830192016102ec565b3461020a57602036600319011261020a57600435600081815260026020526040902080546001600160a01b03166103a5811515611e1d565b330361048e576009810160ff815460a01c16600581101561047857801590811561046d575b5015610429576103d983612942565b805460ff60a01b1916600160a11b1790558054600191909101546001600160a01b03908116929116907f8065a33ad053d617d51579685a263b0f7c6ec05931dbc0280bfda3a784208959600080a4005b606460405162461bcd60e51b815260206004820152602060248201527f537562736372697074696f6e2063616e6e6f742062652063616e63656c6c65646044820152fd5b6001915014846103ca565b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260206004820152601a60248201527f4f6e6c7920737562736372696265722063616e2063616e63656c0000000000006044820152606490fd5b3461020a57602036600319011261020a576020610534600435806000526002835260406000209061050e60018060a01b038354161515611e1d565b6000526003835261052e6040600020546003600484015493015490611f8b565b90611f7e565b604051908152f35b3461020a57600036600319011261020a57602060405160328152f35b3461020a57600036600319011261020a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461020a576105ab36611b9f565b91610100810135906001600160a01b036105c482611d79565b1660005260046020526040600020548203610cee576101208101936001600160a01b036105f086611d79565b16600052600560205260ff6040600020541615610cb357610621610615828685611d8d565b81610c8c575b506127e6565b60e08201359042821115610c4757608083013594828611610c03576040840135938415610bbf576060810135908115610b6f5760a0810135928315610b1b5760c0820135946106708589611f8b565b8610610ad6576106b6604061068d6106883687611c83565b612857565b93838251948592602084019788528484013781016000838201520301601f198101835282611c61565b5190206000818152600260205260409020549098906001600160a01b0316610a9157899789906001600160a01b036106ed8b611d79565b1661098e575b6106fc84611d79565b908888602087019c61070d8e611d79565b9061071790611d79565b966040519561072587611c44565b600160a01b600190031686526020860191600160a01b600190031682528d6040870190815260608701908b82526080880192835260a08801938d855260c0890195865260e08901968752610100890197885261012089019a600160a01b60019003168b5261014089019960008b526000526002602052604060002098600160a01b6001900390600160a01b60019003905116166001600160601b0360a01b8a5416178955600160a01b600190039051166001890190600160a01b60019003166001600160601b0360a01b82541617905551600288015551600387015551600486015551600585015551600684015551600783015551600882015560090191600160a01b6001900390600160a01b60019003905116166001600160601b0360a01b8354161782555190600582101561047857805460ff60a01b191660a09290921b60ff60a01b16919091179055600061087c8a611d79565b89825260066020526040822080546001600160a01b0319166001600160a01b039283161790556108ab8b611d79565b1681526008602052604081208054906001820180921161097a579361093861093261092c8d9a9660209f987fb76f505b43aee5831d9f29bf6332a7aa4e48e7016819fbd63de7dbace080f0499b9760c09b976040925560018060a01b0361091184611d79565b168152602060049052206109258154611fe6565b9055611d79565b9b611d79565b95611d79565b986040519960018060a01b03168a528c8a015260408901526060880152608087015260a086015260018060a01b03169460018060a01b031693a4604051908152f35b634e487b7160e01b83526011600452602483fd5b98505061099b8488611f8b565b6109ed60206001600160a01b036109b18e611d79565b166109bb86611d79565b604051636eb1769f60e11b81526001600160a01b03909116600482015230602482015292839190829081906044820190565b03915afa908115610a8557600091610a53575b5010610a0e57888a986106f3565b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e20616c6c6f77616e6365000000006044820152606490fd5b90506020813d602011610a7d575b81610a6e60209383611c61565b8101031261020a57518c610a00565b3d9150610a61565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601b60248201527f537562736372697074696f6e20616c72656164792065786973747300000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4d617820746f74616c20616d6f756e7420696e73756666696369656e740000006044820152606490fd5b60405162461bcd60e51b815260206004820152602660248201527f4d6178207061796d656e7473206d7573742062652067726561746572207468616044820152656e207a65726f60d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f496e74657276616c206d7573742062652067726561746572207468616e207a65604482015261726f60f01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b606460405162461bcd60e51b815260206004820152602060248201527f53746172742074696d65206d757374206265206265666f7265206578706972796044820152fd5b60405162461bcd60e51b815260206004820152601b60248201527f537562736372697074696f6e20696e74656e74206578706972656400000000006044820152606490fd5b90506001600160a01b03610c9f85611d79565b6001600160a01b039092169116148761061b565b60405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606490fd5b3461020a57602036600319011261020a5760043560005260026020526101606040600020610dde60018060a01b038254169160018060a01b036001820154169060028101546003820154600483015460058401549060068501549260078601549460096008880154970154976040519a8b5260208b015260408a01526060890152608088015260a087015260c086015260e085015261010084015260018060a01b03811661012084015260ff61014084019160a01c16611bdd565bf35b3461020a57602036600319011261020a576004356000526006602052602060018060a01b0360406000205416604051908152f35b3461020a57602036600319011261020a57600435600090815260026020526040902080546001600160a01b0316151580610e56575b6020906040519015158152f35b506009015460a01c60ff1660058110156104785760209015610e49565b3461020a57602036600319011261020a576001600160a01b03610e94611bea565b1660005260046020526020604060002054604051908152f35b3461020a57600036600319011261020a576001546040516001600160a01b039091168152602090f35b602036600319011261020a57600435610eed612920565b80600052600260205260ff60096040600020610f4060018060a01b03825416610f17811515611e1d565b600086815260066020526040902054610f39906001600160a01b031615611e69565b3314611eac565b015460a01c1660058110156104785780610f639115908115610fbd575b50611f32565b3415610f8a5760005260076020526040600020610f81348254611f7e565b90556001600055005b60405162461bcd60e51b815260206004820152600b60248201526a139bc8115512081cd95b9d60aa1b6044820152606490fd5b600191501483610f5d565b3461020a57600036600319011261020a5760206040517fd806147178df513a750f9faa80312ba59509af708425df523403bf058ce4b2448152f35b3461020a5761101136611c14565b9082600052600260205260406000209160018060a01b0383541690611037821515611e1d565b600984019260ff845460a01c1660058110156104785760010361118e576111296111206111389361111a869485600052600460205260406000205460405160208101917fd806147178df513a750f9faa80312ba59509af708425df523403bf058ce4b24483528d60408301526060820152606081526110b7608082611c61565b51902060405161190160f01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006022830152604282019290925261110f81606281015b03601f198101835282611c61565b519020923691611d42565b90612d9a565b90929192612dd6565b6001600160a01b0316146127e6565b6000526004602052604060002061114f8154611fe6565b9055805460ff60a01b19169055546001600160a01b0316907faa36c7b46a257244f7f4be84a7163f464e536b2f812d6c308ef7856c58ba925d600080a3005b60405162461bcd60e51b815260206004820152601760248201527f537562736372697074696f6e206e6f74207061757365640000000000000000006044820152606490fd5b3461020a57602036600319011261020a576111ec611bea565b6111f4612d71565b6001600160a01b031680156114285780600052600560205260ff60406000205416156113ed578060005260086020526040600020546113a857806000526005602052604060002060ff19815416905580600052600a602052604060002054801561136d576009548082036112de575b505060095480156112c8576000190161127b81612826565b81549060018060a01b039060031b1b1916905560095580600052600a602052600060408120557f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3600080a2005b634e487b7160e01b600052603160045260246000fd5b6000198101908111611357576112f390612826565b905460039190911b1c6001600160a01b03166000198201828111611357578161131e61134292612826565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b600052600a6020526040600020558180611263565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526013602482015272746f6b656e20696e646578206d697373696e6760681b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f41637469766520737562736372697074696f6e732070726573656e74000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260136024820152721d1bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f63616e6e6f742072656d6f76652065746820737570706f7274000000000000006044820152606490fd5b3461020a57600036600319011261020a57611486612d71565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461020a57602036600319011261020a576114e3611bea565b6114eb612d71565b6001600160a01b0381169081156115e75781600052600560205260ff604060002054166115a2578160005260056020526040600020600160ff19825416179055600954906801000000000000000082101561158c5761131e8260016115539401600955612826565b60095481600052600a6020526040600020557f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4600080a2005b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e20616c726561647920737570706f727465640000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272195d1a08185b1c9958591e48195b98589b1959606a1b6044820152606490fd5b3461020a5761163036611c14565b82600052600260205260406000209160018060a01b0383541690611655821515611e1d565b600984019260ff845460a01c16600581101561047857611120849261111a6116d8956116846111299515611f32565b85600052600460205260406000205460405160208101917fb4d196c0bbe67585f3497477b08a7dedca34f0794cef101cf570c3e415f6d93983528d60408301526060820152606081526110b7608082611c61565b600052600460205260406000206116ef8154611fe6565b9055805460ff60a01b1916600160a01b179055546001600160a01b0316907fded8d4d23682b33f0e79da6698526d10c5f7ec65705c1903e9ac7f78b5e3a51b600080a3005b3461020a57604036600319011261020a576024356001600160a01b038116810361020a5761176c90611764612920565b600435611ff5565b6001600055005b3461020a57602036600319011261020a576001600160a01b03611794611bea565b166000526005602052602060ff604060002054166040519015158152f35b3461020a57600036600319011261020a5760206040517fb4d196c0bbe67585f3497477b08a7dedca34f0794cef101cf570c3e415f6d9398152f35b3461020a57602036600319011261020a57600435611809612920565b80600052600260205260ff6009604060002061183360018060a01b03825416610f17811515611e1d565b015460a01c16600581101590816104785760028114918215611967575b8215611956575b505015611911578060005260076020526040600020549081156118d7576000808093819382526007602052816040812055335af1611893611eea565b50156118a0576001600055005b60405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f537562736372697074696f6e207374696c6c20616374697665000000000000006044820152606490fd5b909150610478576004148280611857565b506003811491506000611850565b3461020a57600036600319011261020a5760206040517f316f763395dccfb0903cc163e1283e12acbf4ec58e2882ed12c2f13bac9864618152f35b3461020a57602036600319011261020a5760006101406040516119d281611c44565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152015260043560005260026020526040600020604051611a2b81611c44565b60018060a01b03825416815260018060a01b0360018301541691602082019283526002810154604083019081526003820154916060840192835260048101549060808501918252600581015460a08601908152600682015460c0870190815260078301549160e0880192835260096008850154946101008a0195865201549460ff6101208a019660018060a01b038116885260a01c16976101408a019760058a1015610478576101609b610dde9a8a526040519b60018060a01b039051168c5260018060a01b0390511660208c01525160408b01525160608a01525160808901525160a08801525160c08701525160e08601525161010085015260018060a01b0390511661012084015251610140830190611bdd565b3461020a576040611b5a611b5436611b9f565b91611d8d565b825191151582526001600160a01b03166020820152f35b9181601f8401121561020a5782359167ffffffffffffffff831161020a576020838186019501011161020a57565b906003198201610160811261020a576101401361020a57600491610144359067ffffffffffffffff821161020a57611bd991600401611b71565b9091565b9060058210156104785752565b600435906001600160a01b038216820361020a57565b35906001600160a01b038216820361020a57565b90604060031983011261020a57600435916024359067ffffffffffffffff821161020a57611bd991600401611b71565b610160810190811067ffffffffffffffff82111761158c57604052565b90601f8019910116810190811067ffffffffffffffff82111761158c57604052565b91908261014091031261020a57604051610140810181811067ffffffffffffffff82111761158c57604052610120611d21818395611cc081611c00565b8552611cce60208201611c00565b602086015260408101356040860152606081013560608601526080810135608086015260a081013560a086015260c081013560c086015260e081013560e086015261010081013561010086015201611c00565b910152565b67ffffffffffffffff811161158c57601f01601f191660200190565b929192611d4e82611d26565b91611d5c6040519384611c61565b82948184528183011161020a578281602093846000960137010152565b356001600160a01b038116810361020a5790565b90611dfb939261111a611df292611da76106883687611c83565b60405161190160f01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006022830152604282019290925261110f8160628101611101565b90949194612dd6565b6001600160a01b0390611e0d90611d79565b166001600160a01b038316149190565b15611e2457565b60405162461bcd60e51b815260206004820152601b60248201527f537562736372697074696f6e20646f6573206e6f7420657869737400000000006044820152606490fd5b15611e7057565b60405162461bcd60e51b81526020600482015260146024820152732737ba1022aa241039bab139b1b934b83a34b7b760611b6044820152606490fd5b15611eb357565b60405162461bcd60e51b815260206004820152600f60248201526e27b7363c9039bab139b1b934b132b960891b6044820152606490fd5b3d15611f15573d90611efb82611d26565b91611f096040519384611c61565b82523d6000602084013e565b606090565b9081602091031261020a5751801515810361020a5790565b15611f3957565b60405162461bcd60e51b815260206004820152601760248201527f537562736372697074696f6e206e6f74206163746976650000000000000000006044820152606490fd5b9190820180921161135757565b8181029291811591840414171561135757565b9190820391821161135757565b60405190611fba604083611c61565b601882527f4d65726368616e74207472616e73666572206661696c656400000000000000006020830152565b60001981146113575760010190565b90336001600160a01b03909116036127ae576040516385c99e2b60e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691600091602081602481875afa9081156127a3578391612774575b5015612736578082526002602052604082208054612087906001600160a01b03161515611e1d565b600981019360ff855460a01c166005811015612722576120a79015611f32565b828452600660209081526040808620546001600160a01b0316808752600590925285205460ff16156126dd57600783015442116125fc57838552600260205261210d60408620858752600360205261052e60408820546003600484015493015490611f8b565b42106125c15783855260036020526040852054600181018091116125ad576002840190815492603284028481046032148515171561259957612710900493612155828961298d565b156124db5750612166848454611f9e565b8890896060918785156000146124cb57508a825260076020526040822054875411156124235750505060405161219d604082611c61565b601881527f496e73756666696369656e7420455448206465706f73697400000000000000006020820152905b156122e657507f8edd31b1042c3b68388248a57905bb81bd5b2abd7334d9e2cee14b88a479a23d60a08892838b52600360205260408b2061220a8154611fe6565b9055600180831b0389541694600180841b0360018b01541696549060405192835260208301526040820152866060820152336080820152a4813b156122e25784916064839260405194859384926344a7c63960e11b84523360048501526001602485015260448401525af180156122d7579084916122be575b5082905260036020526005604084205491015411156122a157505050565b6122aa90612942565b50805460ff60a01b1916600160a21b179055565b816122c891611c61565b6122d3578238612283565b8280fd5b6040513d86823e3d90fd5b8480fd5b9350505093919495508051156123e5575b60018060a01b03835416926001808060a01b039101541693549060405191825260406020830152805190816040840152875b8281106123cf575050906060818389837f8d07bb7d7ffc0fde6ebc3e0e718c1fdbfac73eb7ea593da5566fa86a1c3c1a309684010152601f80199101168101030190a4803b156123cb578180916064604051809481936344a7c63960e11b83523360048401528160248401528160448401525af180156123c0576123ab575050565b6123b6828092611c61565b6123bd5750565b80fd5b6040513d84823e3d90fd5b5080fd5b8060208092840101516060828701015201612329565b506040516123f4604082611c61565b601881527f5061796d656e7420657865637574696f6e206661696c6564000000000000000060208201526122f7565b60018a0154829182918291906001600160a01b03165af1612442611eea565b506124565750612450611fab565b906121c9565b90508880808088335af1612468611eea565b5015612490578354888a52600760205261248760408b20918254611f9e565b905560016121c9565b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b9250905061245092508389612af2565b9694979850505050507f8d07bb7d7ffc0fde6ebc3e0e718c1fdbfac73eb7ea593da5566fa86a1c3c1a30608060018060a01b03845416936001808060a01b03910154169460405190815260406020820152601d60408201527f457865637574696f6e20636f6e73747261696e7473206e6f74206d65740000006060820152a4803b156123cb578180916064604051809481936344a7c63960e11b83523360048401528160248401528160448401525af180156123c0576123ab575050565b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b815260206004820152601360248201527214185e5b595b9d081b9bdd08191d59481e595d606a1b6044820152606490fd5b50929361260a839293612942565b805460ff60a01b1916600360a01b1790558154600183015460029093015460408051918252602082018190526014908201527314dd589cd8dc9a5c1d1a5bdb88195e1c1a5c995960621b60608201526001600160a01b03938416939190911691907f8d07bb7d7ffc0fde6ebc3e0e718c1fdbfac73eb7ea593da5566fa86a1c3c1a3090608090a4803b156123cb578180916064604051809481936344a7c63960e11b83523360048401528160248401528160448401525af180156123c0576126d0575050565b816126da91611c61565b50565b60405162461bcd60e51b815260206004820152601960248201527f546f6b656e206e6f206c6f6e67657220737570706f72746564000000000000006044820152606490fd5b634e487b7160e01b85526021600452602485fd5b60405162461bcd60e51b815260206004820152601660248201527514995b185e595c881b9bdd08185d5d1a1bdc9a5e995960521b6044820152606490fd5b612796915060203d60201161279c575b61278e8183611c61565b810190611f1a565b3861205f565b503d612784565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f0a4cad8c2f2cae440dad2e6dac2e8c6d60831b6044820152606490fd5b156127ed57565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60095481101561284157600960005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60018060a01b038151169060018060a01b03602082015116906040810151906060810151608082015160a083015160c08401519160e0850151936101008601519561012060018060a01b0391015116966040519860208a019a7f316f763395dccfb0903cc163e1283e12acbf4ec58e2882ed12c2f13bac9864618c5260408b015260608a0152608089015260a088015260c087015260e0860152610100850152610120840152610140830152610160820152610160815261291a61018082611c61565b51902090565b600260005414612931576002600055565b633ee5aeb560e01b60005260046000fd5b600052600660205260018060a01b036040600020541680600052600860205260406000205461296e5750565b6000526008602052604060002080549060001982019182116113575755565b8060005260026020526040600020906000526003602052604060002054916005820154831015612aad576129d16129cc93600284015494858092611f8b565b611f7e565b600683015410612aad576001600160a01b0316908115612aea57546040516370a0823160e01b81526001600160a01b03909116600482018190529190602081602481855afa8015610a85578491600091612ab5575b5010612aad57604051636eb1769f60e11b81526001600160a01b03929092166004830152306024830152602090829060449082905afa908115610a8557600091612a7b575b5010612a7657600190565b600090565b90506020813d602011612aa5575b81612a9660209383611c61565b8101031261020a575138612a6b565b3d9150612a89565b505050600090565b9150506020813d602011612ae2575b81612ad160209383611c61565b8101031261020a5783905138612a26565b3d9150612ac4565b505050600190565b600281015481546040516370a0823160e01b81526001600160a01b039182166004820181905293969594909116939190602081602481885afa8015610a85578291600091612d3c575b5010612cf857604051636eb1769f60e11b81526001600160a01b0384166004820152306024820152602081604481885afa908115610a8557600091612cc6575b5010612c785760018501546040516323b872dd60e01b60208201526001600160a01b039384166024820152921660448301526064820152612bc990612bc38160848101611101565b82612e48565b15612c675791546040516323b872dd60e01b60208201526001600160a01b039091166024820152336044820152606480820192909252908152612c1691612c11608483611c61565b612e48565b15612c3357600190604051612c2c602082611c61565b6000815290565b600090604051612c44604082611c61565b6013815272119959481d1c985b9cd9995c8819985a5b1959606a1b602082015290565b505050600090612c75611fab565b90565b5050505050600090604051612c8e606082611c61565b602281527f496e73756666696369656e7420616c6c6f77616e636520666f72207061796d656020820152611b9d60f21b604082015290565b90506020813d602011612cf0575b81612ce160209383611c61565b8101031261020a575138612b7b565b3d9150612cd4565b505050505050600090604051612d0f604082611c61565b602081527f496e73756666696369656e742062616c616e636520666f72207061796d656e74602082015290565b9150506020813d602011612d69575b81612d5860209383611c61565b8101031261020a5781905138612b3b565b3d9150612d4b565b6001546001600160a01b03163303612d8557565b63118cdaa760e01b6000523360045260246000fd5b8151919060418303612dcb57612dc492506020820151906060604084015193015160001a90612e8c565b9192909190565b505060009160029190565b91909160048110156104785780612dec57509050565b600060018203612e075763f645eedf60e01b60005260046000fd5b5060028103612e25578263fce698f760e01b60005260045260246000fd5b9091600360009214612e35575050565b6335e2f38360e21b825260045260249150fd5b600091829182602083519301915af1612e5f611eea565b9015612e86578051908115612e7f57602080612c75938301019101611f1a565b5050600190565b50600090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612f09579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15610a85576000516001600160a01b03811615612efd5790600090600090565b50600090600190600090565b5050506000916003919056fea2646970667358221220282ed00533d21ab5955f8439b64617497a7e91e1ab1fe67d264628859cb2651a64736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1B JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1282A908 EQ PUSH2 0x1B41 JUMPI DUP1 PUSH4 0x1F32768E EQ PUSH2 0x19B0 JUMPI DUP1 PUSH4 0x33E5A1D6 EQ PUSH2 0x1975 JUMPI DUP1 PUSH4 0x4E504922 EQ PUSH2 0x17ED JUMPI DUP1 PUSH4 0x5ADF2D8D EQ PUSH2 0x17B2 JUMPI DUP1 PUSH4 0x6437ECFC EQ PUSH2 0xE73 JUMPI DUP1 PUSH4 0x68C4AC26 EQ PUSH2 0x1773 JUMPI DUP1 PUSH4 0x69E1FD9A EQ PUSH2 0x1734 JUMPI DUP1 PUSH4 0x6C00F051 EQ PUSH2 0x1622 JUMPI DUP1 PUSH4 0x6D69FCAF EQ PUSH2 0x14CA JUMPI DUP1 PUSH4 0x6F956971 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x146D JUMPI DUP1 PUSH4 0x76319190 EQ PUSH2 0x11D3 JUMPI DUP1 PUSH4 0x7656B440 EQ PUSH2 0xDE0 JUMPI DUP1 PUSH4 0x77BEF003 EQ PUSH2 0x1003 JUMPI DUP1 PUSH4 0x7B0E3B62 EQ PUSH2 0xFC8 JUMPI DUP1 PUSH4 0x7F4A7FD0 EQ PUSH2 0xED6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xEAD JUMPI DUP1 PUSH4 0x90193B7C EQ PUSH2 0xE73 JUMPI DUP1 PUSH4 0x91351C82 EQ PUSH2 0xE14 JUMPI DUP1 PUSH4 0x93DB9CC4 EQ PUSH2 0xDE0 JUMPI DUP1 PUSH4 0x94259C6C EQ PUSH2 0xD23 JUMPI DUP1 PUSH4 0x9C9B549D EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xA807DB75 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0xBE378228 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xC603FF48 EQ PUSH2 0x4D3 JUMPI DUP1 PUSH4 0xD21F1FFC EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD3C7C2C7 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xD6559120 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xEAEF9F2F EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xEBD9C39C EQ PUSH2 0x20F JUMPI PUSH4 0xF2FDE38B SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH2 0x199 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x288 PUSH2 0x1BEA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x9 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP3 PUSH1 0x9 PUSH1 0x0 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x34E JUMPI POP POP POP DUP2 PUSH2 0x302 SWAP2 SUB DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x32C JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x31E JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x2EC JUMP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A5 DUP2 ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST CALLER SUB PUSH2 0x48E JUMPI PUSH1 0x9 DUP2 ADD PUSH1 0xFF DUP2 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x478 JUMPI DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0x46D JUMPI JUMPDEST POP ISZERO PUSH2 0x429 JUMPI PUSH2 0x3D9 DUP4 PUSH2 0x2942 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA1 SHL OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP3 SWAP2 AND SWAP1 PUSH32 0x8065A33AD053D617D51579685A263B0F7C6EC05931DBC0280BFDA3A784208959 PUSH1 0x0 DUP1 LOG4 STOP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E2063616E6E6F742062652063616E63656C6C6564 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x1 SWAP2 POP EQ DUP5 PUSH2 0x3CA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920737562736372696265722063616E2063616E63656C000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x20 PUSH2 0x534 PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0x50E PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x3 DUP4 MSTORE PUSH2 0x52E PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x3 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP1 PUSH2 0x1F8B JUMP JUMPDEST SWAP1 PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH2 0x5AB CALLDATASIZE PUSH2 0x1B9F JUMP JUMPDEST SWAP2 PUSH2 0x100 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5C4 DUP3 PUSH2 0x1D79 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP3 SUB PUSH2 0xCEE JUMPI PUSH2 0x120 DUP2 ADD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x5F0 DUP7 PUSH2 0x1D79 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0xCB3 JUMPI PUSH2 0x621 PUSH2 0x615 DUP3 DUP7 DUP6 PUSH2 0x1D8D JUMP JUMPDEST DUP2 PUSH2 0xC8C JUMPI JUMPDEST POP PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD CALLDATALOAD SWAP1 TIMESTAMP DUP3 GT ISZERO PUSH2 0xC47 JUMPI PUSH1 0x80 DUP4 ADD CALLDATALOAD SWAP5 DUP3 DUP7 GT PUSH2 0xC03 JUMPI PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP4 DUP5 ISZERO PUSH2 0xBBF JUMPI PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 DUP2 ISZERO PUSH2 0xB6F JUMPI PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP3 DUP4 ISZERO PUSH2 0xB1B JUMPI PUSH1 0xC0 DUP3 ADD CALLDATALOAD SWAP5 PUSH2 0x670 DUP6 DUP10 PUSH2 0x1F8B JUMP JUMPDEST DUP7 LT PUSH2 0xAD6 JUMPI PUSH2 0x6B6 PUSH1 0x40 PUSH2 0x68D PUSH2 0x688 CALLDATASIZE DUP8 PUSH2 0x1C83 JUMP JUMPDEST PUSH2 0x2857 JUMP JUMPDEST SWAP4 DUP4 DUP3 MLOAD SWAP5 DUP6 SWAP3 PUSH1 0x20 DUP5 ADD SWAP8 DUP9 MSTORE DUP5 DUP5 ADD CALLDATACOPY DUP2 ADD PUSH1 0x0 DUP4 DUP3 ADD MSTORE SUB ADD PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1C61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xA91 JUMPI DUP10 SWAP8 DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x6ED DUP12 PUSH2 0x1D79 JUMP JUMPDEST AND PUSH2 0x98E JUMPI JUMPDEST PUSH2 0x6FC DUP5 PUSH2 0x1D79 JUMP JUMPDEST SWAP1 DUP9 DUP9 PUSH1 0x20 DUP8 ADD SWAP13 PUSH2 0x70D DUP15 PUSH2 0x1D79 JUMP JUMPDEST SWAP1 PUSH2 0x717 SWAP1 PUSH2 0x1D79 JUMP JUMPDEST SWAP7 PUSH1 0x40 MLOAD SWAP6 PUSH2 0x725 DUP8 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND DUP3 MSTORE DUP14 PUSH1 0x40 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 DUP12 DUP3 MSTORE PUSH1 0x80 DUP9 ADD SWAP3 DUP4 MSTORE PUSH1 0xA0 DUP9 ADD SWAP4 DUP14 DUP6 MSTORE PUSH1 0xC0 DUP10 ADD SWAP6 DUP7 MSTORE PUSH1 0xE0 DUP10 ADD SWAP7 DUP8 MSTORE PUSH2 0x100 DUP10 ADD SWAP8 DUP9 MSTORE PUSH2 0x120 DUP10 ADD SWAP11 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND DUP12 MSTORE PUSH2 0x140 DUP10 ADD SWAP10 PUSH1 0x0 DUP12 MSTORE PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP9 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 MLOAD AND AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP11 SLOAD AND OR DUP10 SSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 MLOAD AND PUSH1 0x1 DUP10 ADD SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP9 ADD SSTORE MLOAD PUSH1 0x3 DUP8 ADD SSTORE MLOAD PUSH1 0x4 DUP7 ADD SSTORE MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD PUSH1 0x7 DUP4 ADD SSTORE MLOAD PUSH1 0x8 DUP3 ADD SSTORE PUSH1 0x9 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB SWAP1 MLOAD AND AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 SLOAD AND OR DUP3 SSTORE MLOAD SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x478 JUMPI DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0xA0 SWAP3 SWAP1 SWAP3 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x0 PUSH2 0x87C DUP11 PUSH2 0x1D79 JUMP JUMPDEST DUP10 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH2 0x8AB DUP12 PUSH2 0x1D79 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x97A JUMPI SWAP4 PUSH2 0x938 PUSH2 0x932 PUSH2 0x92C DUP14 SWAP11 SWAP7 PUSH1 0x20 SWAP16 SWAP9 PUSH32 0xB76F505B43AEE5831D9F29BF6332A7AA4E48E7016819FBD63DE7DBACE080F049 SWAP12 SWAP8 PUSH1 0xC0 SWAP12 SWAP8 PUSH1 0x40 SWAP3 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x911 DUP5 PUSH2 0x1D79 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 SWAP1 MSTORE KECCAK256 PUSH2 0x925 DUP2 SLOAD PUSH2 0x1FE6 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1D79 JUMP JUMPDEST SWAP12 PUSH2 0x1D79 JUMP JUMPDEST SWAP6 PUSH2 0x1D79 JUMP JUMPDEST SWAP9 PUSH1 0x40 MLOAD SWAP10 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP11 MSTORE DUP13 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x60 DUP9 ADD MSTORE PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP4 LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP9 POP POP PUSH2 0x99B DUP5 DUP9 PUSH2 0x1F8B JUMP JUMPDEST PUSH2 0x9ED PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9B1 DUP15 PUSH2 0x1D79 JUMP JUMPDEST AND PUSH2 0x9BB DUP7 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA85 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xA53 JUMPI JUMPDEST POP LT PUSH2 0xA0E JUMPI DUP9 DUP11 SWAP9 PUSH2 0x6F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420746F6B656E20616C6C6F77616E636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA7D JUMPI JUMPDEST DUP2 PUSH2 0xA6E PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20A JUMPI MLOAD DUP13 PUSH2 0xA00 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E20616C7265616479206578697374730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D617820746F74616C20616D6F756E7420696E73756666696369656E74000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178207061796D656E7473206D757374206265206772656174657220746861 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E74657276616C206D7573742062652067726561746572207468616E207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x726F PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D757374206265206265666F726520657870697279 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E20696E74656E7420657870697265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC9F DUP6 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 AND EQ DUP8 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964206E6F6E6365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x160 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xDDE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD SWAP1 PUSH1 0x6 DUP6 ADD SLOAD SWAP3 PUSH1 0x7 DUP7 ADD SLOAD SWAP5 PUSH1 0x9 PUSH1 0x8 DUP9 ADD SLOAD SWAP8 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x120 DUP5 ADD MSTORE PUSH1 0xFF PUSH2 0x140 DUP5 ADD SWAP2 PUSH1 0xA0 SHR AND PUSH2 0x1BDD JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO DUP1 PUSH2 0xE56 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x9 ADD SLOAD PUSH1 0xA0 SHR PUSH1 0xFF AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x20 SWAP1 ISZERO PUSH2 0xE49 JUMP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE94 PUSH2 0x1BEA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xEED PUSH2 0x2920 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xF40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND PUSH2 0xF17 DUP2 ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xF39 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1E69 JUMP JUMPDEST CALLER EQ PUSH2 0x1EAC JUMP JUMPDEST ADD SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x478 JUMPI DUP1 PUSH2 0xF63 SWAP2 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xFBD JUMPI JUMPDEST POP PUSH2 0x1F32 JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xF8A JUMPI PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xF81 CALLVALUE DUP3 SLOAD PUSH2 0x1F7E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x139BC8115512081CD95B9D PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 POP EQ DUP4 PUSH2 0xF5D JUMP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xD806147178DF513A750F9FAA80312BA59509AF708425DF523403BF058CE4B244 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH2 0x1011 CALLDATASIZE PUSH2 0x1C14 JUMP JUMPDEST SWAP1 DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP1 PUSH2 0x1037 DUP3 ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x9 DUP5 ADD SWAP3 PUSH1 0xFF DUP5 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x1 SUB PUSH2 0x118E JUMPI PUSH2 0x1129 PUSH2 0x1120 PUSH2 0x1138 SWAP4 PUSH2 0x111A DUP7 SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0xD806147178DF513A750F9FAA80312BA59509AF708425DF523403BF058CE4B244 DUP4 MSTORE DUP14 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x10B7 PUSH1 0x80 DUP3 PUSH2 0x1C61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x110F DUP2 PUSH1 0x62 DUP2 ADD JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x1C61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 CALLDATASIZE SWAP2 PUSH2 0x1D42 JUMP JUMPDEST SWAP1 PUSH2 0x2D9A JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x2DD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x114F DUP2 SLOAD PUSH2 0x1FE6 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xAA36C7B46A257244F7F4BE84A7163F464E536B2F812D6C308EF7856C58BA925D PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E206E6F7420706175736564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH2 0x11EC PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x11F4 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1428 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x13ED JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x13A8 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x136D JUMPI PUSH1 0x9 SLOAD DUP1 DUP3 SUB PUSH2 0x12DE JUMPI JUMPDEST POP POP PUSH1 0x9 SLOAD DUP1 ISZERO PUSH2 0x12C8 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x127B DUP2 PUSH2 0x2826 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE PUSH1 0x9 SSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH32 0x4C910B69FE65A61F7531B9C5042B2329CA7179C77290AA7E2EB3AFA3C8511FD3 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x1357 JUMPI PUSH2 0x12F3 SWAP1 PUSH2 0x2826 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 NOT DUP3 ADD DUP3 DUP2 GT PUSH2 0x1357 JUMPI DUP2 PUSH2 0x131E PUSH2 0x1342 SWAP3 PUSH2 0x2826 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL SWAP4 SWAP1 SWAP2 SHL NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE DUP2 DUP1 PUSH2 0x1263 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x746F6B656E20696E646578206D697373696E67 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41637469766520737562736372697074696F6E732070726573656E7400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x1D1BDAD95B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616E6E6F742072656D6F76652065746820737570706F727400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH2 0x1486 PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH2 0x14E3 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x14EB PUSH2 0x2D71 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x15E7 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x15A2 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x9 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x158C JUMPI PUSH2 0x131E DUP3 PUSH1 0x1 PUSH2 0x1553 SWAP5 ADD PUSH1 0x9 SSTORE PUSH2 0x2826 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH32 0x784C8F4DBF0FFEDD6E72C76501C545A70F8B203B30A26CE542BF92BA87C248A4 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616C726561647920737570706F72746564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x195D1A08185B1C9958591E48195B98589B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH2 0x1630 CALLDATASIZE PUSH2 0x1C14 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP1 PUSH2 0x1655 DUP3 ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x9 DUP5 ADD SWAP3 PUSH1 0xFF DUP5 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH2 0x1120 DUP5 SWAP3 PUSH2 0x111A PUSH2 0x16D8 SWAP6 PUSH2 0x1684 PUSH2 0x1129 SWAP6 ISZERO PUSH2 0x1F32 JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH32 0xB4D196C0BBE67585F3497477B08A7DEDCA34F0794CEF101CF570C3E415F6D939 DUP4 MSTORE DUP14 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP2 MSTORE PUSH2 0x10B7 PUSH1 0x80 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x16EF DUP2 SLOAD PUSH2 0x1FE6 JUMP JUMPDEST SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xDED8D4D23682B33F0E79DA6698526D10C5F7EC65705C1903E9AC7F78B5E3A51B PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x20A JUMPI PUSH2 0x176C SWAP1 PUSH2 0x1764 PUSH2 0x2920 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x1FF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1794 PUSH2 0x1BEA JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xB4D196C0BBE67585F3497477B08A7DEDCA34F0794CEF101CF570C3E415F6D939 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1809 PUSH2 0x2920 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1833 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND PUSH2 0xF17 DUP2 ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST ADD SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x478 JUMPI PUSH1 0x2 DUP2 EQ SWAP2 DUP3 ISZERO PUSH2 0x1967 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x1956 JUMPI JUMPDEST POP POP ISZERO PUSH2 0x1911 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x18D7 JUMPI PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x40 DUP2 KECCAK256 SSTORE CALLER GAS CALL PUSH2 0x1893 PUSH2 0x1EEA JUMP JUMPDEST POP ISZERO PUSH2 0x18A0 JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x15DA5D1A191C985DC819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2045544820746F207769746864726177 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E207374696C6C2061637469766500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH2 0x478 JUMPI PUSH1 0x4 EQ DUP3 DUP1 PUSH2 0x1857 JUMP JUMPDEST POP PUSH1 0x3 DUP2 EQ SWAP2 POP PUSH1 0x0 PUSH2 0x1850 JUMP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x316F763395DCCFB0903CC163E1283E12ACBF4EC58E2882ED12C2F13BAC986461 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x20A JUMPI PUSH1 0x0 PUSH2 0x140 PUSH1 0x40 MLOAD PUSH2 0x19D2 DUP2 PUSH2 0x1C44 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE DUP3 PUSH2 0x100 DUP3 ADD MSTORE DUP3 PUSH2 0x120 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1A2B DUP2 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP2 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x60 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x80 DUP6 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xC0 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x7 DUP4 ADD SLOAD SWAP2 PUSH1 0xE0 DUP9 ADD SWAP3 DUP4 MSTORE PUSH1 0x9 PUSH1 0x8 DUP6 ADD SLOAD SWAP5 PUSH2 0x100 DUP11 ADD SWAP6 DUP7 MSTORE ADD SLOAD SWAP5 PUSH1 0xFF PUSH2 0x120 DUP11 ADD SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP9 MSTORE PUSH1 0xA0 SHR AND SWAP8 PUSH2 0x140 DUP11 ADD SWAP8 PUSH1 0x5 DUP11 LT ISZERO PUSH2 0x478 JUMPI PUSH2 0x160 SWAP12 PUSH2 0xDDE SWAP11 DUP11 MSTORE PUSH1 0x40 MLOAD SWAP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND DUP13 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x20 DUP13 ADD MSTORE MLOAD PUSH1 0x40 DUP12 ADD MSTORE MLOAD PUSH1 0x60 DUP11 ADD MSTORE MLOAD PUSH1 0x80 DUP10 ADD MSTORE MLOAD PUSH1 0xA0 DUP9 ADD MSTORE MLOAD PUSH1 0xC0 DUP8 ADD MSTORE MLOAD PUSH1 0xE0 DUP7 ADD MSTORE MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH2 0x120 DUP5 ADD MSTORE MLOAD PUSH2 0x140 DUP4 ADD SWAP1 PUSH2 0x1BDD JUMP JUMPDEST CALLVALUE PUSH2 0x20A JUMPI PUSH1 0x40 PUSH2 0x1B5A PUSH2 0x1B54 CALLDATASIZE PUSH2 0x1B9F JUMP JUMPDEST SWAP2 PUSH2 0x1D8D JUMP JUMPDEST DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x20A JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x20A JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0x20A JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT DUP3 ADD PUSH2 0x160 DUP2 SLT PUSH2 0x20A JUMPI PUSH2 0x140 SGT PUSH2 0x20A JUMPI PUSH1 0x4 SWAP2 PUSH2 0x144 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x20A JUMPI PUSH2 0x1BD9 SWAP2 PUSH1 0x4 ADD PUSH2 0x1B71 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x478 JUMPI MSTORE JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x20A JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x20A JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x20A JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x20A JUMPI PUSH2 0x1BD9 SWAP2 PUSH1 0x4 ADD PUSH2 0x1B71 JUMP JUMPDEST PUSH2 0x160 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x158C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x158C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 PUSH2 0x140 SWAP2 SUB SLT PUSH2 0x20A JUMPI PUSH1 0x40 MLOAD PUSH2 0x140 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x158C JUMPI PUSH1 0x40 MSTORE PUSH2 0x120 PUSH2 0x1D21 DUP2 DUP4 SWAP6 PUSH2 0x1CC0 DUP2 PUSH2 0x1C00 JUMP JUMPDEST DUP6 MSTORE PUSH2 0x1CCE PUSH1 0x20 DUP3 ADD PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xC0 DUP2 ADD CALLDATALOAD PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP2 ADD CALLDATALOAD PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP2 ADD CALLDATALOAD PUSH2 0x100 DUP7 ADD MSTORE ADD PUSH2 0x1C00 JUMP JUMPDEST SWAP2 ADD MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x158C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x1D4E DUP3 PUSH2 0x1D26 JUMP JUMPDEST SWAP2 PUSH2 0x1D5C PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1C61 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x20A JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x20A JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1DFB SWAP4 SWAP3 PUSH2 0x111A PUSH2 0x1DF2 SWAP3 PUSH2 0x1DA7 PUSH2 0x688 CALLDATASIZE DUP8 PUSH2 0x1C83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH32 0x0 PUSH1 0x22 DUP4 ADD MSTORE PUSH1 0x42 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x110F DUP2 PUSH1 0x62 DUP2 ADD PUSH2 0x1101 JUMP JUMPDEST SWAP1 SWAP5 SWAP2 SWAP5 PUSH2 0x2DD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1E0D SWAP1 PUSH2 0x1D79 JUMP JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP2 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1E24 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E20646F6573206E6F742065786973740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E70 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2737BA1022AA241039BAB139B1B934B83A34B7B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1EB3 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x27B7363C9039BAB139B1B934B132B9 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1F15 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1EFB DUP3 PUSH2 0x1D26 JUMP JUMPDEST SWAP2 PUSH2 0x1F09 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1C61 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x20A JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x20A JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1F39 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537562736372697074696F6E206E6F7420616374697665000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1357 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1357 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1357 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1FBA PUSH1 0x40 DUP4 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x18 DUP3 MSTORE PUSH32 0x4D65726368616E74207472616E73666572206661696C65640000000000000000 PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1357 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x27AE JUMPI PUSH1 0x40 MLOAD PUSH4 0x85C99E2B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP8 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x27A3 JUMPI DUP4 SWAP2 PUSH2 0x2774 JUMPI JUMPDEST POP ISZERO PUSH2 0x2736 JUMPI DUP1 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH2 0x2087 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO PUSH2 0x1E1D JUMP JUMPDEST PUSH1 0x9 DUP2 ADD SWAP4 PUSH1 0xFF DUP6 SLOAD PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x2722 JUMPI PUSH2 0x20A7 SWAP1 ISZERO PUSH2 0x1F32 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP8 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP6 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x26DD JUMPI PUSH1 0x7 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x25FC JUMPI DUP4 DUP6 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x210D PUSH1 0x40 DUP7 KECCAK256 DUP6 DUP8 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x52E PUSH1 0x40 DUP9 KECCAK256 SLOAD PUSH1 0x3 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP1 PUSH2 0x1F8B JUMP JUMPDEST TIMESTAMP LT PUSH2 0x25C1 JUMPI DUP4 DUP6 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SLOAD PUSH1 0x1 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x25AD JUMPI PUSH1 0x2 DUP5 ADD SWAP1 DUP2 SLOAD SWAP3 PUSH1 0x32 DUP5 MUL DUP5 DUP2 DIV PUSH1 0x32 EQ DUP6 ISZERO OR ISZERO PUSH2 0x2599 JUMPI PUSH2 0x2710 SWAP1 DIV SWAP4 PUSH2 0x2155 DUP3 DUP10 PUSH2 0x298D JUMP JUMPDEST ISZERO PUSH2 0x24DB JUMPI POP PUSH2 0x2166 DUP5 DUP5 SLOAD PUSH2 0x1F9E JUMP JUMPDEST DUP9 SWAP1 DUP10 PUSH1 0x60 SWAP2 DUP8 DUP6 ISZERO PUSH1 0x0 EQ PUSH2 0x24CB JUMPI POP DUP11 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP8 SLOAD GT ISZERO PUSH2 0x2423 JUMPI POP POP POP PUSH1 0x40 MLOAD PUSH2 0x219D PUSH1 0x40 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x496E73756666696369656E7420455448206465706F7369740000000000000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMPDEST ISZERO PUSH2 0x22E6 JUMPI POP PUSH32 0x8EDD31B1042C3B68388248A57905BB81BD5B2ABD7334D9E2CEE14B88A479A23D PUSH1 0xA0 DUP9 SWAP3 DUP4 DUP12 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP12 KECCAK256 PUSH2 0x220A DUP2 SLOAD PUSH2 0x1FE6 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 DUP1 DUP4 SHL SUB DUP10 SLOAD AND SWAP5 PUSH1 0x1 DUP1 DUP5 SHL SUB PUSH1 0x1 DUP12 ADD SLOAD AND SWAP7 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP7 PUSH1 0x60 DUP3 ADD MSTORE CALLER PUSH1 0x80 DUP3 ADD MSTORE LOG4 DUP2 EXTCODESIZE ISZERO PUSH2 0x22E2 JUMPI DUP5 SWAP2 PUSH1 0x64 DUP4 SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x44A7C639 PUSH1 0xE1 SHL DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x22D7 JUMPI SWAP1 DUP5 SWAP2 PUSH2 0x22BE JUMPI JUMPDEST POP DUP3 SWAP1 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x5 PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP2 ADD SLOAD GT ISZERO PUSH2 0x22A1 JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x22AA SWAP1 PUSH2 0x2942 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA2 SHL OR SWAP1 SSTORE JUMP JUMPDEST DUP2 PUSH2 0x22C8 SWAP2 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x22D3 JUMPI DUP3 CODESIZE PUSH2 0x2283 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST SWAP4 POP POP POP SWAP4 SWAP2 SWAP5 SWAP6 POP DUP1 MLOAD ISZERO PUSH2 0x23E5 JUMPI JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND SWAP3 PUSH1 0x1 DUP1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP4 SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 PUSH1 0x40 DUP5 ADD MSTORE DUP8 JUMPDEST DUP3 DUP2 LT PUSH2 0x23CF JUMPI POP POP SWAP1 PUSH1 0x60 DUP2 DUP4 DUP10 DUP4 PUSH32 0x8D07BB7D7FFC0FDE6EBC3E0E718C1FDBFAC73EB7EA593DA5566FA86A1C3C1A30 SWAP7 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SUB ADD SWAP1 LOG4 DUP1 EXTCODESIZE ISZERO PUSH2 0x23CB JUMPI DUP2 DUP1 SWAP2 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x44A7C639 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE DUP2 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x23C0 JUMPI PUSH2 0x23AB JUMPI POP POP JUMP JUMPDEST PUSH2 0x23B6 DUP3 DUP1 SWAP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x23BD JUMPI POP JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD PUSH1 0x60 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x2329 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x23F4 PUSH1 0x40 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH32 0x5061796D656E7420657865637574696F6E206661696C65640000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x22F7 JUMP JUMPDEST PUSH1 0x1 DUP11 ADD SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x2442 PUSH2 0x1EEA JUMP JUMPDEST POP PUSH2 0x2456 JUMPI POP PUSH2 0x2450 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 PUSH2 0x21C9 JUMP JUMPDEST SWAP1 POP DUP9 DUP1 DUP1 DUP1 DUP9 CALLER GAS CALL PUSH2 0x2468 PUSH2 0x1EEA JUMP JUMPDEST POP ISZERO PUSH2 0x2490 JUMPI DUP4 SLOAD DUP9 DUP11 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x2487 PUSH1 0x40 DUP12 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0x1F9E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 POP SWAP1 POP PUSH2 0x2450 SWAP3 POP DUP4 DUP10 PUSH2 0x2AF2 JUMP JUMPDEST SWAP7 SWAP5 SWAP8 SWAP9 POP POP POP POP POP PUSH32 0x8D07BB7D7FFC0FDE6EBC3E0E718C1FDBFAC73EB7EA593DA5566FA86A1C3C1A30 PUSH1 0x80 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 SLOAD AND SWAP4 PUSH1 0x1 DUP1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x457865637574696F6E20636F6E73747261696E7473206E6F74206D6574000000 PUSH1 0x60 DUP3 ADD MSTORE LOG4 DUP1 EXTCODESIZE ISZERO PUSH2 0x23CB JUMPI DUP2 DUP1 SWAP2 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x44A7C639 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE DUP2 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x23C0 JUMPI PUSH2 0x23AB JUMPI POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP10 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP10 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x14185E5B595B9D081B9BDD08191D59481E595D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP SWAP3 SWAP4 PUSH2 0x260A DUP4 SWAP3 SWAP4 PUSH2 0x2942 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x3 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14DD589CD8DC9A5C1D1A5BDB88195E1C1A5C9959 PUSH1 0x62 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP4 SWAP2 SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH32 0x8D07BB7D7FFC0FDE6EBC3E0E718C1FDBFAC73EB7EA593DA5566FA86A1C3C1A30 SWAP1 PUSH1 0x80 SWAP1 LOG4 DUP1 EXTCODESIZE ISZERO PUSH2 0x23CB JUMPI DUP2 DUP1 SWAP2 PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x44A7C639 PUSH1 0xE1 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE DUP2 PUSH1 0x24 DUP5 ADD MSTORE DUP2 PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x23C0 JUMPI PUSH2 0x26D0 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH2 0x26DA SWAP2 PUSH2 0x1C61 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F206C6F6E67657220737570706F7274656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14995B185E595C881B9BDD08185D5D1A1BDC9A5E9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2796 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x279C JUMPI JUMPDEST PUSH2 0x278E DUP2 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1F1A JUMP JUMPDEST CODESIZE PUSH2 0x205F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0xA4CAD8C2F2CAE440DAD2E6DAC2E8C6D PUSH1 0x83 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x27ED JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2841 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND SWAP1 PUSH1 0x40 DUP2 ADD MLOAD SWAP1 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xC0 DUP5 ADD MLOAD SWAP2 PUSH1 0xE0 DUP6 ADD MLOAD SWAP4 PUSH2 0x100 DUP7 ADD MLOAD SWAP6 PUSH2 0x120 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 ADD MLOAD AND SWAP7 PUSH1 0x40 MLOAD SWAP9 PUSH1 0x20 DUP11 ADD SWAP11 PUSH32 0x316F763395DCCFB0903CC163E1283E12ACBF4EC58E2882ED12C2F13BAC986461 DUP13 MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x120 DUP5 ADD MSTORE PUSH2 0x140 DUP4 ADD MSTORE PUSH2 0x160 DUP3 ADD MSTORE PUSH2 0x160 DUP2 MSTORE PUSH2 0x291A PUSH2 0x180 DUP3 PUSH2 0x1C61 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x2931 JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x296E JUMPI POP JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x1357 JUMPI SSTORE JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP2 PUSH1 0x5 DUP3 ADD SLOAD DUP4 LT ISZERO PUSH2 0x2AAD JUMPI PUSH2 0x29D1 PUSH2 0x29CC SWAP4 PUSH1 0x2 DUP5 ADD SLOAD SWAP5 DUP6 DUP1 SWAP3 PUSH2 0x1F8B JUMP JUMPDEST PUSH2 0x1F7E JUMP JUMPDEST PUSH1 0x6 DUP4 ADD SLOAD LT PUSH2 0x2AAD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x2AEA JUMPI SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0xA85 JUMPI DUP5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2AB5 JUMPI JUMPDEST POP LT PUSH2 0x2AAD JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA85 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A7B JUMPI JUMPDEST POP LT PUSH2 0x2A76 JUMPI PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AA5 JUMPI JUMPDEST DUP2 PUSH2 0x2A96 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20A JUMPI MLOAD CODESIZE PUSH2 0x2A6B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2A89 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2AE2 JUMPI JUMPDEST DUP2 PUSH2 0x2AD1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20A JUMPI DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x2A26 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2AC4 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE SWAP4 SWAP7 SWAP6 SWAP5 SWAP1 SWAP2 AND SWAP4 SWAP2 SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0xA85 JUMPI DUP3 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2D3C JUMPI JUMPDEST POP LT PUSH2 0x2CF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP9 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xA85 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2CC6 JUMPI JUMPDEST POP LT PUSH2 0x2C78 JUMPI PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x2BC9 SWAP1 PUSH2 0x2BC3 DUP2 PUSH1 0x84 DUP2 ADD PUSH2 0x1101 JUMP JUMPDEST DUP3 PUSH2 0x2E48 JUMP JUMPDEST ISZERO PUSH2 0x2C67 JUMPI SWAP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE CALLER PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 MSTORE PUSH2 0x2C16 SWAP2 PUSH2 0x2C11 PUSH1 0x84 DUP4 PUSH2 0x1C61 JUMP JUMPDEST PUSH2 0x2E48 JUMP JUMPDEST ISZERO PUSH2 0x2C33 JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2C2C PUSH1 0x20 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2C44 PUSH1 0x40 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x13 DUP2 MSTORE PUSH19 0x119959481D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 PUSH2 0x2C75 PUSH2 0x1FAB JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2C8E PUSH1 0x60 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x22 DUP2 MSTORE PUSH32 0x496E73756666696369656E7420616C6C6F77616E636520666F72207061796D65 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1B9D PUSH1 0xF2 SHL PUSH1 0x40 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2CF0 JUMPI JUMPDEST DUP2 PUSH2 0x2CE1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20A JUMPI MLOAD CODESIZE PUSH2 0x2B7B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2CD4 JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x2D0F PUSH1 0x40 DUP3 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520666F72207061796D656E74 PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2D69 JUMPI JUMPDEST DUP2 PUSH2 0x2D58 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1C61 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x20A JUMPI DUP2 SWAP1 MLOAD CODESIZE PUSH2 0x2B3B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2D4B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2D85 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x2DCB JUMPI PUSH2 0x2DC4 SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x2E8C JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x478 JUMPI DUP1 PUSH2 0x2DEC JUMPI POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SUB PUSH2 0x2E07 JUMPI PUSH4 0xF645EEDF PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP2 SUB PUSH2 0x2E25 JUMPI DUP3 PUSH4 0xFCE698F7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x3 PUSH1 0x0 SWAP3 EQ PUSH2 0x2E35 JUMPI POP POP JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP2 GAS CALL PUSH2 0x2E5F PUSH2 0x1EEA JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x2E86 JUMPI DUP1 MLOAD SWAP1 DUP2 ISZERO PUSH2 0x2E7F JUMPI PUSH1 0x20 DUP1 PUSH2 0x2C75 SWAP4 DUP4 ADD ADD SWAP2 ADD PUSH2 0x1F1A JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x2F09 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH1 0x0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0xA85 JUMPI PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2EFD JUMPI SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x2E 0xD0 SDIV CALLER 0xD2 BYTE 0xB5 SWAP6 PUSH0 DUP5 CODECOPY 0xB6 CHAINID OR BLOBHASH PUSH27 0x7E91E1AB1FE67D264628859CB2651A64736F6C634300081C003300 ","sourceMap":"323:22170:15:-:0;;;;;;;;;-1:-1:-1;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;323:22170:15;2627:22:0;;2623:91;;3004:6;323:22170:15;;-1:-1:-1;;;;;;323:22170:15;;;;;;;-1:-1:-1;;;;;323:22170:15;3052:40:0;-1:-1:-1;;3052:40:0;323:22170:15;2623:91:0;2672:31;;;323:22170:15;2672:31:0;323:22170:15;;;;;2672:31:0;323:22170:15;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;;1420:46;323:22170;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;;1199:51;323:22170;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;-1:-1:-1;;;;;323:22170:15;;:::i;:::-;;;;1472:59;323:22170;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;;6087:18;323:22170;;;;;;;;6087:18;323:22170;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;-1:-1:-1;323:22170:15;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;;;;16826:13;323:22170;;;;;;;-1:-1:-1;;;;;323:22170:15;16866:77;16874:37;;;16866:77;:::i;:::-;16961:10;:37;323:22170;;17060:19;;;323:22170;;;;;;;;;;;;17060:48;;:100;;;;;323:22170;;;;;17251:14;;;:::i;:::-;323:22170;;-1:-1:-1;;;;323:22170:15;-1:-1:-1;;;323:22170:15;;;;;;17405:21;;;;323:22170;-1:-1:-1;;;;;323:22170:15;;;;;;;17342:85;-1:-1:-1;;17342:85:15;323:22170;;;;;;;;;;;;;;;;;;;;;;;;;;17060:100;323:22170;;;17112:48;17060:100;;;323:22170;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;7025:67;323:22170;;;;;6822:13;323:22170;;;;;;6861:77;323:22170;;;;;;;;6869:37;;6861:77;:::i;:::-;323:22170;;6976:16;323:22170;;7051:40;323:22170;;;;6976:16;323:22170;7025:22;;323:22170;7070:21;;323:22170;7051:40;;:::i;:::-;7025:67;;:::i;:::-;323:22170;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;1739:2;323:22170;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;1641:49;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;;;;:::i;:::-;7554:12;;;;323:22170;;-1:-1:-1;;;;;7583:17:15;7554:12;7583:17;:::i;:::-;323:22170;;;;;;;;;;7554:47;;323:22170;;7653:12;;;;-1:-1:-1;;;;;7653:12:15;;;:::i;:::-;323:22170;;;7637:15;323:22170;;;;;;;;;;;7773:66;7732:31;;;;;:::i;:::-;7781:36;;;323:22170;7773:66;;:::i;:::-;323:22170;19573:13;;323:22170;19589:15;;19573:31;;323:22170;;;19654:16;;;323:22170;19654:33;;;;323:22170;;;19742:13;;323:22170;19742:17;;;323:22170;;19814:15;;;323:22170;19814:19;;;323:22170;;19890:18;;;323:22170;19890:22;;;323:22170;;19973:21;;;323:22170;19998:34;;;;;:::i;:::-;19973:59;;323:22170;;7923:48;323:22170;7940:19;323:22170;;;;:::i;:::-;7940:19;:::i;:::-;323:22170;;;;7923:48;;;323:22170;7923:48;;323:22170;;;;;;;;;;;;;;7923:48;;15220:89;;7923:48;;;;;;:::i;:::-;323:22170;7913:59;;323:22170;;;;7991:13;323:22170;;;;;;7913:59;;323:22170;-1:-1:-1;;;;;323:22170:15;;;;;;;-1:-1:-1;;;;;8092:12:15;323:22170;8092:12;:::i;:::-;323:22170;8088:305;;323:22170;8474:17;;;:::i;:::-;8515:15;;;323:22170;8515:15;;;;;;:::i;:::-;8830:12;;;;:::i;:::-;323:22170;;;;;;;:::i;:::-;;;;;;;;;;;8435:465;;323:22170;;;;;;;;;;8435:465;323:22170;8435:465;;323:22170;;;19814:15;8435:465;;323:22170;;;;19654:16;8435:465;;323:22170;;;19890:18;8435:465;;323:22170;;;;19973:21;8435:465;;323:22170;;;;8435:465;;323:22170;;;7554:12;8435:465;;323:22170;;;7653:12;8435:465;;323:22170;;;;;;;;;;8435:465;;;323:22170;;;;;;7991:13;323:22170;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;7991:13;323:22170;;;;;;;;;;;;;;7637:15;323:22170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;7637:15;323:22170;;;;;;;-1:-1:-1;;;;323:22170:15;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;8947:12;;;:::i;:::-;323:22170;;;;;;;;;;;-1:-1:-1;;;;;;323:22170:15;-1:-1:-1;;;;;323:22170:15;;;;;;8994:12;;;:::i;:::-;323:22170;;;;;;;;;;;;;;;;;;;;;9193:12;9164:15;9133:17;323:22170;;;;;;9072:293;323:22170;;19973:21;323:22170;;;;;;;;;;9036:17;;;:::i;:::-;323:22170;;;;;;;;9023:33;323:22170;;9023:33;:::i;:::-;323:22170;;9133:17;:::i;:::-;9164:15;;:::i;:::-;9193:12;;:::i;:::-;323:22170;;;;;;;;;;;;;;;;;;;;19814:15;323:22170;;;19654:16;323:22170;;;19890:18;323:22170;;;;;;;;;;;;;;;;9072:293;;323:22170;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;8088:305;8162:34;;;;;;;:::i;:::-;8235:64;323:22170;-1:-1:-1;;;;;8242:12:15;323:22170;8242:12;:::i;:::-;323:22170;8266:17;;;:::i;:::-;323:22170;;-1:-1:-1;;;8235:64:15;;-1:-1:-1;;;;;323:22170:15;;;;8235:64;;323:22170;8293:4;323:22170;;;;;;;;;;;;;;;;;8235:64;;;;;;;;;;323:22170;8235:64;;;8088:305;8235:85;;323:22170;;8088:305;;;;;323:22170;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;8235:64;;;323:22170;8235:64;;323:22170;8235:64;;;;;;323:22170;8235:64;;;:::i;:::-;;;323:22170;;;;;8235:64;;;;;;-1:-1:-1;8235:64:15;;;323:22170;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;7781:36;323:22170;-1:-1:-1;;;;;;7800:17:15;;;:::i;:::-;-1:-1:-1;;;;;323:22170:15;;;;;7790:27;7781:36;;;323:22170;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;;1140:53;323:22170;;;;;;;;;;;;;;;;;;;;;;1140:53;;323:22170;;1140:53;;;;323:22170;1140:53;;;323:22170;;1140:53;;323:22170;1140:53;;;323:22170;1140:53;;;;323:22170;1140:53;;;;323:22170;1140:53;;;;;323:22170;1140:53;;323:22170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;;6221:17;323:22170;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;;;;7234:13;323:22170;;;;;;;-1:-1:-1;;;;;323:22170:15;7280:37;;;:89;;323:22170;;;;;;;;;;;7280:89;-1:-1:-1;7321:19:15;;323:22170;;;;;;;;;;;;7321:48;;7280:89;;323:22170;;;;;;-1:-1:-1;;323:22170:15;;;;-1:-1:-1;;;;;323:22170:15;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;2466:103:10;;:::i;:::-;323:22170:15;;;13311:13;323:22170;;;13623:19;323:22170;;;13527:65;323:22170;;;;;;;;13350:77;13358:37;;;13350:77;:::i;:::-;323:22170;;;;13445:17;323:22170;;;;;;13437:80;;-1:-1:-1;;;;;323:22170:15;13445:47;13437:80;:::i;:::-;13562:10;13535:37;13527:65;:::i;:::-;13623:19;323:22170;;;;;;;;;;13623:48;13602:170;13623:48;;:100;;;;;323:22170;13602:170;;:::i;:::-;13790:9;:13;323:22170;;;;13830:11;323:22170;;;;;13830:40;13790:9;323:22170;;13830:40;:::i;:::-;323:22170;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;13623:100;323:22170;;;13675:48;13623:100;;;323:22170;;;;;;-1:-1:-1;;323:22170:15;;;;;;;2278:78;323:22170;;;;;;;;;;:::i;:::-;;;;;15902:13;323:22170;;;;;;;;;;;;;;15950:37;15942:77;15950:37;;;15942:77;:::i;:::-;16037:19;;;323:22170;;;;;;;;;;;;;16060:25;16037:48;323:22170;;3927:8:11;3871:27;16459:63:15;323:22170;;;;;;;;;;;;;;;;;16168:90;;323:22170;2278:78;323:22170;;;;;;;;;;;;16168:90;;;;;;:::i;:::-;323:22170;16145:123;;323:22170;;-1:-1:-1;;;323:22170:15;16318:62;;323:22170;;;18071:16;323:22170;;;;;;;;;;;16318:62;323:22170;;;;16318:62;;15220:89;;16318:62;;;;;;:::i;:::-;323:22170;16295:95;;323:22170;;;;:::i;:::-;3871:27:11;;:::i;:::-;3927:8;;;;;:::i;:::-;-1:-1:-1;;;;;323:22170:15;16467:33;16459:63;:::i;:::-;323:22170;;;;;;;;16533:39;323:22170;;16533:39;:::i;:::-;323:22170;;;;-1:-1:-1;;;;323:22170:15;;;;-1:-1:-1;;;;;323:22170:15;;16646:60;-1:-1:-1;;16646:60:15;323:22170;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;323:22170:15;5258:19;;323:22170;;;;;5325:15;323:22170;;;;;;;;;;;;;;5389:24;323:22170;;;;;;;;;;;5325:15;323:22170;;;;;;;;;;;;;;;5526:19;323:22170;;;;;;5570:10;;323:22170;;5634:18;323:22170;5673:18;;;5669:209;;323:22170;;;5634:18;323:22170;;;;;-1:-1:-1;;323:22170:15;;;;:::i;:::-;;;;;;;;;;;;;;;;;5634:18;323:22170;;;;5526:19;323:22170;;;;;;;5967:19;323:22170;5967:19;;323:22170;;;;;;;;;;;;;5669:209;-1:-1:-1;;323:22170:15;;;;;;;5727:33;;;:::i;:::-;323:22170;;;;;;;;-1:-1:-1;;;;;323:22170:15;-1:-1:-1;;323:22170:15;;;;;;;5774:29;;:41;:29;;:::i;:::-;323:22170;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;;5774:41;323:22170;;5526:19;323:22170;;;;;;5669:209;;;;323:22170;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;1500:62:0;;:::i;:::-;3004:6;323:22170:15;;-1:-1:-1;;;;;;323:22170:15;;;;;;;-1:-1:-1;;;;;323:22170:15;3052:40:0;323:22170:15;;3052:40:0;323:22170:15;;;;;;;-1:-1:-1;;323:22170:15;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;323:22170:15;;;5071:19;;323:22170;;;;;21973:15;323:22170;;;;;;;;;;;;;21973:15;323:22170;;;;;5158:4;323:22170;;;;;;;;22072:18;323:22170;;;;;;;;;;5158:4;323:22170;;;22072:18;323:22170;;:::i;:::-;22072:18;323:22170;;;;22112:19;323:22170;;;;;;22210:17;323:22170;22210:17;;323:22170;;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;:::i;:::-;;;;14954:13;323:22170;;;;;;;;;;;;;;15002:37;14994:77;15002:37;;;14994:77;:::i;:::-;15089:19;;;323:22170;;;;;;;;;;;;;3871:27:11;15089:48:15;;323:22170;15510:63;15089:48;15081:84;3927:8:11;15089:48:15;;15081:84;:::i;:::-;323:22170;;;;;;;;;;;;;15220:89;;323:22170;2145:77;323:22170;;;;;;;;;;;;15220:89;;;;;;:::i;15510:63::-;323:22170;;;;;;;;15584:39;323:22170;;15584:39;:::i;:::-;323:22170;;;;-1:-1:-1;;;;323:22170:15;-1:-1:-1;;;323:22170:15;;;;-1:-1:-1;;;;;323:22170:15;;15697:59;-1:-1:-1;;15697:59:15;323:22170;;;;;;;-1:-1:-1;;323:22170:15;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;;2531:1:10;2466:103;;;:::i;:::-;323:22170:15;;2531:1:10;:::i;:::-;323:22170:15;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;-1:-1:-1;;;;;323:22170:15;;:::i;:::-;;;;1309:47;323:22170;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;2145:77;323:22170;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;2466:103:10;;:::i;:::-;323:22170:15;;;14002:13;323:22170;;;14314:19;323:22170;;;14218:65;323:22170;;;;;;;;14041:77;14049:37;;;14041:77;:::i;14218:65::-;14314:19;323:22170;;;;;;;;;;;;14002:13;14314:51;;:120;;;;;323:22170;14314:191;;;;323:22170;;;;;;;;;14585:11;323:22170;;;;;;14630:11;;;323:22170;;;;;;;;;;14585:11;323:22170;;;;;;;14253:10;14732:35;;;;:::i;:::-;;323:22170;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;14314:191;323:22170;;;;;;14454:51;14314:191;;;;:120;-1:-1:-1;14408:26:15;14385:49;;;-1:-1:-1;323:22170:15;14314:120;;323:22170;;;;;;-1:-1:-1;;323:22170:15;;;;;;;1872:218;323:22170;;;;;;;;;-1:-1:-1;;323:22170:15;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6507:13;323:22170;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;6507:13;323:22170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;323:22170:15;;;;;;;;-1:-1:-1;323:22170:15;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;323:22170:15;;;;;;:::o;:::-;;;-1:-1:-1;;;;;323:22170:15;;;;;;:::o;:::-;;;-1:-1:-1;;323:22170:15;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;15220:89;;323:22170;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;-1:-1:-1;;323:22170:15;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;323:22170:15;;;;;;:::o;:::-;;-1:-1:-1;;;;;323:22170:15;;;;;;;:::o;4529:457::-;;3927:8:11;4529:457:15;;323:22170;3871:27:11;4529:457:15;4715:19;323:22170;;;;:::i;4715:19::-;323:22170;;-1:-1:-1;;;4784:62:15;;;323:22170;;;18071:16;323:22170;;;;;;;;;;;4784:62;323:22170;;;;4784:62;323:22170;3871:27:11;3927:8;;;;;:::i;:::-;-1:-1:-1;;;;;323:22170:15;4950:17;;;:::i;:::-;323:22170;-1:-1:-1;;;;;323:22170:15;;4937:30;;323:22170;4529:457::o;323:22170::-;;;;:::o;:::-;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;323:22170:15;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;-1:-1:-1;;323:22170:15;;;;;;;:::o;9410:3763::-;;9531:10;-1:-1:-1;;;;;323:22170:15;;;9520:21;323:22170;;;;-1:-1:-1;;;9580:39:15;;9531:10;9580:39;;;323:22170;9580:16;-1:-1:-1;;;;;323:22170:15;;-1:-1:-1;;323:22170:15;;9580:39;323:22170;;9580:39;;;;;;;;;;;9410:3763;323:22170;;;;;;;9693:13;323:22170;;;;;;;9733:77;;-1:-1:-1;;;;;323:22170:15;9741:37;;9733:77;:::i;:::-;9828:19;;;323:22170;;;;;;;;;;;;;9820:84;9828:48;;9820:84;:::i;:::-;323:22170;;;9931:17;323:22170;;;;;;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;;;;;;;10067:19;;;323:22170;10049:15;:37;10045:490;;323:22170;;;9693:13;323:22170;;18356:67;323:22170;;;;;;18288:16;323:22170;;18382:40;323:22170;;;;18288:16;9580:39;18356:22;;323:22170;18401:21;;323:22170;18382:40;;:::i;18356:67::-;10049:15;18440:34;323:22170;;;;;18288:16;323:22170;;;;;;;;;;;;;;9693:13;10709:19;;323:22170;;;;1739:2;323:22170;;;;;1739:2;323:22170;;;;;;;10751:5;323:22170;;10772:41;;;;;:::i;:::-;10771:42;10767:391;;323:22170;11193:25;323:22170;;;11193:25;:::i;:::-;11228:19;11257:27;;323:22170;11299:19;;;;11295:809;323:22170;;;-1:-1:-1;323:22170:15;;;10067:19;323:22170;;;;;;;;-1:-1:-1;11368:19:15;;;323:22170;;;;;;;;;:::i;:::-;;;;;;;;;11334:638;;12118:15;12114:472;;323:22170;12646:252;323:22170;;;;;;18288:16;323:22170;;;;;12596:34;323:22170;;12596:34;:::i;:::-;323:22170;;;;;;;;;;;;;;;;;12740:21;;323:22170;;;;;;;;;;;;;;;;;;;;;;;9531:10;323:22170;;;;12646:252;12909:55;;;;;323:22170;;12909:55;323:22170;;;;;;;;;;;;12909:55;;9531:10;9580:39;12909:55;;323:22170;;9580:39;323:22170;;;;;;;12909:55;;;;;;;;;;;11295:809;323:22170;;;;18288:16;323:22170;;;;;;;13015:24;;323:22170;-1:-1:-1;12979:60:15;12975:192;;9410:3763;;;:::o;12975:192::-;13077:14;;;:::i;:::-;-1:-1:-1;323:22170:15;;-1:-1:-1;;;;323:22170:15;-1:-1:-1;;;323:22170:15;;;9410:3763::o;12909:55::-;;;;;:::i;:::-;323:22170;;12909:55;;;;323:22170;;;;12909:55;323:22170;;;;;;;;;12909:55;323:22170;;;12114:472;323:22170;;;;;;;;;;;12153:32;12149:113;;12114:472;323:22170;;;;;;;;;;;;;;;12384:21;;323:22170;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12280:207;323:22170;;;;;;15220:89;;323:22170;;;;;12280:207;;;;12501:54;;;;;323:22170;;;12501:54;323:22170;;;;;;;;;12501:54;;9531:10;9580:39;12501:54;;323:22170;;9580:39;323:22170;;;;;;;;12501:54;;;;;;;;12569:7;;:::o;12501:54::-;;;;;;:::i;:::-;323:22170;;12569:7;:::o;323:22170::-;;;12501:54;323:22170;;;;;;;;;12501:54;323:22170;;;;;;;;;;;;;;;;;;;;;12149:113;323:22170;;;;;;;:::i;:::-;;;;;;;;;12149:113;;11334:638;323:22170;11512:21;;323:22170;;;;;;;;-1:-1:-1;;;;;323:22170:15;11512:53;;;;:::i;:::-;-1:-1:-1;11587:13:15;;323:22170;;;:::i;:::-;11583:375;11334:638;;11583:375;9531:10;;;;;;;;11732:31;;;;:::i;:::-;;323:22170;;;;;;;;10067:19;323:22170;;11846:50;323:22170;;;;;;11846:50;:::i;:::-;323:22170;;;11334:638;;323:22170;;;-1:-1:-1;;;323:22170:15;;;9580:39;323:22170;;;;9580:39;323:22170;;;-1:-1:-1;;;323:22170:15;;;;;;;11295:809;12036:57;;;;;;;;;;:::i;10767:391::-;323:22170;;;;;;;;;10834:225;;323:22170;;;;;;;;;;;;;;;10938:21;;323:22170;;;;;;;;;;;;;;;;;;;;;;;10834:225;11073:54;;;;;323:22170;;;11073:54;323:22170;;;;;;;;;11073:54;;9531:10;9580:39;11073:54;;323:22170;;9580:39;323:22170;;;;;;;;11073:54;;;;;;;;11141:7;;:::o;323:22170::-;-1:-1:-1;;;323:22170:15;;;9580:39;323:22170;9580:39;323:22170;;;-1:-1:-1;;;323:22170:15;;;9580:39;323:22170;9580:39;323:22170;;;;;-1:-1:-1;;;323:22170:15;;;9580:39;323:22170;;;;9580:39;323:22170;;;-1:-1:-1;;;323:22170:15;;;;;;;10045:490;10124:14;;;;;;;;:::i;:::-;323:22170;;-1:-1:-1;;;;323:22170:15;-1:-1:-1;;;323:22170:15;;;;;-1:-1:-1;10324:21:15;;323:22170;9693:13;10363:19;;;323:22170;;;;;;;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;-1:-1:-1;;;;;323:22170:15;;;;;;;;;;10220:216;;;;;10450:54;;;;;323:22170;;;10450:54;323:22170;;;;;;;;;10450:54;;9531:10;9580:39;10450:54;;323:22170;;9580:39;323:22170;;;;;;;;10450:54;;;;;;;;10518:7;;:::o;10450:54::-;;;;;:::i;:::-;10518:7;:::o;323:22170::-;;;-1:-1:-1;;;323:22170:15;;;9580:39;323:22170;;;;9580:39;323:22170;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;9580:39;323:22170;9580:39;323:22170;;;;;-1:-1:-1;;;323:22170:15;;;9580:39;323:22170;;;;9580:39;323:22170;;;-1:-1:-1;;;323:22170:15;;;;;;;9580:39;;;;323:22170;9580:39;323:22170;9580:39;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;323:22170;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;323:22170:15;;;;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;;;;;22072:18;323:22170;;;;;;22072:18;-1:-1:-1;323:22170:15;;-1:-1:-1;323:22170:15;;;-1:-1:-1;323:22170:15;:::o;:::-;;;;;;;;;;;;17440:546;323:22170;;;;;;;;;;;;;;17676:15;;;323:22170;;17709:13;;;;323:22170;17740:15;;;;323:22170;17773:16;;;323:22170;17807:18;;;323:22170;17843:21;;;323:22170;17882:13;;;;323:22170;17913:12;;;;323:22170;;17943:12;323:22170;;;;;17943:12;;323:22170;;;17709:13;323:22170;17567:402;17676:15;17567:402;;323:22170;1872:218;323:22170;;17709:13;323:22170;;;17740:15;323:22170;;;17773:16;323:22170;;;17807:18;323:22170;;;17843:21;323:22170;;;17882:13;323:22170;;;17913:12;323:22170;;;17943:12;323:22170;;;;;;;;;;;;17567:402;;;;;;:::i;:::-;323:22170;17544:435;;17440:546;:::o;2575:307:10:-;1899:1;2702:7;323:22170:15;2702:18:10;2698:86;;1899:1;2702:7;323:22170:15;2575:307:10:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;22250:241:15;-1:-1:-1;323:22170:15;22340:17;323:22170;;;;;;;;-1:-1:-1;323:22170:15;;;;-1:-1:-1;323:22170:15;22387:24;323:22170;;;-1:-1:-1;323:22170:15;;22383:102;;22250:241;:::o;22383:102::-;-1:-1:-1;323:22170:15;22387:24;323:22170;;;-1:-1:-1;323:22170:15;;;;;;;;;;;;;;22250:241::o;18487:975::-;323:22170;;;18629:13;323:22170;;;;;;;;18695:16;323:22170;;;;;;18762:24;;;;323:22170;18742:44;;;18738:87;;18912:36;18860:38;18879:19;18629:13;18879:19;;323:22170;18860:38;;;;;:::i;:::-;18912:36;:::i;:::-;18951:27;;;323:22170;-1:-1:-1;18908:109:15;;-1:-1:-1;;;;;323:22170:15;;19031:19;;19027:61;;323:22170;;;-1:-1:-1;;;19201:47:15;;-1:-1:-1;;;;;323:22170:15;;;19201:47;;;323:22170;;;;;;;19201:47;323:22170;;19201:47;;;;;;;;323:22170;19201:47;;;18487:975;19201:63;;19197:106;;323:22170;;-1:-1:-1;;;19317:62:15;;-1:-1:-1;;;;;323:22170:15;;;;19201:47;19317:62;;323:22170;19373:4;323:22170;;;;;;;;;;;;19317:62;;;;;;;323:22170;19317:62;;;18487:975;19317:78;;19313:121;;19451:4;18487:975;:::o;19313:121::-;323:22170;19411:12;:::o;19317:62::-;;;323:22170;19317:62;;323:22170;19317:62;;;;;;323:22170;19317:62;;;:::i;:::-;;;323:22170;;;;;19317:62;;;;;;-1:-1:-1;19317:62:15;;19197:106;19280:12;;;323:22170;19280:12;:::o;19201:47::-;;;;323:22170;19201:47;;323:22170;19201:47;;;;;;323:22170;19201:47;;;:::i;:::-;;;323:22170;;;;;;;19201:47;;;;;;-1:-1:-1;19201:47:15;;19027:61;19066:11;;;19073:4;19066:11;:::o;20079:1454::-;20370:19;;;323:22170;;;;;-1:-1:-1;;;20403:47:15;;-1:-1:-1;;;;;323:22170:15;;;20403:47;;;323:22170;;;20370:19;;20079:1454;323:22170;;;;;20079:1454;323:22170;;;20403:47;323:22170;;20403:47;;;;;;;;323:22170;20403:47;;;20079:1454;20403:63;;20399:144;;323:22170;;-1:-1:-1;;;20557:62:15;;-1:-1:-1;;;;;323:22170:15;;20403:47;20557:62;;323:22170;20613:4;323:22170;;;;;;;;20557:62;;;;;;;;323:22170;20557:62;;;20079:1454;20557:78;;20553:161;;323:22170;20867:21;;323:22170;;;-1:-1:-1;;;323:22170:15;20752:174;;;-1:-1:-1;;;;;323:22170:15;;;20403:47;20752:174;;323:22170;;;;;;;;;;;20968:47;;20752:174;323:22170;;;;20752:174;323:22170;20752:174;20968:47;;:::i;:::-;21029:24;21025:97;;323:22170;;;;-1:-1:-1;;;323:22170:15;21163:152;;;-1:-1:-1;;;;;323:22170:15;;;20403:47;21163:152;;323:22170;21278:10;323:22170;;;;;;;;;;;;21163:152;;;21352:50;;21163:152;323:22170;;21163:152;:::i;:::-;21352:50;:::i;:::-;21416:19;21412:87;;20867:21;323:22170;;;;;;;:::i;:::-;;;;20079:1454;:::o;21412:87::-;323:22170;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;323:22170:15;;;;21451:37;:::o;21025:97::-;21069:42;;;323:22170;;;;:::i;:::-;21069:42;:::o;20553:161::-;20651:52;;;;;323:22170;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;323:22170:15;;;;20651:52;:::o;20557:62::-;;;323:22170;20557:62;;323:22170;20557:62;;;;;;323:22170;20557:62;;;:::i;:::-;;;323:22170;;;;;20557:62;;;;;;-1:-1:-1;20557:62:15;;20399:144;20482:50;;;;;;323:22170;;;;;;;;:::i;:::-;;;;;;;;;20482:50;:::o;20403:47::-;;;;323:22170;20403:47;;323:22170;20403:47;;;;;;323:22170;20403:47;;;:::i;:::-;;;323:22170;;;;;;;20403:47;;;;;;-1:-1:-1;20403:47:15;;1796:162:0;323:22170:15;;-1:-1:-1;;;;;323:22170:15;735:10:9;1855:23:0;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:0;735:10:9;1901:40:0;323:22170:15;;-1:-1:-1;1901:40:0;2129:778:11;323:22170:15;;;2129:778:11;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:11;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;7280:532::-;;;;323:22170:15;;;;;;7366:29:11;;;7411:7;;;:::o;7362:444::-;7375:20;323:22170:15;7462:38:11;;323:22170:15;;7523:23:11;;;7375:20;7523:23;323:22170:15;7375:20:11;7523:23;7458:348;-1:-1:-1;7576:35:11;7567:44;;7576:35;;7634:46;;;;7375:20;7634:46;323:22170:15;;;7375:20:11;7634:46;7563:243;323:22170:15;;7710:30:11;7375:20;7701:39;;7697:109;;7563:243;;7280:532::o;7697:109::-;-1:-1:-1;;;7763:32:11;;323:22170:15;;;;-1:-1:-1;7763:32:11;21539:333:15;323:22170;21539:333;;;21669:16;;;;;;;;;;;:::i;:::-;21699:8;;21695:51;;323:22170;;21759:22;;;21755:64;;21669:16;21835:30;;;;;;;;;:::i;21755:64::-;21797:11;;21804:4;21797:11;:::o;21695:51::-;21723:12;323:22170;21723:12;:::o;5203:1551:11:-;;;6283:66;6270:79;;6266:164;;323:22170:15;;;;;;-1:-1:-1;323:22170:15;;;;;;;;;;;;;;;;;;;6541:24:11;;;;;;;;;-1:-1:-1;6541:24:11;-1:-1:-1;;;;;323:22170:15;;6579:20:11;6575:113;;6698:49;-1:-1:-1;6698:49:11;-1:-1:-1;5203:1551:11;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:11;6541:24;6615:62;-1:-1:-1;6615:62:11;:::o;6266:164::-;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2421400","executionCost":"infinite","totalCost":"infinite"},"external":{"PAUSE_REQUEST_TYPEHASH()":"235","PROTOCOL_FEE_BPS()":"675","RELAYER_REGISTRY()":"infinite","RESUME_REQUEST_TYPEHASH()":"477","SUBSCRIPTION_INTENT_TYPEHASH()":"191","activeSubscriptionCounts(address)":"3017","addSupportedToken(address)":"105229","cancelSubscription(bytes32)":"64242","createSubscription((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes)":"infinite","currentNonce(address)":"2511","depositForSubscription(bytes32)":"77928","ethDeposits(bytes32)":"2976","executeSubscription(bytes32,address)":"infinite","executedPayments(bytes32)":"2954","getNextNonce(address)":"2797","getNextPaymentTime(bytes32)":"9465","getPaymentCount(bytes32)":"2536","getSubscription(bytes32)":"infinite","getSubscriptionToken(bytes32)":"2774","getSupportedTokens()":"infinite","isSubscriptionActive(bytes32)":"4959","owner()":"2648","pauseSubscription(bytes32,bytes)":"infinite","removeSupportedToken(address)":"92517","renounceOwnership()":"28297","resumeSubscription(bytes32,bytes)":"infinite","subscriptionToken(bytes32)":"2620","subscriptions(bytes32)":"22070","supportedTokens(address)":"2545","transferOwnership(address)":"28843","verifyIntent((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes)":"infinite","withdrawUnusedETH(bytes32)":"infinite"},"internal":{"_addSupportedTokenInternal(address,bool)":"infinite","_attemptPayment(struct SubscriptionManager.Subscription storage pointer,address,uint256,uint256)":"infinite","_callToken(address,bytes memory)":"infinite","_canExecutePayment(bytes32,address)":"infinite","_decrementActiveCount(bytes32)":"28679","_domainSeparatorV4()":"infinite","_hashIntent(struct SubscriptionManager.SubscriptionIntent memory)":"infinite","_isPaymentDue(bytes32)":"infinite","_validateSubscriptionParams(struct SubscriptionManager.SubscriptionIntent calldata)":"infinite"}},"methodIdentifiers":{"PAUSE_REQUEST_TYPEHASH()":"5adf2d8d","PROTOCOL_FEE_BPS()":"be378228","RELAYER_REGISTRY()":"a807db75","RESUME_REQUEST_TYPEHASH()":"7b0e3b62","SUBSCRIPTION_INTENT_TYPEHASH()":"33e5a1d6","activeSubscriptionCounts(address)":"d6559120","addSupportedToken(address)":"6d69fcaf","cancelSubscription(bytes32)":"d21f1ffc","createSubscription((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes)":"9c9b549d","currentNonce(address)":"6437ecfc","depositForSubscription(bytes32)":"7f4a7fd0","ethDeposits(bytes32)":"ebd9c39c","executeSubscription(bytes32,address)":"69e1fd9a","executedPayments(bytes32)":"eaef9f2f","getNextNonce(address)":"90193b7c","getNextPaymentTime(bytes32)":"c603ff48","getPaymentCount(bytes32)":"6f956971","getSubscription(bytes32)":"1f32768e","getSubscriptionToken(bytes32)":"93db9cc4","getSupportedTokens()":"d3c7c2c7","isSubscriptionActive(bytes32)":"91351c82","owner()":"8da5cb5b","pauseSubscription(bytes32,bytes)":"6c00f051","removeSupportedToken(address)":"76319190","renounceOwnership()":"715018a6","resumeSubscription(bytes32,bytes)":"77bef003","subscriptionToken(bytes32)":"7656b440","subscriptions(bytes32)":"94259c6c","supportedTokens(address)":"68c4ac26","transferOwnership(address)":"f2fde38b","verifyIntent((address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address),bytes)":"1282a908","withdrawUnusedETH(bytes32)":"4e504922"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"supportedTokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_relayerRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paymentNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"PaymentExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"PaymentFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"}],\"name\":\"SubscriptionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPayments\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTotalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"SubscriptionPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"}],\"name\":\"SubscriptionResumed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PAUSE_REQUEST_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROTOCOL_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAYER_REGISTRY\",\"outputs\":[{\"internalType\":\"contract RelayerRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESUME_REQUEST_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SUBSCRIPTION_INTENT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"activeSubscriptionCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct SubscriptionManager.SubscriptionIntent\",\"name\":\"intent\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"currentNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"depositForSubscription\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"ethDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"}],\"name\":\"executeSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"executedPayments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subscriber\",\"type\":\"address\"}],\"name\":\"getNextNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"getNextPaymentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"getPaymentCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"getSubscription\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum SubscriptionManager.SubscriptionStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct SubscriptionManager.Subscription\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"getSubscriptionToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"isSubscriptionActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"pauseSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"resumeSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"subscriptionToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"subscriptions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"enum SubscriptionManager.SubscriptionStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"subscriber\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"merchant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPayments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxTotalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct SubscriptionManager.SubscriptionIntent\",\"name\":\"intent\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verifyIntent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"}],\"name\":\"withdrawUnusedETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SubscriptionManager.sol\":\"SubscriptionManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\\n\\npragma solidity >=0.6.2;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\\n *\\n * These functions can be used to verify that a message was signed by the holder\\n * of the private keys of a given address.\\n */\\nlibrary ECDSA {\\n    enum RecoverError {\\n        NoError,\\n        InvalidSignature,\\n        InvalidSignatureLength,\\n        InvalidSignatureS\\n    }\\n\\n    /**\\n     * @dev The signature derives the `address(0)`.\\n     */\\n    error ECDSAInvalidSignature();\\n\\n    /**\\n     * @dev The signature has an invalid length.\\n     */\\n    error ECDSAInvalidSignatureLength(uint256 length);\\n\\n    /**\\n     * @dev The signature has an S value that is in the upper half order.\\n     */\\n    error ECDSAInvalidSignatureS(bytes32 s);\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\\n     * and a bytes32 providing additional information about the error.\\n     *\\n     * If no error is returned, then the address can be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     *\\n     * Documentation for signature generation:\\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes memory signature\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        if (signature.length == 65) {\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            // ecrecover takes the signature parameters, and the only way to get them\\n            // currently is to use assembly.\\n            assembly (\\\"memory-safe\\\") {\\n                r := mload(add(signature, 0x20))\\n                s := mload(add(signature, 0x40))\\n                v := byte(0, mload(add(signature, 0x60)))\\n            }\\n            return tryRecover(hash, v, r, s);\\n        } else {\\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the address that signed a hashed message (`hash`) with\\n     * `signature`. This address can then be used for verification purposes.\\n     *\\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\\n     * this function rejects them by requiring the `s` value to be in the lower\\n     * half order, and the `v` value to be either 27 or 28.\\n     *\\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\\n     * verification to be secure: it is possible to craft signatures that\\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\\n     * this is by receiving a hash of the original message (which may otherwise\\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\\n     */\\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\\n     *\\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        bytes32 r,\\n        bytes32 vs\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        unchecked {\\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\\n            return tryRecover(hash, v, r, s);\\n        }\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\\n     */\\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function tryRecover(\\n        bytes32 hash,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\\n        // the valid range for s in (301): 0 < s < secp256k1n \\u00f7 2 + 1, and for v in (302): v \\u2208 {27, 28}. Most\\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\\n        //\\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\\n        // these malleable signatures as well.\\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\\n            return (address(0), RecoverError.InvalidSignatureS, s);\\n        }\\n\\n        // If the signature is valid (and not malleable), return the signer address\\n        address signer = ecrecover(hash, v, r, s);\\n        if (signer == address(0)) {\\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\\n        }\\n\\n        return (signer, RecoverError.NoError, bytes32(0));\\n    }\\n\\n    /**\\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\\n     * `r` and `s` signature fields separately.\\n     */\\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\\n        _throwError(error, errorArg);\\n        return recovered;\\n    }\\n\\n    /**\\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\\n     */\\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\\n        if (error == RecoverError.NoError) {\\n            return; // no error: do nothing\\n        } else if (error == RecoverError.InvalidSignature) {\\n            revert ECDSAInvalidSignature();\\n        } else if (error == RecoverError.InvalidSignatureLength) {\\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\\n        } else if (error == RecoverError.InvalidSignatureS) {\\n            revert ECDSAInvalidSignatureS(errorArg);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity >=0.4.16;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\"},\"contracts/RelayerRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.28;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract RelayerRegistry is ReentrancyGuard, Ownable {\\n    using SafeERC20 for IERC20;\\n    struct Relayer {\\n        uint256 stakedAmount;\\n        uint256 successfulExecutions;\\n        uint256 failedExecutions;\\n        uint256 totalFeesEarned;\\n        uint256 withdrawalRequestTime;\\n        bool isActive;\\n        bool withdrawalRequested;\\n    }\\n\\n    mapping(address => Relayer) public relayers;\\n    uint256 public constant MINIMUM_STAKE = 1000e6; // 1000 pyusd\\n    uint256 public constant SLASH_AMOUNT = 100e6;\\n    uint256 public constant CONSECUTIVE_FAILURES_THRESHOLD = 3;\\n    uint256 public constant SLASHING_COOLDOWN = 1 days;\\n\\n    uint256 public slashAmountConfig = SLASH_AMOUNT;\\n    uint256 public failureThresholdConfig = CONSECUTIVE_FAILURES_THRESHOLD;\\n\\n    mapping(address => uint256) public lastSlashTime;\\n    mapping(address => uint256) public consecutiveFailures;\\n    mapping(address => bool) public isSlashed;\\n\\n    uint256 public constant WITHDRAWAL_DELAY = 7 days;\\n    address public immutable PYUSD_ADDRESS;\\n    address public subscriptionManager;\\n\\n    event RelayerRegistered(\\n        address indexed relayer,\\n        uint256 stakedAmount\\n    );\\n\\n    event RelayerUnregistered(\\n        address indexed relayer,\\n        uint256 returnedStake\\n    );\\n\\n    event WithdrawalRequested(\\n        address indexed relayer,\\n        uint256 requestTime\\n    );\\n\\n    event ExecutionRecorded(\\n        address indexed relayer,\\n        bool success,\\n        uint256 feeAmount\\n    );\\n\\n    event RelayerSlashed(\\n        address indexed relayer,\\n        uint256 slashAmount,\\n        uint256 remainingStake\\n    );\\n\\n    event RelayerRestaked(\\n        address indexed relayer,\\n        uint256 amount,\\n        uint256 newStake\\n    );\\n\\n    event SlashingParametersUpdated(\\n        uint256 slashAmount,\\n        uint256 failureThreshold\\n    );\\n\\n    event EmergencySlash(\\n        address indexed relayer,\\n        uint256 amount,\\n        string reason\\n    );\\n\\n    modifier onlySubscriptionManager() {\\n        require(msg.sender == subscriptionManager, \\\"Only SubscriptionManager\\\");\\n        _;\\n    }\\n\\n    constructor(address _pyusdAddress) Ownable(msg.sender) {\\n        require(_pyusdAddress != address(0), \\\"Invalid PYUSD address\\\");\\n        PYUSD_ADDRESS = _pyusdAddress;\\n    }\\n\\n    function setSubscriptionManager(address _subscriptionManager) external onlyOwner {\\n        require(_subscriptionManager != address(0), \\\"Invalid address\\\");\\n        require(subscriptionManager == address(0), \\\"Already set\\\");\\n        subscriptionManager = _subscriptionManager;\\n    }\\n\\n    function registerRelayer(uint256 stakeAmount) external nonReentrant {\\n        require(relayers[msg.sender].stakedAmount == 0, \\\"Relayer already registered\\\");\\n        require(stakeAmount >= MINIMUM_STAKE, \\\"Insufficient stake amount\\\");\\n\\n        // staking remains pyusd-specific while subscriptions may settle in other supported tokens\\n        IERC20 token = IERC20(PYUSD_ADDRESS);\\n        token.safeTransferFrom(msg.sender, address(this), stakeAmount);\\n\\n        relayers[msg.sender] = Relayer({\\n            stakedAmount: stakeAmount,\\n            successfulExecutions: 0,\\n            failedExecutions: 0,\\n            totalFeesEarned: 0,\\n            isActive: true,\\n            withdrawalRequestTime: 0,\\n            withdrawalRequested: false\\n        });\\n        consecutiveFailures[msg.sender] = 0;\\n        isSlashed[msg.sender] = false;\\n        lastSlashTime[msg.sender] = 0;\\n\\n        emit RelayerRegistered(msg.sender, stakeAmount);\\n    }\\n\\n    function requestWithdrawal() external {\\n        Relayer storage relayer = relayers[msg.sender];\\n        require(relayer.isActive, \\\"Relayer not active\\\");\\n        require(relayer.stakedAmount > 0, \\\"Relayer not registered\\\");\\n        require(!relayer.withdrawalRequested, \\\"Withdrawal already requested\\\");\\n\\n        relayer.withdrawalRequested = true;\\n        relayer.withdrawalRequestTime = block.timestamp;\\n\\n        emit WithdrawalRequested(msg.sender, block.timestamp);\\n    }\\n\\n    function unregisterRelayer() external nonReentrant {\\n        Relayer storage relayer = relayers[msg.sender];\\n        require(relayer.isActive, \\\"Relayer not active\\\");\\n        require(relayer.stakedAmount > 0, \\\"Relayer not registered\\\");\\n        require(relayer.withdrawalRequested, \\\"Must request withdrawal first\\\");\\n        require(\\n            block.timestamp >= relayer.withdrawalRequestTime + WITHDRAWAL_DELAY,\\n            \\\"Withdrawal delay not met\\\"\\n        );\\n        require(!isSlashed[msg.sender], \\\"Relayer slashed\\\");\\n\\n\\n        uint256 stakeToReturn = relayer.stakedAmount;\\n        \\n        // clear relayer state before transfer\\n        relayer.isActive = false;\\n        relayer.stakedAmount = 0;\\n        relayer.withdrawalRequested = false;\\n        relayer.withdrawalRequestTime = 0;\\n\\n        IERC20(PYUSD_ADDRESS).safeTransfer(msg.sender, stakeToReturn);\\n\\n        emit RelayerUnregistered(msg.sender, stakeToReturn);\\n\\n        delete relayers[msg.sender];\\n        delete consecutiveFailures[msg.sender];\\n        delete lastSlashTime[msg.sender];\\n        delete isSlashed[msg.sender];\\n    }\\n\\n    function recordExecution(\\n        address relayerAddress,\\n        bool success,\\n        uint256 feeAmount\\n    ) external onlySubscriptionManager {\\n        Relayer storage relayer = relayers[relayerAddress];\\n        require(relayer.stakedAmount > 0, \\\"Relayer not registered\\\");\\n        require(relayer.isActive, \\\"Relayer not active\\\");\\n        require(!isSlashed[relayerAddress], \\\"Relayer slashed\\\");\\n\\n        // track relayer performance and earnings\\n        if (success) {\\n            relayer.successfulExecutions++;\\n            relayer.totalFeesEarned += feeAmount;\\n            consecutiveFailures[relayerAddress] = 0;\\n        } else {\\n            relayer.failedExecutions++;\\n            consecutiveFailures[relayerAddress]++;\\n            if (consecutiveFailures[relayerAddress] >= failureThresholdConfig) {\\n                _slashRelayer(relayerAddress, slashAmountConfig);\\n            }\\n        }\\n\\n        emit ExecutionRecorded(relayerAddress, success, feeAmount);\\n    }\\n\\n    function isRelayerActive(address relayerAddress) external view returns (bool) {\\n        return relayers[relayerAddress].isActive;\\n    }\\n\\n    function getRelayerStats(address relayerAddress) external view returns (\\n        uint256 stakedAmount,\\n        uint256 successfulExecutions,\\n        uint256 failedExecutions,\\n        uint256 totalFeesEarned,\\n        bool isActive\\n    ) {\\n        Relayer storage relayer = relayers[relayerAddress];\\n        return (\\n            relayer.stakedAmount,\\n            relayer.successfulExecutions,\\n            relayer.failedExecutions,\\n            relayer.totalFeesEarned,\\n            relayer.isActive\\n        );\\n    }\\n\\n    function getRelayerInfo(address relayerAddress) external view returns (Relayer memory) {\\n        return relayers[relayerAddress];\\n    }\\n\\n    function canExecute(address relayerAddress) external view returns (bool) {\\n        Relayer storage relayer = relayers[relayerAddress];\\n        return relayer.isActive && !isSlashed[relayerAddress] && relayer.stakedAmount >= MINIMUM_STAKE;\\n    }\\n\\n    function getConsecutiveFailures(address relayerAddress) external view returns (uint256) {\\n        return consecutiveFailures[relayerAddress];\\n    }\\n\\n    function getTimeUntilSlashCooldown(address relayerAddress) external view returns (uint256) {\\n        if (block.timestamp >= lastSlashTime[relayerAddress] + SLASHING_COOLDOWN) {\\n            return 0;\\n        }\\n        return (lastSlashTime[relayerAddress] + SLASHING_COOLDOWN) - block.timestamp;\\n    }\\n\\n    function restakeAfterSlash(uint256 amount) external nonReentrant {\\n        require(isSlashed[msg.sender], \\\"Relayer not slashed\\\");\\n        require(amount > 0, \\\"Invalid amount\\\");\\n        require(relayers[msg.sender].stakedAmount > 0, \\\"Relayer not registered\\\");\\n\\n        IERC20(PYUSD_ADDRESS).safeTransferFrom(msg.sender, address(this), amount);\\n\\n        Relayer storage relayer = relayers[msg.sender];\\n        relayer.stakedAmount += amount;\\n\\n        if (relayer.stakedAmount >= MINIMUM_STAKE) {\\n            relayer.isActive = true;\\n            isSlashed[msg.sender] = false;\\n        }\\n\\n        emit RelayerRestaked(msg.sender, amount, relayer.stakedAmount);\\n    }\\n\\n    function emergencySlash(address relayerAddress, uint256 amount, string calldata reason) external onlyOwner {\\n        require(amount > 0, \\\"Invalid slash amount\\\");\\n        Relayer storage relayer = relayers[relayerAddress];\\n        require(relayer.stakedAmount >= amount, \\\"Insufficient stake\\\");\\n\\n        require(relayer.stakedAmount > 0, \\\"Relayer not registered\\\");\\n\\n        _applySlash(relayerAddress, amount);\\n\\n        emit EmergencySlash(relayerAddress, amount, reason);\\n    }\\n\\n    function emergencyUnslash(address relayerAddress) external onlyOwner {\\n        require(isSlashed[relayerAddress], \\\"Relayer not slashed\\\");\\n\\n        isSlashed[relayerAddress] = false;\\n        consecutiveFailures[relayerAddress] = 0;\\n\\n        Relayer storage relayer = relayers[relayerAddress];\\n        if (relayer.stakedAmount >= MINIMUM_STAKE) {\\n            relayer.isActive = true;\\n        }\\n    }\\n\\n    function updateSlashingParameters(uint256 slashAmount, uint256 failureThreshold) external onlyOwner {\\n        require(slashAmount > 0, \\\"Invalid slash amount\\\");\\n        require(failureThreshold > 0, \\\"Invalid threshold\\\");\\n\\n        slashAmountConfig = slashAmount;\\n        failureThresholdConfig = failureThreshold;\\n\\n        emit SlashingParametersUpdated(slashAmount, failureThreshold);\\n    }\\n\\n    function _slashRelayer(address relayerAddress, uint256 amount) internal {\\n        Relayer storage relayer = relayers[relayerAddress];\\n        require(relayer.stakedAmount >= amount, \\\"Insufficient stake to slash\\\");\\n        require(block.timestamp >= lastSlashTime[relayerAddress] + SLASHING_COOLDOWN, \\\"Slash cooldown active\\\");\\n\\n        _applySlash(relayerAddress, amount);\\n    }\\n\\n    function _applySlash(address relayerAddress, uint256 amount) internal {\\n        Relayer storage relayer = relayers[relayerAddress];\\n        require(relayer.stakedAmount >= amount, \\\"Insufficient stake\\\");\\n\\n        lastSlashTime[relayerAddress] = block.timestamp;\\n\\n        relayer.stakedAmount -= amount;\\n        isSlashed[relayerAddress] = true;\\n        consecutiveFailures[relayerAddress] = 0;\\n\\n        if (relayer.stakedAmount < MINIMUM_STAKE) {\\n            relayer.isActive = false;\\n        }\\n\\n        emit RelayerSlashed(relayerAddress, amount, relayer.stakedAmount);\\n    }\\n}\\n\",\"keccak256\":\"0xb702b778b40e41e66d64ee73b636f427ee504ab2f3f577fb483325ec7522574a\",\"license\":\"MIT\"},\"contracts/SubscriptionManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.28;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"./RelayerRegistry.sol\\\";\\n\\ncontract SubscriptionManager is ReentrancyGuard, Ownable {\\n    enum SubscriptionStatus {\\n        ACTIVE,\\n        PAUSED,\\n        CANCELLED,\\n        EXPIRED,\\n        COMPLETED\\n    }\\n\\n    struct Subscription {\\n        address subscriber;\\n        address merchant;\\n        uint256 amount;\\n        uint256 interval;\\n        uint256 startTime;\\n        uint256 maxPayments;\\n        uint256 maxTotalAmount;\\n        uint256 expiry;\\n        uint256 nonce;\\n        address token;\\n        SubscriptionStatus status;\\n    }\\n\\n    struct SubscriptionIntent {\\n        address subscriber;\\n        address merchant;\\n        uint256 amount;\\n        uint256 interval;\\n        uint256 startTime;\\n        uint256 maxPayments;\\n        uint256 maxTotalAmount;\\n        uint256 expiry;\\n        uint256 nonce;\\n        address token;\\n    }\\n\\n    mapping(bytes32 => Subscription) public subscriptions;\\n    mapping(bytes32 => uint256) public executedPayments;\\n    mapping(address => uint256) public currentNonce;\\n    mapping(address => bool) public supportedTokens;\\n    mapping(bytes32 => address) public subscriptionToken;\\n    mapping(bytes32 => uint256) public ethDeposits;\\n    mapping(address => uint256) public activeSubscriptionCounts;\\n    address[] private supportedTokenList;\\n    mapping(address => uint256) private supportedTokenIndex;\\n\\n    RelayerRegistry public immutable RELAYER_REGISTRY;\\n    uint256 public constant PROTOCOL_FEE_BPS = 50; // 0.5% protocol fee\\n\\n    bytes32 private immutable DOMAIN_SEPARATOR;\\n    bytes32 public constant SUBSCRIPTION_INTENT_TYPEHASH = keccak256(\\n        \\\"SubscriptionIntent(address subscriber,address merchant,uint256 amount,uint256 interval,uint256 startTime,uint256 maxPayments,uint256 maxTotalAmount,uint256 expiry,uint256 nonce,address token)\\\"\\n    );\\n    bytes32 public constant PAUSE_REQUEST_TYPEHASH = keccak256(\\n        \\\"PauseRequest(bytes32 subscriptionId,uint256 nonce)\\\"\\n    );\\n    bytes32 public constant RESUME_REQUEST_TYPEHASH = keccak256(\\n        \\\"ResumeRequest(bytes32 subscriptionId,uint256 nonce)\\\"\\n    );\\n\\n    event SubscriptionCreated(\\n        bytes32 indexed subscriptionId,\\n        address indexed subscriber,\\n        address indexed merchant,\\n        address token,\\n        uint256 amount,\\n        uint256 interval,\\n        uint256 maxPayments,\\n        uint256 maxTotalAmount,\\n        uint256 expiry\\n    );\\n\\n    event SubscriptionPaused(bytes32 indexed subscriptionId, address indexed subscriber);\\n\\n    event SubscriptionResumed(bytes32 indexed subscriptionId, address indexed subscriber);\\n\\n    event SubscriptionCancelled(\\n        bytes32 indexed subscriptionId,\\n        address indexed subscriber,\\n        address indexed merchant\\n    );\\n\\n    event PaymentExecuted(\\n        bytes32 indexed subscriptionId,\\n        address indexed subscriber,\\n        address indexed merchant,\\n        address token,\\n        uint256 paymentNumber,\\n        uint256 amount,\\n        uint256 fee,\\n        address relayer\\n    );\\n\\n    event PaymentFailed(\\n        bytes32 indexed subscriptionId,\\n        address indexed subscriber,\\n        address indexed merchant,\\n        uint256 amount,\\n        string reason\\n    );\\n\\n    event TokenAdded(address indexed token);\\n    event TokenRemoved(address indexed token);\\n\\n    constructor(address[] memory supportedTokenAddresses, address _relayerRegistry)\\n        Ownable(msg.sender)\\n    {\\n        require(_relayerRegistry != address(0), \\\"Invalid relayer registry address\\\");\\n\\n        RELAYER_REGISTRY = RelayerRegistry(_relayerRegistry);\\n\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"),\\n                keccak256(bytes(\\\"Aurum\\\")),\\n                keccak256(bytes(\\\"1\\\")),\\n                block.chainid,\\n                address(this)\\n            )\\n        );\\n\\n        _addSupportedTokenInternal(address(0), false);\\n        for (uint256 i = 0; i < supportedTokenAddresses.length; i++) {\\n            address token = supportedTokenAddresses[i];\\n            if (token == address(0)) {\\n                continue;\\n            }\\n            _addSupportedTokenInternal(token, true);\\n        }\\n    }\\n\\n    receive() external payable {}\\n\\n    function verifyIntent(\\n        SubscriptionIntent calldata intent,\\n        bytes calldata signature\\n    ) public view returns (bool valid, address signer) {\\n        bytes32 structHash = _hashIntent(intent);\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\\"\\\\x19\\\\x01\\\", _domainSeparatorV4(), structHash)\\n        );\\n\\n        address recovered = ECDSA.recover(digest, signature);\\n        return (recovered == intent.subscriber, recovered);\\n    }\\n\\n    function addSupportedToken(address token) external onlyOwner {\\n        require(token != address(0), \\\"eth already enabled\\\");\\n        _addSupportedTokenInternal(token, true);\\n    }\\n\\n    function removeSupportedToken(address token) external onlyOwner {\\n        require(token != address(0), \\\"cannot remove eth support\\\");\\n        require(supportedTokens[token], \\\"token not supported\\\");\\n        require(activeSubscriptionCounts[token] == 0, \\\"Active subscriptions present\\\");\\n\\n        supportedTokens[token] = false;\\n\\n        uint256 index = supportedTokenIndex[token];\\n        require(index != 0, \\\"token index missing\\\");\\n        uint256 lastIndex = supportedTokenList.length;\\n        if (index != lastIndex) {\\n            address lastToken = supportedTokenList[lastIndex - 1];\\n            supportedTokenList[index - 1] = lastToken;\\n            supportedTokenIndex[lastToken] = index;\\n        }\\n        supportedTokenList.pop();\\n        supportedTokenIndex[token] = 0;\\n\\n        emit TokenRemoved(token);\\n    }\\n\\n    function getSupportedTokens() external view returns (address[] memory) {\\n        return supportedTokenList;\\n    }\\n\\n    function getSubscriptionToken(bytes32 subscriptionId) external view returns (address) {\\n        return subscriptionToken[subscriptionId];\\n    }\\n\\n    function getNextNonce(address _subscriber) external view returns (uint256) {\\n        return currentNonce[_subscriber];\\n    }\\n\\n    function getSubscription(bytes32 subscriptionId) external view returns (Subscription memory) {\\n        return subscriptions[subscriptionId];\\n    }\\n\\n    function getPaymentCount(bytes32 subscriptionId) external view returns (uint256) {\\n        return executedPayments[subscriptionId];\\n    }\\n\\n    function getNextPaymentTime(bytes32 subscriptionId) external view returns (uint256) {\\n        Subscription storage subscription = subscriptions[subscriptionId];\\n        require(subscription.subscriber != address(0), \\\"Subscription does not exist\\\");\\n\\n        uint256 paymentsExecuted = executedPayments[subscriptionId];\\n        return subscription.startTime + (paymentsExecuted * subscription.interval);\\n    }\\n\\n    function isSubscriptionActive(bytes32 subscriptionId) external view returns (bool) {\\n        Subscription storage subscription = subscriptions[subscriptionId];\\n        return subscription.subscriber != address(0) && subscription.status == SubscriptionStatus.ACTIVE;\\n    }\\n\\n    function createSubscription(\\n        SubscriptionIntent calldata intent,\\n        bytes calldata signature\\n    ) external returns (bytes32 subscriptionId) {\\n        require(intent.nonce == currentNonce[intent.subscriber], \\\"Invalid nonce\\\");\\n        require(supportedTokens[intent.token], \\\"Token not supported\\\");\\n\\n        (bool valid, address signer) = verifyIntent(intent, signature);\\n        require(valid && signer == intent.subscriber, \\\"Invalid signature\\\");\\n\\n        _validateSubscriptionParams(intent);\\n\\n        subscriptionId = keccak256(abi.encodePacked(_hashIntent(intent), signature));\\n\\n        require(subscriptions[subscriptionId].subscriber == address(0), \\\"Subscription already exists\\\");\\n\\n        if (intent.token != address(0)) {\\n            uint256 requiredAllowance = intent.amount * intent.maxPayments;\\n            require(\\n                IERC20(intent.token).allowance(intent.subscriber, address(this)) >= requiredAllowance,\\n                \\\"Insufficient token allowance\\\"\\n            );\\n        }\\n\\n        subscriptions[subscriptionId] = Subscription({\\n            subscriber: intent.subscriber,\\n            merchant: intent.merchant,\\n            amount: intent.amount,\\n            interval: intent.interval,\\n            startTime: intent.startTime,\\n            maxPayments: intent.maxPayments,\\n            maxTotalAmount: intent.maxTotalAmount,\\n            expiry: intent.expiry,\\n            nonce: intent.nonce,\\n            token: intent.token,\\n            status: SubscriptionStatus.ACTIVE\\n        });\\n\\n        subscriptionToken[subscriptionId] = intent.token;\\n        activeSubscriptionCounts[intent.token] += 1;\\n\\n        currentNonce[intent.subscriber]++;\\n\\n        emit SubscriptionCreated(\\n            subscriptionId,\\n            intent.subscriber,\\n            intent.merchant,\\n            intent.token,\\n            intent.amount,\\n            intent.interval,\\n            intent.maxPayments,\\n            intent.maxTotalAmount,\\n            intent.expiry\\n        );\\n\\n        return subscriptionId;\\n    }\\n\\n    function executeSubscription(bytes32 subscriptionId, address relayer) external nonReentrant {\\n        require(relayer == msg.sender, \\\"Relayer mismatch\\\");\\n        require(RELAYER_REGISTRY.canExecute(msg.sender), \\\"Relayer not authorized\\\");\\n\\n        Subscription storage subscription = subscriptions[subscriptionId];\\n\\n        require(subscription.subscriber != address(0), \\\"Subscription does not exist\\\");\\n        require(subscription.status == SubscriptionStatus.ACTIVE, \\\"Subscription not active\\\");\\n\\n        address token = subscriptionToken[subscriptionId];\\n        require(supportedTokens[token], \\\"Token no longer supported\\\");\\n\\n        if (block.timestamp > subscription.expiry) {\\n            _decrementActiveCount(subscriptionId);\\n            subscription.status = SubscriptionStatus.EXPIRED;\\n            emit PaymentFailed(\\n                subscriptionId,\\n                subscription.subscriber,\\n                subscription.merchant,\\n                subscription.amount,\\n                \\\"Subscription expired\\\"\\n            );\\n            RELAYER_REGISTRY.recordExecution(msg.sender, false, 0);\\n            return;\\n        }\\n\\n        require(_isPaymentDue(subscriptionId), \\\"Payment not due yet\\\");\\n\\n        uint256 currentPaymentNumber = executedPayments[subscriptionId] + 1;\\n        uint256 fee = (subscription.amount * PROTOCOL_FEE_BPS) / 10000;\\n\\n        if (!_canExecutePayment(subscriptionId, token)) {\\n            emit PaymentFailed(\\n                subscriptionId,\\n                subscription.subscriber,\\n                subscription.merchant,\\n                subscription.amount,\\n                \\\"Execution constraints not met\\\"\\n            );\\n            RELAYER_REGISTRY.recordExecution(msg.sender, false, 0);\\n            return;\\n        }\\n\\n        uint256 merchantAmount = subscription.amount - fee;\\n        bool paymentSuccess;\\n        string memory failureReason;\\n\\n        if (token == address(0)) {\\n            if (ethDeposits[subscriptionId] < subscription.amount) {\\n                failureReason = \\\"Insufficient ETH deposit\\\";\\n            } else {\\n                (bool sentMerchant, ) = subscription.merchant.call{value: merchantAmount}(\\\"\\\");\\n                if (!sentMerchant) {\\n                    failureReason = \\\"Merchant transfer failed\\\";\\n                } else {\\n                    (bool sentFee, ) = msg.sender.call{value: fee}(\\\"\\\");\\n                    require(sentFee, \\\"Fee transfer failed\\\");\\n                    ethDeposits[subscriptionId] -= subscription.amount;\\n                    paymentSuccess = true;\\n                }\\n            }\\n        } else {\\n            (paymentSuccess, failureReason) = _attemptPayment(subscription, token, merchantAmount, fee);\\n        }\\n\\n        if (!paymentSuccess) {\\n            if (bytes(failureReason).length == 0) {\\n                failureReason = \\\"Payment execution failed\\\";\\n            }\\n            emit PaymentFailed(\\n                subscriptionId,\\n                subscription.subscriber,\\n                subscription.merchant,\\n                subscription.amount,\\n                failureReason\\n            );\\n            RELAYER_REGISTRY.recordExecution(msg.sender, false, 0);\\n            return;\\n        }\\n\\n        executedPayments[subscriptionId]++;\\n\\n        emit PaymentExecuted(\\n            subscriptionId,\\n            subscription.subscriber,\\n            subscription.merchant,\\n            token,\\n            currentPaymentNumber,\\n            subscription.amount,\\n            fee,\\n            msg.sender\\n        );\\n\\n        RELAYER_REGISTRY.recordExecution(msg.sender, true, fee);\\n\\n        if (executedPayments[subscriptionId] >= subscription.maxPayments) {\\n            _decrementActiveCount(subscriptionId);\\n            subscription.status = SubscriptionStatus.COMPLETED;\\n        }\\n    }\\n\\n    function depositForSubscription(bytes32 subscriptionId) external payable nonReentrant {\\n        Subscription storage subscription = subscriptions[subscriptionId];\\n        require(subscription.subscriber != address(0), \\\"Subscription does not exist\\\");\\n        require(subscriptionToken[subscriptionId] == address(0), \\\"Not ETH subscription\\\");\\n        require(subscription.subscriber == msg.sender, \\\"Only subscriber\\\");\\n        require(\\n            subscription.status == SubscriptionStatus.ACTIVE || subscription.status == SubscriptionStatus.PAUSED,\\n            \\\"Subscription not active\\\"\\n        );\\n        require(msg.value > 0, \\\"No ETH sent\\\");\\n\\n        ethDeposits[subscriptionId] += msg.value;\\n    }\\n\\n    function withdrawUnusedETH(bytes32 subscriptionId) external nonReentrant {\\n        Subscription storage subscription = subscriptions[subscriptionId];\\n        require(subscription.subscriber != address(0), \\\"Subscription does not exist\\\");\\n        require(subscriptionToken[subscriptionId] == address(0), \\\"Not ETH subscription\\\");\\n        require(subscription.subscriber == msg.sender, \\\"Only subscriber\\\");\\n        require(\\n            subscription.status == SubscriptionStatus.CANCELLED ||\\n                subscription.status == SubscriptionStatus.EXPIRED ||\\n                subscription.status == SubscriptionStatus.COMPLETED,\\n            \\\"Subscription still active\\\"\\n        );\\n\\n        uint256 balance = ethDeposits[subscriptionId];\\n        require(balance > 0, \\\"No ETH to withdraw\\\");\\n        ethDeposits[subscriptionId] = 0;\\n\\n        (bool sent, ) = msg.sender.call{value: balance}(\\\"\\\");\\n        require(sent, \\\"Withdraw failed\\\");\\n    }\\n\\n    function pauseSubscription(bytes32 subscriptionId, bytes calldata signature) external {\\n        Subscription storage subscription = subscriptions[subscriptionId];\\n\\n        require(subscription.subscriber != address(0), \\\"Subscription does not exist\\\");\\n        require(subscription.status == SubscriptionStatus.ACTIVE, \\\"Subscription not active\\\");\\n\\n        bytes32 structHash = keccak256(\\n            abi.encode(PAUSE_REQUEST_TYPEHASH, subscriptionId, currentNonce[subscription.subscriber])\\n        );\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\\"\\\\x19\\\\x01\\\", _domainSeparatorV4(), structHash)\\n        );\\n        address signer = ECDSA.recover(digest, signature);\\n        require(signer == subscription.subscriber, \\\"Invalid signature\\\");\\n\\n        currentNonce[subscription.subscriber]++;\\n\\n        subscription.status = SubscriptionStatus.PAUSED;\\n\\n        emit SubscriptionPaused(subscriptionId, subscription.subscriber);\\n    }\\n\\n    function resumeSubscription(bytes32 subscriptionId, bytes calldata signature) external {\\n        Subscription storage subscription = subscriptions[subscriptionId];\\n\\n        require(subscription.subscriber != address(0), \\\"Subscription does not exist\\\");\\n        require(subscription.status == SubscriptionStatus.PAUSED, \\\"Subscription not paused\\\");\\n\\n        bytes32 structHash = keccak256(\\n            abi.encode(RESUME_REQUEST_TYPEHASH, subscriptionId, currentNonce[subscription.subscriber])\\n        );\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\\"\\\\x19\\\\x01\\\", _domainSeparatorV4(), structHash)\\n        );\\n        address signer = ECDSA.recover(digest, signature);\\n        require(signer == subscription.subscriber, \\\"Invalid signature\\\");\\n\\n        currentNonce[subscription.subscriber]++;\\n\\n        subscription.status = SubscriptionStatus.ACTIVE;\\n\\n        emit SubscriptionResumed(subscriptionId, subscription.subscriber);\\n    }\\n\\n    function cancelSubscription(bytes32 subscriptionId) external {\\n        Subscription storage subscription = subscriptions[subscriptionId];\\n\\n        require(subscription.subscriber != address(0), \\\"Subscription does not exist\\\");\\n        require(msg.sender == subscription.subscriber, \\\"Only subscriber can cancel\\\");\\n        require(\\n            subscription.status == SubscriptionStatus.ACTIVE || subscription.status == SubscriptionStatus.PAUSED,\\n            \\\"Subscription cannot be cancelled\\\"\\n        );\\n\\n        _decrementActiveCount(subscriptionId);\\n        subscription.status = SubscriptionStatus.CANCELLED;\\n\\n        emit SubscriptionCancelled(subscriptionId, subscription.subscriber, subscription.merchant);\\n    }\\n\\n    function _hashIntent(SubscriptionIntent memory intent) internal pure returns (bytes32) {\\n        return keccak256(\\n            abi.encode(\\n                SUBSCRIPTION_INTENT_TYPEHASH,\\n                intent.subscriber,\\n                intent.merchant,\\n                intent.amount,\\n                intent.interval,\\n                intent.startTime,\\n                intent.maxPayments,\\n                intent.maxTotalAmount,\\n                intent.expiry,\\n                intent.nonce,\\n                intent.token\\n            )\\n        );\\n    }\\n\\n    function _domainSeparatorV4() internal view returns (bytes32) {\\n        return DOMAIN_SEPARATOR;\\n    }\\n\\n    function _isPaymentDue(bytes32 subscriptionId) internal view returns (bool) {\\n        Subscription storage subscription = subscriptions[subscriptionId];\\n        uint256 paymentsExecuted = executedPayments[subscriptionId];\\n        uint256 nextPaymentTime = subscription.startTime + (paymentsExecuted * subscription.interval);\\n        return block.timestamp >= nextPaymentTime;\\n    }\\n\\n    function _canExecutePayment(bytes32 subscriptionId, address token) internal view returns (bool) {\\n        Subscription storage subscription = subscriptions[subscriptionId];\\n        uint256 paymentsExecuted = executedPayments[subscriptionId];\\n\\n        if (paymentsExecuted >= subscription.maxPayments) {\\n            return false;\\n        }\\n\\n        uint256 totalPaidSoFar = paymentsExecuted * subscription.amount;\\n        if (totalPaidSoFar + subscription.amount > subscription.maxTotalAmount) {\\n            return false;\\n        }\\n\\n        if (token == address(0)) {\\n            return true;\\n        }\\n\\n        IERC20 paymentToken = IERC20(token);\\n        uint256 totalRequired = subscription.amount;\\n\\n        if (paymentToken.balanceOf(subscription.subscriber) < totalRequired) {\\n            return false;\\n        }\\n\\n        if (paymentToken.allowance(subscription.subscriber, address(this)) < totalRequired) {\\n            return false;\\n        }\\n\\n        return true;\\n    }\\n\\n    function _validateSubscriptionParams(SubscriptionIntent calldata intent) internal view {\\n        require(intent.expiry > block.timestamp, \\\"Subscription intent expired\\\");\\n        require(intent.startTime <= intent.expiry, \\\"Start time must be before expiry\\\");\\n        require(intent.amount > 0, \\\"Amount must be greater than zero\\\");\\n        require(intent.interval > 0, \\\"Interval must be greater than zero\\\");\\n        require(intent.maxPayments > 0, \\\"Max payments must be greater than zero\\\");\\n        require(intent.maxTotalAmount >= intent.amount * intent.maxPayments, \\\"Max total amount insufficient\\\");\\n    }\\n\\n    function _attemptPayment(\\n        Subscription storage subscription,\\n        address token,\\n        uint256 merchantAmount,\\n        uint256 fee\\n    ) internal returns (bool success, string memory failureReason) {\\n        IERC20 paymentToken = IERC20(token);\\n\\n        uint256 totalRequired = subscription.amount;\\n        if (paymentToken.balanceOf(subscription.subscriber) < totalRequired) {\\n            return (false, \\\"Insufficient balance for payment\\\");\\n        }\\n\\n        if (paymentToken.allowance(subscription.subscriber, address(this)) < totalRequired) {\\n            return (false, \\\"Insufficient allowance for payment\\\");\\n        }\\n\\n        bytes memory transferData = abi.encodeWithSelector(\\n            IERC20.transferFrom.selector,\\n            subscription.subscriber,\\n            subscription.merchant,\\n            merchantAmount\\n        );\\n\\n        bool merchantTransferSuccess = _callToken(address(paymentToken), transferData);\\n        if (!merchantTransferSuccess) {\\n            return (false, \\\"Merchant transfer failed\\\");\\n        }\\n\\n        bytes memory feeTransferData = abi.encodeWithSelector(\\n            IERC20.transferFrom.selector,\\n            subscription.subscriber,\\n            msg.sender,\\n            fee\\n        );\\n\\n        bool feeTransferSuccess = _callToken(address(paymentToken), feeTransferData);\\n        if (!feeTransferSuccess) {\\n            return (false, \\\"Fee transfer failed\\\");\\n        }\\n\\n        return (true, \\\"\\\");\\n    }\\n\\n    function _callToken(address token, bytes memory data) internal returns (bool) {\\n        (bool success, bytes memory returndata) = token.call(data);\\n        if (!success) {\\n            return false;\\n        }\\n        if (returndata.length == 0) {\\n            return true;\\n        }\\n        return abi.decode(returndata, (bool));\\n    }\\n\\n    function _addSupportedTokenInternal(address token, bool emitEvent) internal {\\n        require(!supportedTokens[token], \\\"Token already supported\\\");\\n        supportedTokens[token] = true;\\n        supportedTokenList.push(token);\\n        supportedTokenIndex[token] = supportedTokenList.length;\\n        if (emitEvent) {\\n            emit TokenAdded(token);\\n        }\\n    }\\n\\n    function _decrementActiveCount(bytes32 subscriptionId) internal {\\n        address token = subscriptionToken[subscriptionId];\\n        if (activeSubscriptionCounts[token] > 0) {\\n            activeSubscriptionCounts[token] -= 1;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8476a336d6a1cedb5be83402a9cce6eac131efe5762c1b8ce1d22e2ddb925830\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1498,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"_status","offset":0,"slot":"0","type":"t_uint256"},{"astId":8,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"_owner","offset":0,"slot":"1","type":"t_address"},{"astId":3182,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"subscriptions","offset":0,"slot":"2","type":"t_mapping(t_bytes32,t_struct(Subscription)3156_storage)"},{"astId":3186,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"executedPayments","offset":0,"slot":"3","type":"t_mapping(t_bytes32,t_uint256)"},{"astId":3190,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"currentNonce","offset":0,"slot":"4","type":"t_mapping(t_address,t_uint256)"},{"astId":3194,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"supportedTokens","offset":0,"slot":"5","type":"t_mapping(t_address,t_bool)"},{"astId":3198,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"subscriptionToken","offset":0,"slot":"6","type":"t_mapping(t_bytes32,t_address)"},{"astId":3202,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"ethDeposits","offset":0,"slot":"7","type":"t_mapping(t_bytes32,t_uint256)"},{"astId":3206,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"activeSubscriptionCounts","offset":0,"slot":"8","type":"t_mapping(t_address,t_uint256)"},{"astId":3209,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"supportedTokenList","offset":0,"slot":"9","type":"t_array(t_address)dyn_storage"},{"astId":3213,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"supportedTokenIndex","offset":0,"slot":"10","type":"t_mapping(t_address,t_uint256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_enum(SubscriptionStatus)3132":{"encoding":"inplace","label":"enum SubscriptionManager.SubscriptionStatus","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_bytes32,t_struct(Subscription)3156_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct SubscriptionManager.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)3156_storage"},"t_mapping(t_bytes32,t_uint256)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_struct(Subscription)3156_storage":{"encoding":"inplace","label":"struct SubscriptionManager.Subscription","members":[{"astId":3134,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"subscriber","offset":0,"slot":"0","type":"t_address"},{"astId":3136,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"merchant","offset":0,"slot":"1","type":"t_address"},{"astId":3138,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"amount","offset":0,"slot":"2","type":"t_uint256"},{"astId":3140,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"interval","offset":0,"slot":"3","type":"t_uint256"},{"astId":3142,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"startTime","offset":0,"slot":"4","type":"t_uint256"},{"astId":3144,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"maxPayments","offset":0,"slot":"5","type":"t_uint256"},{"astId":3146,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"maxTotalAmount","offset":0,"slot":"6","type":"t_uint256"},{"astId":3148,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"expiry","offset":0,"slot":"7","type":"t_uint256"},{"astId":3150,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"nonce","offset":0,"slot":"8","type":"t_uint256"},{"astId":3152,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"token","offset":0,"slot":"9","type":"t_address"},{"astId":3155,"contract":"contracts/SubscriptionManager.sol:SubscriptionManager","label":"status","offset":20,"slot":"9","type":"t_enum(SubscriptionStatus)3132"}],"numberOfBytes":"320"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}