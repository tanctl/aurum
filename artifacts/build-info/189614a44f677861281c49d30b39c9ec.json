{"id":"189614a44f677861281c49d30b39c9ec","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/interfaces/ICrossChainBridge.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\n/// @title ICrossChainBridge\n/// @notice Placeholder interface for future cross-chain settlement phase\n/// @dev Avail Nexus relayers will call this interface with payment attestations\n///      once settlement flows are implemented in a future milestone.\ninterface ICrossChainBridge {\n    /// @notice Receive a verified payment attestation from Avail Nexus\n    /// @param sourceChainId The chain where the attested payment originated\n    /// @param subscriptionId The subscription identifier (bytes32)\n    /// @param paymentNumber The sequential payment number for the subscription\n    /// @param attestationId The Nexus attestation identifier proving payment occurred\n    ///\n    /// @dev Phase 1 records attestations only. Settlement logic will be added in Phase 2.\n    function receivePaymentAttestation(\n        uint64 sourceChainId,\n        bytes32 subscriptionId,\n        uint64 paymentNumber,\n        bytes32 attestationId\n    ) external;\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"contracts/interfaces/ICrossChainBridge.sol":{"ast":{"absolutePath":"contracts/interfaces/ICrossChainBridge.sol","exportedSymbols":{"ICrossChainBridge":[15]},"id":16,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"ICrossChainBridge","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"58:254:0","text":"@title ICrossChainBridge\n @notice Placeholder interface for future cross-chain settlement phase\n @dev Avail Nexus relayers will call this interface with payment attestations\n      once settlement flows are implemented in a future milestone."},"fullyImplemented":false,"id":15,"linearizedBaseContracts":[15],"name":"ICrossChainBridge","nameLocation":"322:17:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"346:478:0","text":"@notice Receive a verified payment attestation from Avail Nexus\n @param sourceChainId The chain where the attested payment originated\n @param subscriptionId The subscription identifier (bytes32)\n @param paymentNumber The sequential payment number for the subscription\n @param attestationId The Nexus attestation identifier proving payment occurred\n @dev Phase 1 records attestations only. Settlement logic will be added in Phase 2."},"functionSelector":"a03724ce","id":14,"implemented":false,"kind":"function","modifiers":[],"name":"receivePaymentAttestation","nameLocation":"838:25:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5,"mutability":"mutable","name":"sourceChainId","nameLocation":"880:13:0","nodeType":"VariableDeclaration","scope":14,"src":"873:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4,"name":"uint64","nodeType":"ElementaryTypeName","src":"873:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":7,"mutability":"mutable","name":"subscriptionId","nameLocation":"911:14:0","nodeType":"VariableDeclaration","scope":14,"src":"903:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6,"name":"bytes32","nodeType":"ElementaryTypeName","src":"903:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":9,"mutability":"mutable","name":"paymentNumber","nameLocation":"942:13:0","nodeType":"VariableDeclaration","scope":14,"src":"935:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8,"name":"uint64","nodeType":"ElementaryTypeName","src":"935:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":11,"mutability":"mutable","name":"attestationId","nameLocation":"973:13:0","nodeType":"VariableDeclaration","scope":14,"src":"965:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10,"name":"bytes32","nodeType":"ElementaryTypeName","src":"965:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"863:129:0"},"returnParameters":{"id":13,"nodeType":"ParameterList","parameters":[],"src":"1001:0:0"},"scope":15,"src":"829:173:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":16,"src":"312:692:0","usedErrors":[],"usedEvents":[]}],"src":"32:973:0"},"id":0}},"contracts":{"contracts/interfaces/ICrossChainBridge.sol":{"ICrossChainBridge":{"abi":[{"inputs":[{"internalType":"uint64","name":"sourceChainId","type":"uint64"},{"internalType":"bytes32","name":"subscriptionId","type":"bytes32"},{"internalType":"uint64","name":"paymentNumber","type":"uint64"},{"internalType":"bytes32","name":"attestationId","type":"bytes32"}],"name":"receivePaymentAttestation","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Avail Nexus relayers will call this interface with payment attestations      once settlement flows are implemented in a future milestone.","kind":"dev","methods":{"receivePaymentAttestation(uint64,bytes32,uint64,bytes32)":{"details":"Phase 1 records attestations only. Settlement logic will be added in Phase 2.","params":{"attestationId":"The Nexus attestation identifier proving payment occurred","paymentNumber":"The sequential payment number for the subscription","sourceChainId":"The chain where the attested payment originated","subscriptionId":"The subscription identifier (bytes32)"}}},"title":"ICrossChainBridge","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"receivePaymentAttestation(uint64,bytes32,uint64,bytes32)":"a03724ce"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sourceChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"subscriptionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"paymentNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"attestationId\",\"type\":\"bytes32\"}],\"name\":\"receivePaymentAttestation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Avail Nexus relayers will call this interface with payment attestations      once settlement flows are implemented in a future milestone.\",\"kind\":\"dev\",\"methods\":{\"receivePaymentAttestation(uint64,bytes32,uint64,bytes32)\":{\"details\":\"Phase 1 records attestations only. Settlement logic will be added in Phase 2.\",\"params\":{\"attestationId\":\"The Nexus attestation identifier proving payment occurred\",\"paymentNumber\":\"The sequential payment number for the subscription\",\"sourceChainId\":\"The chain where the attested payment originated\",\"subscriptionId\":\"The subscription identifier (bytes32)\"}}},\"title\":\"ICrossChainBridge\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receivePaymentAttestation(uint64,bytes32,uint64,bytes32)\":{\"notice\":\"Receive a verified payment attestation from Avail Nexus\"}},\"notice\":\"Placeholder interface for future cross-chain settlement phase\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICrossChainBridge.sol\":\"ICrossChainBridge\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ICrossChainBridge.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.21;\\n\\n/// @title ICrossChainBridge\\n/// @notice Placeholder interface for future cross-chain settlement phase\\n/// @dev Avail Nexus relayers will call this interface with payment attestations\\n///      once settlement flows are implemented in a future milestone.\\ninterface ICrossChainBridge {\\n    /// @notice Receive a verified payment attestation from Avail Nexus\\n    /// @param sourceChainId The chain where the attested payment originated\\n    /// @param subscriptionId The subscription identifier (bytes32)\\n    /// @param paymentNumber The sequential payment number for the subscription\\n    /// @param attestationId The Nexus attestation identifier proving payment occurred\\n    ///\\n    /// @dev Phase 1 records attestations only. Settlement logic will be added in Phase 2.\\n    function receivePaymentAttestation(\\n        uint64 sourceChainId,\\n        bytes32 subscriptionId,\\n        uint64 paymentNumber,\\n        bytes32 attestationId\\n    ) external;\\n}\\n\",\"keccak256\":\"0x627bfa39f767fdab193f540b785158c88a46091c0beeb5309dc2f0ac7dbce28c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"receivePaymentAttestation(uint64,bytes32,uint64,bytes32)":{"notice":"Receive a verified payment attestation from Avail Nexus"}},"notice":"Placeholder interface for future cross-chain settlement phase","version":1}}}}}}