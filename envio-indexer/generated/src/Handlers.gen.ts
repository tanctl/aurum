/* TypeScript file generated from Handlers.res by genType. */

/* eslint-disable */
/* tslint:disable */

const HandlersJS = require('./Handlers.res.js');

import type {HandlerTypes_eventConfig as Types_HandlerTypes_eventConfig} from './Types.gen';

import type {RelayerRegistry_EmergencySlash_eventFilters as Types_RelayerRegistry_EmergencySlash_eventFilters} from './Types.gen';

import type {RelayerRegistry_EmergencySlash_event as Types_RelayerRegistry_EmergencySlash_event} from './Types.gen';

import type {RelayerRegistry_ExecutionRecorded_eventFilters as Types_RelayerRegistry_ExecutionRecorded_eventFilters} from './Types.gen';

import type {RelayerRegistry_ExecutionRecorded_event as Types_RelayerRegistry_ExecutionRecorded_event} from './Types.gen';

import type {RelayerRegistry_OwnershipTransferred_eventFilters as Types_RelayerRegistry_OwnershipTransferred_eventFilters} from './Types.gen';

import type {RelayerRegistry_OwnershipTransferred_event as Types_RelayerRegistry_OwnershipTransferred_event} from './Types.gen';

import type {RelayerRegistry_RelayerRegistered_eventFilters as Types_RelayerRegistry_RelayerRegistered_eventFilters} from './Types.gen';

import type {RelayerRegistry_RelayerRegistered_event as Types_RelayerRegistry_RelayerRegistered_event} from './Types.gen';

import type {RelayerRegistry_RelayerRestaked_eventFilters as Types_RelayerRegistry_RelayerRestaked_eventFilters} from './Types.gen';

import type {RelayerRegistry_RelayerRestaked_event as Types_RelayerRegistry_RelayerRestaked_event} from './Types.gen';

import type {RelayerRegistry_RelayerSlashed_eventFilters as Types_RelayerRegistry_RelayerSlashed_eventFilters} from './Types.gen';

import type {RelayerRegistry_RelayerSlashed_event as Types_RelayerRegistry_RelayerSlashed_event} from './Types.gen';

import type {RelayerRegistry_RelayerUnregistered_eventFilters as Types_RelayerRegistry_RelayerUnregistered_eventFilters} from './Types.gen';

import type {RelayerRegistry_RelayerUnregistered_event as Types_RelayerRegistry_RelayerUnregistered_event} from './Types.gen';

import type {RelayerRegistry_SlashingParametersUpdated_eventFilters as Types_RelayerRegistry_SlashingParametersUpdated_eventFilters} from './Types.gen';

import type {RelayerRegistry_SlashingParametersUpdated_event as Types_RelayerRegistry_SlashingParametersUpdated_event} from './Types.gen';

import type {RelayerRegistry_WithdrawalRequested_eventFilters as Types_RelayerRegistry_WithdrawalRequested_eventFilters} from './Types.gen';

import type {RelayerRegistry_WithdrawalRequested_event as Types_RelayerRegistry_WithdrawalRequested_event} from './Types.gen';

import type {SubscriptionManager_CrossChainPaymentInitiated_eventFilters as Types_SubscriptionManager_CrossChainPaymentInitiated_eventFilters} from './Types.gen';

import type {SubscriptionManager_CrossChainPaymentInitiated_event as Types_SubscriptionManager_CrossChainPaymentInitiated_event} from './Types.gen';

import type {SubscriptionManager_NexusAttestationSubmitted_eventFilters as Types_SubscriptionManager_NexusAttestationSubmitted_eventFilters} from './Types.gen';

import type {SubscriptionManager_NexusAttestationSubmitted_event as Types_SubscriptionManager_NexusAttestationSubmitted_event} from './Types.gen';

import type {SubscriptionManager_NexusAttestationVerified_eventFilters as Types_SubscriptionManager_NexusAttestationVerified_eventFilters} from './Types.gen';

import type {SubscriptionManager_NexusAttestationVerified_event as Types_SubscriptionManager_NexusAttestationVerified_event} from './Types.gen';

import type {SubscriptionManager_OwnershipTransferred_eventFilters as Types_SubscriptionManager_OwnershipTransferred_eventFilters} from './Types.gen';

import type {SubscriptionManager_OwnershipTransferred_event as Types_SubscriptionManager_OwnershipTransferred_event} from './Types.gen';

import type {SubscriptionManager_PaymentExecuted_eventFilters as Types_SubscriptionManager_PaymentExecuted_eventFilters} from './Types.gen';

import type {SubscriptionManager_PaymentExecuted_event as Types_SubscriptionManager_PaymentExecuted_event} from './Types.gen';

import type {SubscriptionManager_PaymentFailed_eventFilters as Types_SubscriptionManager_PaymentFailed_eventFilters} from './Types.gen';

import type {SubscriptionManager_PaymentFailed_event as Types_SubscriptionManager_PaymentFailed_event} from './Types.gen';

import type {SubscriptionManager_SubscriptionCancelled_eventFilters as Types_SubscriptionManager_SubscriptionCancelled_eventFilters} from './Types.gen';

import type {SubscriptionManager_SubscriptionCancelled_event as Types_SubscriptionManager_SubscriptionCancelled_event} from './Types.gen';

import type {SubscriptionManager_SubscriptionCreated_eventFilters as Types_SubscriptionManager_SubscriptionCreated_eventFilters} from './Types.gen';

import type {SubscriptionManager_SubscriptionCreated_event as Types_SubscriptionManager_SubscriptionCreated_event} from './Types.gen';

import type {SubscriptionManager_SubscriptionPaused_eventFilters as Types_SubscriptionManager_SubscriptionPaused_eventFilters} from './Types.gen';

import type {SubscriptionManager_SubscriptionPaused_event as Types_SubscriptionManager_SubscriptionPaused_event} from './Types.gen';

import type {SubscriptionManager_SubscriptionResumed_eventFilters as Types_SubscriptionManager_SubscriptionResumed_eventFilters} from './Types.gen';

import type {SubscriptionManager_SubscriptionResumed_event as Types_SubscriptionManager_SubscriptionResumed_event} from './Types.gen';

import type {SubscriptionManager_TokenAdded_eventFilters as Types_SubscriptionManager_TokenAdded_eventFilters} from './Types.gen';

import type {SubscriptionManager_TokenAdded_event as Types_SubscriptionManager_TokenAdded_event} from './Types.gen';

import type {SubscriptionManager_TokenRemoved_eventFilters as Types_SubscriptionManager_TokenRemoved_eventFilters} from './Types.gen';

import type {SubscriptionManager_TokenRemoved_event as Types_SubscriptionManager_TokenRemoved_event} from './Types.gen';

import type {chain as Types_chain} from './Types.gen';

import type {contractRegistrations as Types_contractRegistrations} from './Types.gen';

import type {fnWithEventConfig as Types_fnWithEventConfig} from './Types.gen';

import type {genericContractRegisterArgs as Internal_genericContractRegisterArgs} from 'envio/src/Internal.gen';

import type {genericContractRegister as Internal_genericContractRegister} from 'envio/src/Internal.gen';

import type {genericHandlerArgs as Internal_genericHandlerArgs} from 'envio/src/Internal.gen';

import type {genericHandler as Internal_genericHandler} from 'envio/src/Internal.gen';

import type {handlerContext as Types_handlerContext} from './Types.gen';

import type {onBlockArgs as Envio_onBlockArgs} from 'envio/src/Envio.gen';

import type {onBlockOptions as Envio_onBlockOptions} from 'envio/src/Envio.gen';

export const RelayerRegistry_EmergencySlash_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_EmergencySlash_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_EmergencySlash_eventFilters>> = HandlersJS.RelayerRegistry.EmergencySlash.contractRegister as any;

export const RelayerRegistry_EmergencySlash_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_EmergencySlash_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_EmergencySlash_eventFilters>> = HandlersJS.RelayerRegistry.EmergencySlash.handler as any;

export const RelayerRegistry_ExecutionRecorded_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_ExecutionRecorded_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_ExecutionRecorded_eventFilters>> = HandlersJS.RelayerRegistry.ExecutionRecorded.contractRegister as any;

export const RelayerRegistry_ExecutionRecorded_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_ExecutionRecorded_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_ExecutionRecorded_eventFilters>> = HandlersJS.RelayerRegistry.ExecutionRecorded.handler as any;

export const RelayerRegistry_OwnershipTransferred_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_OwnershipTransferred_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_OwnershipTransferred_eventFilters>> = HandlersJS.RelayerRegistry.OwnershipTransferred.contractRegister as any;

export const RelayerRegistry_OwnershipTransferred_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_OwnershipTransferred_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_OwnershipTransferred_eventFilters>> = HandlersJS.RelayerRegistry.OwnershipTransferred.handler as any;

export const RelayerRegistry_RelayerRegistered_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_RelayerRegistered_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerRegistered_eventFilters>> = HandlersJS.RelayerRegistry.RelayerRegistered.contractRegister as any;

export const RelayerRegistry_RelayerRegistered_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_RelayerRegistered_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerRegistered_eventFilters>> = HandlersJS.RelayerRegistry.RelayerRegistered.handler as any;

export const RelayerRegistry_RelayerRestaked_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_RelayerRestaked_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerRestaked_eventFilters>> = HandlersJS.RelayerRegistry.RelayerRestaked.contractRegister as any;

export const RelayerRegistry_RelayerRestaked_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_RelayerRestaked_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerRestaked_eventFilters>> = HandlersJS.RelayerRegistry.RelayerRestaked.handler as any;

export const RelayerRegistry_RelayerSlashed_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_RelayerSlashed_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerSlashed_eventFilters>> = HandlersJS.RelayerRegistry.RelayerSlashed.contractRegister as any;

export const RelayerRegistry_RelayerSlashed_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_RelayerSlashed_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerSlashed_eventFilters>> = HandlersJS.RelayerRegistry.RelayerSlashed.handler as any;

export const RelayerRegistry_RelayerUnregistered_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_RelayerUnregistered_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerUnregistered_eventFilters>> = HandlersJS.RelayerRegistry.RelayerUnregistered.contractRegister as any;

export const RelayerRegistry_RelayerUnregistered_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_RelayerUnregistered_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerUnregistered_eventFilters>> = HandlersJS.RelayerRegistry.RelayerUnregistered.handler as any;

export const RelayerRegistry_SlashingParametersUpdated_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_SlashingParametersUpdated_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_SlashingParametersUpdated_eventFilters>> = HandlersJS.RelayerRegistry.SlashingParametersUpdated.contractRegister as any;

export const RelayerRegistry_SlashingParametersUpdated_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_SlashingParametersUpdated_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_SlashingParametersUpdated_eventFilters>> = HandlersJS.RelayerRegistry.SlashingParametersUpdated.handler as any;

export const RelayerRegistry_WithdrawalRequested_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_WithdrawalRequested_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_WithdrawalRequested_eventFilters>> = HandlersJS.RelayerRegistry.WithdrawalRequested.contractRegister as any;

export const RelayerRegistry_WithdrawalRequested_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_WithdrawalRequested_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_WithdrawalRequested_eventFilters>> = HandlersJS.RelayerRegistry.WithdrawalRequested.handler as any;

export const SubscriptionManager_CrossChainPaymentInitiated_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_CrossChainPaymentInitiated_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_CrossChainPaymentInitiated_eventFilters>> = HandlersJS.SubscriptionManager.CrossChainPaymentInitiated.contractRegister as any;

export const SubscriptionManager_CrossChainPaymentInitiated_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_CrossChainPaymentInitiated_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_CrossChainPaymentInitiated_eventFilters>> = HandlersJS.SubscriptionManager.CrossChainPaymentInitiated.handler as any;

export const SubscriptionManager_NexusAttestationSubmitted_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_NexusAttestationSubmitted_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_NexusAttestationSubmitted_eventFilters>> = HandlersJS.SubscriptionManager.NexusAttestationSubmitted.contractRegister as any;

export const SubscriptionManager_NexusAttestationSubmitted_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_NexusAttestationSubmitted_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_NexusAttestationSubmitted_eventFilters>> = HandlersJS.SubscriptionManager.NexusAttestationSubmitted.handler as any;

export const SubscriptionManager_NexusAttestationVerified_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_NexusAttestationVerified_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_NexusAttestationVerified_eventFilters>> = HandlersJS.SubscriptionManager.NexusAttestationVerified.contractRegister as any;

export const SubscriptionManager_NexusAttestationVerified_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_NexusAttestationVerified_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_NexusAttestationVerified_eventFilters>> = HandlersJS.SubscriptionManager.NexusAttestationVerified.handler as any;

export const SubscriptionManager_OwnershipTransferred_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_OwnershipTransferred_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_OwnershipTransferred_eventFilters>> = HandlersJS.SubscriptionManager.OwnershipTransferred.contractRegister as any;

export const SubscriptionManager_OwnershipTransferred_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_OwnershipTransferred_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_OwnershipTransferred_eventFilters>> = HandlersJS.SubscriptionManager.OwnershipTransferred.handler as any;

export const SubscriptionManager_PaymentExecuted_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_PaymentExecuted_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_PaymentExecuted_eventFilters>> = HandlersJS.SubscriptionManager.PaymentExecuted.contractRegister as any;

export const SubscriptionManager_PaymentExecuted_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_PaymentExecuted_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_PaymentExecuted_eventFilters>> = HandlersJS.SubscriptionManager.PaymentExecuted.handler as any;

export const SubscriptionManager_PaymentFailed_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_PaymentFailed_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_PaymentFailed_eventFilters>> = HandlersJS.SubscriptionManager.PaymentFailed.contractRegister as any;

export const SubscriptionManager_PaymentFailed_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_PaymentFailed_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_PaymentFailed_eventFilters>> = HandlersJS.SubscriptionManager.PaymentFailed.handler as any;

export const SubscriptionManager_SubscriptionCancelled_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_SubscriptionCancelled_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionCancelled_eventFilters>> = HandlersJS.SubscriptionManager.SubscriptionCancelled.contractRegister as any;

export const SubscriptionManager_SubscriptionCancelled_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_SubscriptionCancelled_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionCancelled_eventFilters>> = HandlersJS.SubscriptionManager.SubscriptionCancelled.handler as any;

export const SubscriptionManager_SubscriptionCreated_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_SubscriptionCreated_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionCreated_eventFilters>> = HandlersJS.SubscriptionManager.SubscriptionCreated.contractRegister as any;

export const SubscriptionManager_SubscriptionCreated_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_SubscriptionCreated_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionCreated_eventFilters>> = HandlersJS.SubscriptionManager.SubscriptionCreated.handler as any;

export const SubscriptionManager_SubscriptionPaused_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_SubscriptionPaused_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionPaused_eventFilters>> = HandlersJS.SubscriptionManager.SubscriptionPaused.contractRegister as any;

export const SubscriptionManager_SubscriptionPaused_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_SubscriptionPaused_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionPaused_eventFilters>> = HandlersJS.SubscriptionManager.SubscriptionPaused.handler as any;

export const SubscriptionManager_SubscriptionResumed_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_SubscriptionResumed_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionResumed_eventFilters>> = HandlersJS.SubscriptionManager.SubscriptionResumed.contractRegister as any;

export const SubscriptionManager_SubscriptionResumed_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_SubscriptionResumed_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionResumed_eventFilters>> = HandlersJS.SubscriptionManager.SubscriptionResumed.handler as any;

export const SubscriptionManager_TokenAdded_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_TokenAdded_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_TokenAdded_eventFilters>> = HandlersJS.SubscriptionManager.TokenAdded.contractRegister as any;

export const SubscriptionManager_TokenAdded_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_TokenAdded_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_TokenAdded_eventFilters>> = HandlersJS.SubscriptionManager.TokenAdded.handler as any;

export const SubscriptionManager_TokenRemoved_contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_TokenRemoved_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_TokenRemoved_eventFilters>> = HandlersJS.SubscriptionManager.TokenRemoved.contractRegister as any;

export const SubscriptionManager_TokenRemoved_handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_TokenRemoved_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_TokenRemoved_eventFilters>> = HandlersJS.SubscriptionManager.TokenRemoved.handler as any;

/** Register a Block Handler. It'll be called for every block by default. */
export const onBlock: (_1:Envio_onBlockOptions<Types_chain>, _2:((_1:Envio_onBlockArgs<Types_handlerContext>) => Promise<void>)) => void = HandlersJS.onBlock as any;

export const SubscriptionManager: {
  CrossChainPaymentInitiated: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_CrossChainPaymentInitiated_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_CrossChainPaymentInitiated_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_CrossChainPaymentInitiated_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_CrossChainPaymentInitiated_eventFilters>>
  }; 
  OwnershipTransferred: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_OwnershipTransferred_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_OwnershipTransferred_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_OwnershipTransferred_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_OwnershipTransferred_eventFilters>>
  }; 
  TokenRemoved: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_TokenRemoved_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_TokenRemoved_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_TokenRemoved_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_TokenRemoved_eventFilters>>
  }; 
  NexusAttestationSubmitted: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_NexusAttestationSubmitted_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_NexusAttestationSubmitted_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_NexusAttestationSubmitted_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_NexusAttestationSubmitted_eventFilters>>
  }; 
  SubscriptionResumed: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_SubscriptionResumed_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionResumed_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_SubscriptionResumed_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionResumed_eventFilters>>
  }; 
  TokenAdded: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_TokenAdded_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_TokenAdded_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_TokenAdded_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_TokenAdded_eventFilters>>
  }; 
  PaymentExecuted: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_PaymentExecuted_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_PaymentExecuted_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_PaymentExecuted_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_PaymentExecuted_eventFilters>>
  }; 
  PaymentFailed: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_PaymentFailed_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_PaymentFailed_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_PaymentFailed_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_PaymentFailed_eventFilters>>
  }; 
  NexusAttestationVerified: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_NexusAttestationVerified_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_NexusAttestationVerified_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_NexusAttestationVerified_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_NexusAttestationVerified_eventFilters>>
  }; 
  SubscriptionCreated: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_SubscriptionCreated_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionCreated_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_SubscriptionCreated_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionCreated_eventFilters>>
  }; 
  SubscriptionCancelled: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_SubscriptionCancelled_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionCancelled_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_SubscriptionCancelled_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionCancelled_eventFilters>>
  }; 
  SubscriptionPaused: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_SubscriptionManager_SubscriptionPaused_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionPaused_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_SubscriptionManager_SubscriptionPaused_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_SubscriptionManager_SubscriptionPaused_eventFilters>>
  }
} = HandlersJS.SubscriptionManager as any;

export const RelayerRegistry: {
  WithdrawalRequested: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_WithdrawalRequested_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_WithdrawalRequested_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_WithdrawalRequested_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_WithdrawalRequested_eventFilters>>
  }; 
  OwnershipTransferred: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_OwnershipTransferred_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_OwnershipTransferred_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_OwnershipTransferred_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_OwnershipTransferred_eventFilters>>
  }; 
  ExecutionRecorded: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_ExecutionRecorded_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_ExecutionRecorded_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_ExecutionRecorded_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_ExecutionRecorded_eventFilters>>
  }; 
  RelayerRegistered: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_RelayerRegistered_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerRegistered_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_RelayerRegistered_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerRegistered_eventFilters>>
  }; 
  RelayerRestaked: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_RelayerRestaked_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerRestaked_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_RelayerRestaked_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerRestaked_eventFilters>>
  }; 
  RelayerSlashed: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_RelayerSlashed_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerSlashed_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_RelayerSlashed_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerSlashed_eventFilters>>
  }; 
  RelayerUnregistered: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_RelayerUnregistered_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerUnregistered_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_RelayerUnregistered_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_RelayerUnregistered_eventFilters>>
  }; 
  SlashingParametersUpdated: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_SlashingParametersUpdated_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_SlashingParametersUpdated_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_SlashingParametersUpdated_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_SlashingParametersUpdated_eventFilters>>
  }; 
  EmergencySlash: {
    handler: Types_fnWithEventConfig<Internal_genericHandler<Internal_genericHandlerArgs<Types_RelayerRegistry_EmergencySlash_event,Types_handlerContext,void>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_EmergencySlash_eventFilters>>; 
    contractRegister: Types_fnWithEventConfig<Internal_genericContractRegister<Internal_genericContractRegisterArgs<Types_RelayerRegistry_EmergencySlash_event,Types_contractRegistrations>>,Types_HandlerTypes_eventConfig<Types_RelayerRegistry_EmergencySlash_eventFilters>>
  }
} = HandlersJS.RelayerRegistry as any;
