/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICrossChainBridge,
  ICrossChainBridgeInterface,
} from "../../../contracts/interfaces/ICrossChainBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "sourceChainId",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "paymentNumber",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "attestationId",
        type: "bytes32",
      },
    ],
    name: "receivePaymentAttestation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICrossChainBridge__factory {
  static readonly abi = _abi;
  static createInterface(): ICrossChainBridgeInterface {
    return new Interface(_abi) as ICrossChainBridgeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICrossChainBridge {
    return new Contract(address, _abi, runner) as unknown as ICrossChainBridge;
  }
}
