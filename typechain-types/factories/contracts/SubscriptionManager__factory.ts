/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SubscriptionManager,
  SubscriptionManagerInterface,
} from "../../contracts/SubscriptionManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "supportedTokenAddresses",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_relayerRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "PaymentExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "PaymentFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "merchant",
        type: "address",
      },
    ],
    name: "SubscriptionCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxPayments",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxTotalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    name: "SubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
    ],
    name: "SubscriptionPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
    ],
    name: "SubscriptionResumed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "PAUSE_REQUEST_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROTOCOL_FEE_BPS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RELAYER_REGISTRY",
    outputs: [
      {
        internalType: "contract RelayerRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESUME_REQUEST_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBSCRIPTION_INTENT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "activeSubscriptionCounts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addSupportedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "subscriber",
            type: "address",
          },
          {
            internalType: "address",
            name: "merchant",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPayments",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct SubscriptionManager.SubscriptionIntent",
        name: "intent",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "createSubscription",
    outputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "currentNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "depositForSubscription",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "ethDeposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "executeSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "executedPayments",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_subscriber",
        type: "address",
      },
    ],
    name: "getNextNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "getNextPaymentTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "getPaymentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "subscriber",
            type: "address",
          },
          {
            internalType: "address",
            name: "merchant",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPayments",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "enum SubscriptionManager.SubscriptionStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SubscriptionManager.Subscription",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "getSubscriptionToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "isSubscriptionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "pauseSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeSupportedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "resumeSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "subscriptionToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "address",
        name: "merchant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPayments",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTotalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "enum SubscriptionManager.SubscriptionStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "subscriber",
            type: "address",
          },
          {
            internalType: "address",
            name: "merchant",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "interval",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPayments",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxTotalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "expiry",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct SubscriptionManager.SubscriptionIntent",
        name: "intent",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verifyIntent",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "withdrawUnusedETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0806040523461049057613458803803809161001c8285610495565b83398101906040818303126104905780516001600160401b0381116104905781019180601f84011215610490578251926001600160401b03841161040a578360051b90604051946100706020840187610495565b855260208086019282010192831161049057602001905b828210610478578461009b602086016104b8565b600160005533156104625760018054336001600160a01b0319821681179092556040519291906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a01b03169081156104205750608052604051610111604082610495565b6005815264417572756d60d81b602090910152604080517facdbaa2d9365d09420a73f7eac1bfd80ef7f0a52431b7ed44c1d8a8f77e56da8916101549082610495565b600181526020810190603160f81b82525190206040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a081526101b860c082610495565b51902060a0526000805260056020526000805160206134388339815191525460ff1661037557600080526005602052600080516020613438833981519152805460ff191660011790556009546801000000000000000081101561040a5760018101806009558110156103f4576000805160206134188339815191520180546001600160a01b03191690556009546000808052600a6020527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e391909155905b80518210156103c557600582901b810160200151600092906001600160a01b031680156103ba57808452600560205260ff60408520541661037557808452600560205260408420805460ff191660011790556009546801000000000000000081101561036157600181018060095581101561034d576000805160206134188339815191520180546001600160a01b03191682179055600954818552600a60205260408520559192600192907f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a49080a25b0190610276565b634e487b7160e01b85526032600452602485fd5b634e487b7160e01b85526041600452602485fd5b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e20616c726561647920737570706f727465640000000000000000006044820152606490fd5b506001919250610346565b604051612f4b90816104cd823960805181818161056e015261201c015260a0518181816110cc0152611db90152f35b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b62461bcd60e51b815260206004820181905260248201527f496e76616c69642072656c6179657220726567697374727920616464726573736044820152606490fd5b631e4fbdf760e01b600052600060045260246000fd5b60208091610485846104b8565b815201910190610087565b600080fd5b601f909101601f19168101906001600160401b0382119082101761040a57604052565b51906001600160a01b03821682036104905756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80631282a90814611b415780631f32768e146119b057806333e5a1d6146119755780634e504922146117ed5780635adf2d8d146117b25780636437ecfc14610e7357806368c4ac261461177357806369e1fd9a146117345780636c00f051146116225780636d69fcaf146114ca5780636f9569711461023b578063715018a61461146d57806376319190146111d35780637656b44014610de057806377bef003146110035780637b0e3b6214610fc85780637f4a7fd014610ed65780638da5cb5b14610ead57806390193b7c14610e7357806391351c8214610e1457806393db9cc414610de057806394259c6c14610d235780639c9b549d1461059d578063a807db7514610558578063be3782281461053c578063c603ff48146104d3578063d21f1ffc1461036d578063d3c7c2c7146102a1578063d655912014610267578063eaef9f2f1461023b578063ebd9c39c1461020f5763f2fde38b0361000e573461020a57602036600319011261020a57610199611bea565b6101a1612d71565b6001600160a01b031680156101f457600180546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b3461020a57602036600319011261020a5760043560005260076020526020604060002054604051908152f35b3461020a57602036600319011261020a5760043560005260036020526020604060002054604051908152f35b3461020a57602036600319011261020a576001600160a01b03610288611bea565b1660005260086020526020604060002054604051908152f35b3461020a57600036600319011261020a576040518060206009549283815201809260096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af9060005b81811061034e5750505081610302910382611c61565b6040519182916020830190602084525180915260408301919060005b81811061032c575050500390f35b82516001600160a01b031684528594506020938401939092019160010161031e565b82546001600160a01b03168452602090930192600192830192016102ec565b3461020a57602036600319011261020a57600435600081815260026020526040902080546001600160a01b03166103a5811515611e1d565b330361048e576009810160ff815460a01c16600581101561047857801590811561046d575b5015610429576103d983612942565b805460ff60a01b1916600160a11b1790558054600191909101546001600160a01b03908116929116907f8065a33ad053d617d51579685a263b0f7c6ec05931dbc0280bfda3a784208959600080a4005b606460405162461bcd60e51b815260206004820152602060248201527f537562736372697074696f6e2063616e6e6f742062652063616e63656c6c65646044820152fd5b6001915014846103ca565b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260206004820152601a60248201527f4f6e6c7920737562736372696265722063616e2063616e63656c0000000000006044820152606490fd5b3461020a57602036600319011261020a576020610534600435806000526002835260406000209061050e60018060a01b038354161515611e1d565b6000526003835261052e6040600020546003600484015493015490611f8b565b90611f7e565b604051908152f35b3461020a57600036600319011261020a57602060405160328152f35b3461020a57600036600319011261020a576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461020a576105ab36611b9f565b91610100810135906001600160a01b036105c482611d79565b1660005260046020526040600020548203610cee576101208101936001600160a01b036105f086611d79565b16600052600560205260ff6040600020541615610cb357610621610615828685611d8d565b81610c8c575b506127e6565b60e08201359042821115610c4757608083013594828611610c03576040840135938415610bbf576060810135908115610b6f5760a0810135928315610b1b5760c0820135946106708589611f8b565b8610610ad6576106b6604061068d6106883687611c83565b612857565b93838251948592602084019788528484013781016000838201520301601f198101835282611c61565b5190206000818152600260205260409020549098906001600160a01b0316610a9157899789906001600160a01b036106ed8b611d79565b1661098e575b6106fc84611d79565b908888602087019c61070d8e611d79565b9061071790611d79565b966040519561072587611c44565b600160a01b600190031686526020860191600160a01b600190031682528d6040870190815260608701908b82526080880192835260a08801938d855260c0890195865260e08901968752610100890197885261012089019a600160a01b60019003168b5261014089019960008b526000526002602052604060002098600160a01b6001900390600160a01b60019003905116166001600160601b0360a01b8a5416178955600160a01b600190039051166001890190600160a01b60019003166001600160601b0360a01b82541617905551600288015551600387015551600486015551600585015551600684015551600783015551600882015560090191600160a01b6001900390600160a01b60019003905116166001600160601b0360a01b8354161782555190600582101561047857805460ff60a01b191660a09290921b60ff60a01b16919091179055600061087c8a611d79565b89825260066020526040822080546001600160a01b0319166001600160a01b039283161790556108ab8b611d79565b1681526008602052604081208054906001820180921161097a579361093861093261092c8d9a9660209f987fb76f505b43aee5831d9f29bf6332a7aa4e48e7016819fbd63de7dbace080f0499b9760c09b976040925560018060a01b0361091184611d79565b168152602060049052206109258154611fe6565b9055611d79565b9b611d79565b95611d79565b986040519960018060a01b03168a528c8a015260408901526060880152608087015260a086015260018060a01b03169460018060a01b031693a4604051908152f35b634e487b7160e01b83526011600452602483fd5b98505061099b8488611f8b565b6109ed60206001600160a01b036109b18e611d79565b166109bb86611d79565b604051636eb1769f60e11b81526001600160a01b03909116600482015230602482015292839190829081906044820190565b03915afa908115610a8557600091610a53575b5010610a0e57888a986106f3565b60405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420746f6b656e20616c6c6f77616e6365000000006044820152606490fd5b90506020813d602011610a7d575b81610a6e60209383611c61565b8101031261020a57518c610a00565b3d9150610a61565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601b60248201527f537562736372697074696f6e20616c72656164792065786973747300000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4d617820746f74616c20616d6f756e7420696e73756666696369656e740000006044820152606490fd5b60405162461bcd60e51b815260206004820152602660248201527f4d6178207061796d656e7473206d7573742062652067726561746572207468616044820152656e207a65726f60d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f496e74657276616c206d7573742062652067726561746572207468616e207a65604482015261726f60f01b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152fd5b606460405162461bcd60e51b815260206004820152602060248201527f53746172742074696d65206d757374206265206265666f7265206578706972796044820152fd5b60405162461bcd60e51b815260206004820152601b60248201527f537562736372697074696f6e20696e74656e74206578706972656400000000006044820152606490fd5b90506001600160a01b03610c9f85611d79565b6001600160a01b039092169116148761061b565b60405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c6964206e6f6e636560981b6044820152606490fd5b3461020a57602036600319011261020a5760043560005260026020526101606040600020610dde60018060a01b038254169160018060a01b036001820154169060028101546003820154600483015460058401549060068501549260078601549460096008880154970154976040519a8b5260208b015260408a01526060890152608088015260a087015260c086015260e085015261010084015260018060a01b03811661012084015260ff61014084019160a01c16611bdd565bf35b3461020a57602036600319011261020a576004356000526006602052602060018060a01b0360406000205416604051908152f35b3461020a57602036600319011261020a57600435600090815260026020526040902080546001600160a01b0316151580610e56575b6020906040519015158152f35b506009015460a01c60ff1660058110156104785760209015610e49565b3461020a57602036600319011261020a576001600160a01b03610e94611bea565b1660005260046020526020604060002054604051908152f35b3461020a57600036600319011261020a576001546040516001600160a01b039091168152602090f35b602036600319011261020a57600435610eed612920565b80600052600260205260ff60096040600020610f4060018060a01b03825416610f17811515611e1d565b600086815260066020526040902054610f39906001600160a01b031615611e69565b3314611eac565b015460a01c1660058110156104785780610f639115908115610fbd575b50611f32565b3415610f8a5760005260076020526040600020610f81348254611f7e565b90556001600055005b60405162461bcd60e51b815260206004820152600b60248201526a139bc8115512081cd95b9d60aa1b6044820152606490fd5b600191501483610f5d565b3461020a57600036600319011261020a5760206040517fd806147178df513a750f9faa80312ba59509af708425df523403bf058ce4b2448152f35b3461020a5761101136611c14565b9082600052600260205260406000209160018060a01b0383541690611037821515611e1d565b600984019260ff845460a01c1660058110156104785760010361118e576111296111206111389361111a869485600052600460205260406000205460405160208101917fd806147178df513a750f9faa80312ba59509af708425df523403bf058ce4b24483528d60408301526060820152606081526110b7608082611c61565b51902060405161190160f01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006022830152604282019290925261110f81606281015b03601f198101835282611c61565b519020923691611d42565b90612d9a565b90929192612dd6565b6001600160a01b0316146127e6565b6000526004602052604060002061114f8154611fe6565b9055805460ff60a01b19169055546001600160a01b0316907faa36c7b46a257244f7f4be84a7163f464e536b2f812d6c308ef7856c58ba925d600080a3005b60405162461bcd60e51b815260206004820152601760248201527f537562736372697074696f6e206e6f74207061757365640000000000000000006044820152606490fd5b3461020a57602036600319011261020a576111ec611bea565b6111f4612d71565b6001600160a01b031680156114285780600052600560205260ff60406000205416156113ed578060005260086020526040600020546113a857806000526005602052604060002060ff19815416905580600052600a602052604060002054801561136d576009548082036112de575b505060095480156112c8576000190161127b81612826565b81549060018060a01b039060031b1b1916905560095580600052600a602052600060408120557f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd3600080a2005b634e487b7160e01b600052603160045260246000fd5b6000198101908111611357576112f390612826565b905460039190911b1c6001600160a01b03166000198201828111611357578161131e61134292612826565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b600052600a6020526040600020558180611263565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b8152602060048201526013602482015272746f6b656e20696e646578206d697373696e6760681b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f41637469766520737562736372697074696f6e732070726573656e74000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260136024820152721d1bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f63616e6e6f742072656d6f76652065746820737570706f7274000000000000006044820152606490fd5b3461020a57600036600319011261020a57611486612d71565b600180546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461020a57602036600319011261020a576114e3611bea565b6114eb612d71565b6001600160a01b0381169081156115e75781600052600560205260ff604060002054166115a2578160005260056020526040600020600160ff19825416179055600954906801000000000000000082101561158c5761131e8260016115539401600955612826565b60095481600052600a6020526040600020557f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a4600080a2005b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601760248201527f546f6b656e20616c726561647920737570706f727465640000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272195d1a08185b1c9958591e48195b98589b1959606a1b6044820152606490fd5b3461020a5761163036611c14565b82600052600260205260406000209160018060a01b0383541690611655821515611e1d565b600984019260ff845460a01c16600581101561047857611120849261111a6116d8956116846111299515611f32565b85600052600460205260406000205460405160208101917fb4d196c0bbe67585f3497477b08a7dedca34f0794cef101cf570c3e415f6d93983528d60408301526060820152606081526110b7608082611c61565b600052600460205260406000206116ef8154611fe6565b9055805460ff60a01b1916600160a01b179055546001600160a01b0316907fded8d4d23682b33f0e79da6698526d10c5f7ec65705c1903e9ac7f78b5e3a51b600080a3005b3461020a57604036600319011261020a576024356001600160a01b038116810361020a5761176c90611764612920565b600435611ff5565b6001600055005b3461020a57602036600319011261020a576001600160a01b03611794611bea565b166000526005602052602060ff604060002054166040519015158152f35b3461020a57600036600319011261020a5760206040517fb4d196c0bbe67585f3497477b08a7dedca34f0794cef101cf570c3e415f6d9398152f35b3461020a57602036600319011261020a57600435611809612920565b80600052600260205260ff6009604060002061183360018060a01b03825416610f17811515611e1d565b015460a01c16600581101590816104785760028114918215611967575b8215611956575b505015611911578060005260076020526040600020549081156118d7576000808093819382526007602052816040812055335af1611893611eea565b50156118a0576001600055005b60405162461bcd60e51b815260206004820152600f60248201526e15da5d1a191c985dc819985a5b1959608a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f537562736372697074696f6e207374696c6c20616374697665000000000000006044820152606490fd5b909150610478576004148280611857565b506003811491506000611850565b3461020a57600036600319011261020a5760206040517f316f763395dccfb0903cc163e1283e12acbf4ec58e2882ed12c2f13bac9864618152f35b3461020a57602036600319011261020a5760006101406040516119d281611c44565b8281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201528261010082015282610120820152015260043560005260026020526040600020604051611a2b81611c44565b60018060a01b03825416815260018060a01b0360018301541691602082019283526002810154604083019081526003820154916060840192835260048101549060808501918252600581015460a08601908152600682015460c0870190815260078301549160e0880192835260096008850154946101008a0195865201549460ff6101208a019660018060a01b038116885260a01c16976101408a019760058a1015610478576101609b610dde9a8a526040519b60018060a01b039051168c5260018060a01b0390511660208c01525160408b01525160608a01525160808901525160a08801525160c08701525160e08601525161010085015260018060a01b0390511661012084015251610140830190611bdd565b3461020a576040611b5a611b5436611b9f565b91611d8d565b825191151582526001600160a01b03166020820152f35b9181601f8401121561020a5782359167ffffffffffffffff831161020a576020838186019501011161020a57565b906003198201610160811261020a576101401361020a57600491610144359067ffffffffffffffff821161020a57611bd991600401611b71565b9091565b9060058210156104785752565b600435906001600160a01b038216820361020a57565b35906001600160a01b038216820361020a57565b90604060031983011261020a57600435916024359067ffffffffffffffff821161020a57611bd991600401611b71565b610160810190811067ffffffffffffffff82111761158c57604052565b90601f8019910116810190811067ffffffffffffffff82111761158c57604052565b91908261014091031261020a57604051610140810181811067ffffffffffffffff82111761158c57604052610120611d21818395611cc081611c00565b8552611cce60208201611c00565b602086015260408101356040860152606081013560608601526080810135608086015260a081013560a086015260c081013560c086015260e081013560e086015261010081013561010086015201611c00565b910152565b67ffffffffffffffff811161158c57601f01601f191660200190565b929192611d4e82611d26565b91611d5c6040519384611c61565b82948184528183011161020a578281602093846000960137010152565b356001600160a01b038116810361020a5790565b90611dfb939261111a611df292611da76106883687611c83565b60405161190160f01b602082019081527f00000000000000000000000000000000000000000000000000000000000000006022830152604282019290925261110f8160628101611101565b90949194612dd6565b6001600160a01b0390611e0d90611d79565b166001600160a01b038316149190565b15611e2457565b60405162461bcd60e51b815260206004820152601b60248201527f537562736372697074696f6e20646f6573206e6f7420657869737400000000006044820152606490fd5b15611e7057565b60405162461bcd60e51b81526020600482015260146024820152732737ba1022aa241039bab139b1b934b83a34b7b760611b6044820152606490fd5b15611eb357565b60405162461bcd60e51b815260206004820152600f60248201526e27b7363c9039bab139b1b934b132b960891b6044820152606490fd5b3d15611f15573d90611efb82611d26565b91611f096040519384611c61565b82523d6000602084013e565b606090565b9081602091031261020a5751801515810361020a5790565b15611f3957565b60405162461bcd60e51b815260206004820152601760248201527f537562736372697074696f6e206e6f74206163746976650000000000000000006044820152606490fd5b9190820180921161135757565b8181029291811591840414171561135757565b9190820391821161135757565b60405190611fba604083611c61565b601882527f4d65726368616e74207472616e73666572206661696c656400000000000000006020830152565b60001981146113575760010190565b90336001600160a01b03909116036127ae576040516385c99e2b60e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691600091602081602481875afa9081156127a3578391612774575b5015612736578082526002602052604082208054612087906001600160a01b03161515611e1d565b600981019360ff855460a01c166005811015612722576120a79015611f32565b828452600660209081526040808620546001600160a01b0316808752600590925285205460ff16156126dd57600783015442116125fc57838552600260205261210d60408620858752600360205261052e60408820546003600484015493015490611f8b565b42106125c15783855260036020526040852054600181018091116125ad576002840190815492603284028481046032148515171561259957612710900493612155828961298d565b156124db5750612166848454611f9e565b8890896060918785156000146124cb57508a825260076020526040822054875411156124235750505060405161219d604082611c61565b601881527f496e73756666696369656e7420455448206465706f73697400000000000000006020820152905b156122e657507f8edd31b1042c3b68388248a57905bb81bd5b2abd7334d9e2cee14b88a479a23d60a08892838b52600360205260408b2061220a8154611fe6565b9055600180831b0389541694600180841b0360018b01541696549060405192835260208301526040820152866060820152336080820152a4813b156122e25784916064839260405194859384926344a7c63960e11b84523360048501526001602485015260448401525af180156122d7579084916122be575b5082905260036020526005604084205491015411156122a157505050565b6122aa90612942565b50805460ff60a01b1916600160a21b179055565b816122c891611c61565b6122d3578238612283565b8280fd5b6040513d86823e3d90fd5b8480fd5b9350505093919495508051156123e5575b60018060a01b03835416926001808060a01b039101541693549060405191825260406020830152805190816040840152875b8281106123cf575050906060818389837f8d07bb7d7ffc0fde6ebc3e0e718c1fdbfac73eb7ea593da5566fa86a1c3c1a309684010152601f80199101168101030190a4803b156123cb578180916064604051809481936344a7c63960e11b83523360048401528160248401528160448401525af180156123c0576123ab575050565b6123b6828092611c61565b6123bd5750565b80fd5b6040513d84823e3d90fd5b5080fd5b8060208092840101516060828701015201612329565b506040516123f4604082611c61565b601881527f5061796d656e7420657865637574696f6e206661696c6564000000000000000060208201526122f7565b60018a0154829182918291906001600160a01b03165af1612442611eea565b506124565750612450611fab565b906121c9565b90508880808088335af1612468611eea565b5015612490578354888a52600760205261248760408b20918254611f9e565b905560016121c9565b60405162461bcd60e51b8152602060048201526013602482015272119959481d1c985b9cd9995c8819985a5b1959606a1b6044820152606490fd5b9250905061245092508389612af2565b9694979850505050507f8d07bb7d7ffc0fde6ebc3e0e718c1fdbfac73eb7ea593da5566fa86a1c3c1a30608060018060a01b03845416936001808060a01b03910154169460405190815260406020820152601d60408201527f457865637574696f6e20636f6e73747261696e7473206e6f74206d65740000006060820152a4803b156123cb578180916064604051809481936344a7c63960e11b83523360048401528160248401528160448401525af180156123c0576123ab575050565b634e487b7160e01b89526011600452602489fd5b634e487b7160e01b86526011600452602486fd5b60405162461bcd60e51b815260206004820152601360248201527214185e5b595b9d081b9bdd08191d59481e595d606a1b6044820152606490fd5b50929361260a839293612942565b805460ff60a01b1916600360a01b1790558154600183015460029093015460408051918252602082018190526014908201527314dd589cd8dc9a5c1d1a5bdb88195e1c1a5c995960621b60608201526001600160a01b03938416939190911691907f8d07bb7d7ffc0fde6ebc3e0e718c1fdbfac73eb7ea593da5566fa86a1c3c1a3090608090a4803b156123cb578180916064604051809481936344a7c63960e11b83523360048401528160248401528160448401525af180156123c0576126d0575050565b816126da91611c61565b50565b60405162461bcd60e51b815260206004820152601960248201527f546f6b656e206e6f206c6f6e67657220737570706f72746564000000000000006044820152606490fd5b634e487b7160e01b85526021600452602485fd5b60405162461bcd60e51b815260206004820152601660248201527514995b185e595c881b9bdd08185d5d1a1bdc9a5e995960521b6044820152606490fd5b612796915060203d60201161279c575b61278e8183611c61565b810190611f1a565b3861205f565b503d612784565b6040513d85823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f0a4cad8c2f2cae440dad2e6dac2e8c6d60831b6044820152606490fd5b156127ed57565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60095481101561284157600960005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60018060a01b038151169060018060a01b03602082015116906040810151906060810151608082015160a083015160c08401519160e0850151936101008601519561012060018060a01b0391015116966040519860208a019a7f316f763395dccfb0903cc163e1283e12acbf4ec58e2882ed12c2f13bac9864618c5260408b015260608a0152608089015260a088015260c087015260e0860152610100850152610120840152610140830152610160820152610160815261291a61018082611c61565b51902090565b600260005414612931576002600055565b633ee5aeb560e01b60005260046000fd5b600052600660205260018060a01b036040600020541680600052600860205260406000205461296e5750565b6000526008602052604060002080549060001982019182116113575755565b8060005260026020526040600020906000526003602052604060002054916005820154831015612aad576129d16129cc93600284015494858092611f8b565b611f7e565b600683015410612aad576001600160a01b0316908115612aea57546040516370a0823160e01b81526001600160a01b03909116600482018190529190602081602481855afa8015610a85578491600091612ab5575b5010612aad57604051636eb1769f60e11b81526001600160a01b03929092166004830152306024830152602090829060449082905afa908115610a8557600091612a7b575b5010612a7657600190565b600090565b90506020813d602011612aa5575b81612a9660209383611c61565b8101031261020a575138612a6b565b3d9150612a89565b505050600090565b9150506020813d602011612ae2575b81612ad160209383611c61565b8101031261020a5783905138612a26565b3d9150612ac4565b505050600190565b600281015481546040516370a0823160e01b81526001600160a01b039182166004820181905293969594909116939190602081602481885afa8015610a85578291600091612d3c575b5010612cf857604051636eb1769f60e11b81526001600160a01b0384166004820152306024820152602081604481885afa908115610a8557600091612cc6575b5010612c785760018501546040516323b872dd60e01b60208201526001600160a01b039384166024820152921660448301526064820152612bc990612bc38160848101611101565b82612e48565b15612c675791546040516323b872dd60e01b60208201526001600160a01b039091166024820152336044820152606480820192909252908152612c1691612c11608483611c61565b612e48565b15612c3357600190604051612c2c602082611c61565b6000815290565b600090604051612c44604082611c61565b6013815272119959481d1c985b9cd9995c8819985a5b1959606a1b602082015290565b505050600090612c75611fab565b90565b5050505050600090604051612c8e606082611c61565b602281527f496e73756666696369656e7420616c6c6f77616e636520666f72207061796d656020820152611b9d60f21b604082015290565b90506020813d602011612cf0575b81612ce160209383611c61565b8101031261020a575138612b7b565b3d9150612cd4565b505050505050600090604051612d0f604082611c61565b602081527f496e73756666696369656e742062616c616e636520666f72207061796d656e74602082015290565b9150506020813d602011612d69575b81612d5860209383611c61565b8101031261020a5781905138612b3b565b3d9150612d4b565b6001546001600160a01b03163303612d8557565b63118cdaa760e01b6000523360045260246000fd5b8151919060418303612dcb57612dc492506020820151906060604084015193015160001a90612e8c565b9192909190565b505060009160029190565b91909160048110156104785780612dec57509050565b600060018203612e075763f645eedf60e01b60005260046000fd5b5060028103612e25578263fce698f760e01b60005260045260246000fd5b9091600360009214612e35575050565b6335e2f38360e21b825260045260249150fd5b600091829182602083519301915af1612e5f611eea565b9015612e86578051908115612e7f57602080612c75938301019101611f1a565b5050600190565b50600090565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411612f09579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15610a85576000516001600160a01b03811615612efd5790600090600090565b50600090600190600090565b5050506000916003919056fea2646970667358221220282ed00533d21ab5955f8439b64617497a7e91e1ab1fe67d264628859cb2651a64736f6c634300081c00336e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af05b8ccbb9d4d8fb16ea74ce3c29a41f1b461fbdaff4714a0d9a8eb05499746bc";

type SubscriptionManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscriptionManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubscriptionManager__factory extends ContractFactory {
  constructor(...args: SubscriptionManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    supportedTokenAddresses: AddressLike[],
    _relayerRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      supportedTokenAddresses,
      _relayerRegistry,
      overrides || {}
    );
  }
  override deploy(
    supportedTokenAddresses: AddressLike[],
    _relayerRegistry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      supportedTokenAddresses,
      _relayerRegistry,
      overrides || {}
    ) as Promise<
      SubscriptionManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SubscriptionManager__factory {
    return super.connect(runner) as SubscriptionManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionManagerInterface {
    return new Interface(_abi) as SubscriptionManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SubscriptionManager {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SubscriptionManager;
  }
}
